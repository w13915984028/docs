"use strict";(self.webpackChunkharvester_docs=self.webpackChunkharvester_docs||[]).push([[70872],{72883:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>g,default:()=>h,frontMatter:()=>m,metadata:()=>d,toc:()=>f});r(67294);var i=r(3905),n=r(54734),a=r(90238),s=r.n(a),o=r(36765),p=r(99473),l=r(50690),c=r(88337),u=r(48951),y=r(50551);const m={id:"list-virtual-machine-backup-for-all-namespaces",title:"List Virtual Machine Backups For All Namespaces",description:"Get a list of all VirtualMachineBackup objects.",sidebar_label:"List Virtual Machine Backups For All Namespaces",hide_title:!0,hide_table_of_contents:!0,api:"",sidebar_class_name:"get api-method",info_path:"version-v1.3/api/harvester-apis",custom_edit_url:null},g=void 0,d={unversionedId:"api/list-virtual-machine-backup-for-all-namespaces",id:"version-v1.3/api/list-virtual-machine-backup-for-all-namespaces",title:"List Virtual Machine Backups For All Namespaces",description:"Get a list of all VirtualMachineBackup objects.",source:"@site/versioned_docs/version-v1.3/api/list-virtual-machine-backup-for-all-namespaces.api.mdx",sourceDirName:"api",slug:"/api/list-virtual-machine-backup-for-all-namespaces",permalink:"/v1.3/api/list-virtual-machine-backup-for-all-namespaces",draft:!1,editUrl:null,tags:[],version:"v1.3",frontMatter:{id:"list-virtual-machine-backup-for-all-namespaces",title:"List Virtual Machine Backups For All Namespaces",description:"Get a list of all VirtualMachineBackup objects.",sidebar_label:"List Virtual Machine Backups For All Namespaces",hide_title:!0,hide_table_of_contents:!0,api:"",sidebar_class_name:"get api-method",info_path:"version-v1.3/api/harvester-apis",custom_edit_url:null},sidebar:"api",previous:{title:"List Upgrades For All Namespaces",permalink:"/v1.3/api/list-upgrade-for-all-namespaces"},next:{title:"List Virtual Machines For All Namespaces",permalink:"/v1.3/api/list-virtual-machine-for-all-namespaces"}},b={},f=[{value:"Request",id:"request",level:2}],k={toc:f},v="wrapper";function h({components:e,...t}){return(0,i.kt)(v,{...k,...t,components:e,mdxType:"MDXLayout"},(0,i.kt)("h1",{className:"openapi__heading"},"List Virtual Machine Backups For All Namespaces"),(0,i.kt)(s(),{method:"get",path:"/apis/harvesterhci.io/v1beta1/virtualmachinebackups",mdxType:"MethodEndpoint"}),(0,i.kt)("p",null,"Get a list of all VirtualMachineBackup objects."),(0,i.kt)("h2",{id:"request"},"Request"),(0,i.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Query Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"continue",in:"query",description:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"fieldSelector",in:"query",description:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"includeUninitialized",in:"query",description:"If true, partially initialized resources are included in the response.",schema:{type:"boolean"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"labelSelector",in:"query",description:"A selector to restrict the list of returned objects by their labels. Defaults to everything",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"limit",in:"query",description:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"resourceVersion",in:"query",description:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"timeoutSeconds",in:"query",description:"TimeoutSeconds for the list/watch call.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"watch",in:"query",description:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",schema:{type:"boolean"}},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)(n.Z,{label:void 0,id:void 0,mdxType:"ApiTabs"},(0,i.kt)(y.default,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"OK")),(0,i.kt)("div",null,(0,i.kt)(o.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(y.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["source"],properties:{source:{default:{},allOf:[{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"}]},type:{type:"string"}},title:"harvesterhci.io.v1beta1.VirtualMachineBackupSpec"}]},status:{type:"object",properties:{backupTarget:{type:"object",properties:{bucketName:{type:"string"},bucketRegion:{type:"string"},endpoint:{type:"string"}},title:"harvesterhci.io.v1beta1.BackupTarget"},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},creationTime:{type:"string",default:"",title:"k8s.io.v1.Time"},csiDriverVolumeSnapshotClassNames:{type:"object",additionalProperties:{type:"string",default:""}},error:{type:"object",properties:{message:{type:"string"},time:{type:"string",default:"",title:"k8s.io.v1.Time"}},title:"harvesterhci.io.v1beta1.Error"},progress:{type:"integer",format:"int32"},readyToUse:{type:"boolean"},secretBackups:{type:"array",items:{default:{},allOf:[{type:"object",properties:{data:{type:"object",additionalProperties:{type:"string",format:"byte"}},name:{type:"string"}},title:"harvesterhci.io.v1beta1.SecretBackup"}]}},source:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["template"],properties:{dataVolumeTemplates:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{checkpoints:{type:"array",items:{default:{},allOf:[{type:"object",required:["current","previous"],properties:{current:{type:"string",default:""},previous:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint"}]}},contentType:{type:"string"},finalCheckpoint:{type:"boolean"},preallocation:{type:"boolean"},priorityClassName:{type:"string"},pvc:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"},source:{type:"object",properties:{blank:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage"},gcs:{type:"object",required:["url"],properties:{secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS"},http:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},extraHeaders:{type:"array",items:{type:"string",default:""}},secretExtraHeaders:{type:"array",items:{type:"string",default:""}},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP"},imageio:{type:"object",required:["diskId","url"],properties:{certConfigMap:{type:"string"},diskId:{type:"string",default:""},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO"},pvc:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC"},registry:{type:"object",properties:{certConfigMap:{type:"string"},imageStream:{type:"string"},pullMethod:{type:"string"},secretRef:{type:"string"},url:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry"},s3:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3"},snapshot:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot"},upload:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload"},vddk:{type:"object",properties:{backingFile:{type:"string"},initImageURL:{type:"string"},secretRef:{type:"string"},thumbprint:{type:"string"},url:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource"},sourceRef:{type:"object",required:["kind","name"],properties:{kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef"},storage:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec"}]},status:{type:"object",title:"kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus"}},title:"kubevirt.io.api.core.v1.DataVolumeTemplateSpec"}]}},instancetype:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.InstancetypeMatcher"},liveUpdateFeatures:{type:"object",properties:{affinity:{type:"object",title:"kubevirt.io.api.core.v1.LiveUpdateAffinity"},cpu:{type:"object",properties:{maxSockets:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.LiveUpdateCPU"},memory:{type:"object",properties:{maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.LiveUpdateMemory"}},title:"kubevirt.io.api.core.v1.LiveUpdateFeatures"},preference:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.PreferenceMatcher"},runStrategy:{type:"string"},running:{type:"boolean"},template:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["domain"],properties:{accessCredentials:{type:"array",items:{default:{},allOf:[{type:"object",properties:{sshPublicKey:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{configDrive:{type:"object",title:"kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"},noCloud:{type:"object",title:"kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation"},qemuGuestAgent:{type:"object",required:["users"],properties:{users:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"set"}},title:"kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential"},userPassword:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{qemuGuestAgent:{type:"object",title:"kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredential"}},title:"kubevirt.io.api.core.v1.AccessCredential"}]},"x-kubernetes-list-type":"atomic"},affinity:{type:"object",properties:{nodeAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["preference","weight"],properties:{preference:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.PreferredSchedulingTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"object",required:["nodeSelectorTerms"],properties:{nodeSelectorTerms:{type:"array",items:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelector"}},title:"k8s.io.v1.NodeAffinity"},podAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAffinity"},podAntiAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAntiAffinity"}},title:"k8s.io.v1.Affinity"},architecture:{type:"string"},dnsConfig:{type:"object",properties:{nameservers:{type:"array",items:{type:"string",default:""}},options:{type:"array",items:{default:{},allOf:[{type:"object",properties:{name:{type:"string"},value:{type:"string"}},title:"k8s.io.v1.PodDNSConfigOption"}]}},searches:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.PodDNSConfig"},dnsPolicy:{type:"string",enum:["ClusterFirst","ClusterFirstWithHostNet","Default","None"]},domain:{default:{},allOf:[{type:"object",required:["devices"],properties:{chassis:{type:"object",properties:{asset:{type:"string"},manufacturer:{type:"string"},serial:{type:"string"},sku:{type:"string"},version:{type:"string"}},title:"kubevirt.io.api.core.v1.Chassis"},clock:{type:"object",properties:{timer:{type:"object",properties:{hpet:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.HPETTimer"},hyperv:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.HypervTimer"},kvm:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.KVMTimer"},pit:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.PITTimer"},rtc:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"},track:{type:"string"}},title:"kubevirt.io.api.core.v1.RTCTimer"}},title:"kubevirt.io.api.core.v1.Timer"},timezone:{type:"string"},utc:{type:"object",properties:{offsetSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.ClockOffsetUTC"}},title:"kubevirt.io.api.core.v1.Clock"},cpu:{type:"object",properties:{cores:{type:"integer",format:"int64"},dedicatedCpuPlacement:{type:"boolean"},features:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""},policy:{type:"string"}},title:"kubevirt.io.api.core.v1.CPUFeature"}]}},isolateEmulatorThread:{type:"boolean"},maxSockets:{type:"integer",format:"int64"},model:{type:"string"},numa:{type:"object",properties:{guestMappingPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough"}},title:"kubevirt.io.api.core.v1.NUMA"},realtime:{type:"object",properties:{mask:{type:"string"}},title:"kubevirt.io.api.core.v1.Realtime"},sockets:{type:"integer",format:"int64"},threads:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.CPU"},devices:{default:{},allOf:[{type:"object",properties:{autoattachGraphicsDevice:{type:"boolean"},autoattachInputDevice:{type:"boolean"},autoattachMemBalloon:{type:"boolean"},autoattachPodInterface:{type:"boolean"},autoattachSerialConsole:{type:"boolean"},autoattachVSOCK:{type:"boolean"},blockMultiQueue:{type:"boolean"},clientPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.ClientPassthroughDevices"},disableHotplug:{type:"boolean"},disks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{blockSize:{type:"object",properties:{custom:{type:"object",required:["logical","physical"],properties:{logical:{type:"integer",format:"int32",default:0},physical:{type:"integer",format:"int32",default:0}},title:"kubevirt.io.api.core.v1.CustomBlockSize"},matchVolume:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.BlockSize"},bootOrder:{type:"integer",format:"int32"},cache:{type:"string"},cdrom:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},tray:{type:"string"}},title:"kubevirt.io.api.core.v1.CDRomTarget"},dedicatedIOThread:{type:"boolean"},disk:{type:"object",properties:{bus:{type:"string"},pciAddress:{type:"string"},readonly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.DiskTarget"},errorPolicy:{type:"string"},io:{type:"string"},lun:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},reservation:{type:"boolean"}},title:"kubevirt.io.api.core.v1.LunTarget"},name:{type:"string",default:""},serial:{type:"string"},shareable:{type:"boolean"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Disk"}]}},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetrics"},filesystems:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","virtiofs"],properties:{name:{type:"string",default:""},virtiofs:{type:"object",title:"kubevirt.io.api.core.v1.FilesystemVirtiofs"}},title:"kubevirt.io.api.core.v1.Filesystem"}]},"x-kubernetes-list-type":"atomic"},gpus:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"},virtualGPUOptions:{type:"object",properties:{display:{type:"object",properties:{enabled:{type:"boolean"},ramFB:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.VGPUDisplayOptions"}},title:"kubevirt.io.api.core.v1.VGPUOptions"}},title:"kubevirt.io.api.core.v1.GPU"}]},"x-kubernetes-list-type":"atomic"},hostDevices:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.HostDevice"}]},"x-kubernetes-list-type":"atomic"},inputs:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","type"],properties:{bus:{type:"string"},name:{type:"string",default:""},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Input"}]}},interfaces:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{acpiIndex:{type:"integer",format:"int32"},binding:{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.PluginBinding"},bootOrder:{type:"integer",format:"int32"},bridge:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceBridge"},dhcpOptions:{type:"object",properties:{bootFileName:{type:"string"},ntpServers:{type:"array",items:{type:"string",default:""}},privateOptions:{type:"array",items:{default:{},allOf:[{type:"object",required:["option","value"],properties:{option:{type:"integer",format:"int32",default:0},value:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DHCPPrivateOptions"}]}},tftpServerName:{type:"string"}},title:"kubevirt.io.api.core.v1.DHCPOptions"},macAddress:{type:"string"},macvtap:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMacvtap"},masquerade:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMasquerade"},model:{type:"string"},name:{type:"string",default:""},passt:{type:"object",title:"kubevirt.io.api.core.v1.InterfacePasst"},pciAddress:{type:"string"},ports:{type:"array",items:{default:{},allOf:[{type:"object",required:["port"],properties:{name:{type:"string"},port:{type:"integer",format:"int32",default:0},protocol:{type:"string"}},title:"kubevirt.io.api.core.v1.Port"}]}},slirp:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSlirp"},sriov:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSRIOV"},state:{type:"string"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Interface"}]}},logSerialConsole:{type:"boolean"},networkInterfaceMultiqueue:{type:"boolean"},rng:{type:"object",title:"kubevirt.io.api.core.v1.Rng"},sound:{type:"object",required:["name"],properties:{model:{type:"string"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.SoundDevice"},tpm:{type:"object",properties:{persistent:{type:"boolean"}},title:"kubevirt.io.api.core.v1.TPMDevice"},useVirtioTransitional:{type:"boolean"},watchdog:{type:"object",required:["name"],properties:{i6300esb:{type:"object",properties:{action:{type:"string"}},title:"kubevirt.io.api.core.v1.I6300ESBWatchdog"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Watchdog"}},title:"kubevirt.io.api.core.v1.Devices"}]},features:{type:"object",properties:{acpi:{default:{},allOf:[{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}]},apic:{type:"object",properties:{enabled:{type:"boolean"},endOfInterrupt:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureAPIC"},hyperv:{type:"object",properties:{evmcs:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},frequencies:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},ipi:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reenlightenment:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},relaxed:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reset:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},runtime:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},spinlocks:{type:"object",properties:{enabled:{type:"boolean"},spinlocks:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.FeatureSpinlocks"},synic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},synictimer:{type:"object",properties:{direct:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SyNICTimer"},tlbflush:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vapic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vendorid:{type:"object",properties:{enabled:{type:"boolean"},vendorid:{type:"string"}},title:"kubevirt.io.api.core.v1.FeatureVendorID"},vpindex:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.FeatureHyperv"},kvm:{type:"object",properties:{hidden:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureKVM"},pvspinlock:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},smm:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.Features"},firmware:{type:"object",properties:{bootloader:{type:"object",properties:{bios:{type:"object",properties:{useSerial:{type:"boolean"}},title:"kubevirt.io.api.core.v1.BIOS"},efi:{type:"object",properties:{persistent:{type:"boolean"},secureBoot:{type:"boolean"}},title:"kubevirt.io.api.core.v1.EFI"}},title:"kubevirt.io.api.core.v1.Bootloader"},kernelBoot:{type:"object",properties:{container:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},initrdPath:{type:"string"},kernelPath:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBootContainer"},kernelArgs:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBoot"},serial:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.api.core.v1.Firmware"},ioThreadsPolicy:{type:"string"},launchSecurity:{type:"object",properties:{sev:{type:"object",properties:{attestation:{type:"object",title:"kubevirt.io.api.core.v1.SEVAttestation"},dhCert:{type:"string"},policy:{type:"object",properties:{encryptedState:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SEVPolicy"},session:{type:"string"}},title:"kubevirt.io.api.core.v1.SEV"}},title:"kubevirt.io.api.core.v1.LaunchSecurity"},machine:{type:"object",properties:{type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Machine"},memory:{type:"object",properties:{guest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"},hugepages:{type:"object",properties:{pageSize:{type:"string"}},title:"kubevirt.io.api.core.v1.Hugepages"},maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.Memory"},resources:{default:{},allOf:[{type:"object",properties:{limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},overcommitGuestOverhead:{type:"boolean"},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"kubevirt.io.api.core.v1.ResourceRequirements"}]}},title:"kubevirt.io.api.core.v1.DomainSpec"}]},evictionStrategy:{type:"string"},hostname:{type:"string"},livenessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},networks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{multus:{type:"object",required:["networkName"],properties:{default:{type:"boolean"},networkName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.MultusNetwork"},name:{type:"string",default:""},pod:{type:"object",properties:{vmIPv6NetworkCIDR:{type:"string"},vmNetworkCIDR:{type:"string"}},title:"kubevirt.io.api.core.v1.PodNetwork"}},title:"kubevirt.io.api.core.v1.Network"}]}},nodeSelector:{type:"object",additionalProperties:{type:"string",default:""}},priorityClassName:{type:"string"},readinessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},schedulerName:{type:"string"},startStrategy:{type:"string"},subdomain:{type:"string"},terminationGracePeriodSeconds:{type:"integer",format:"int64"},tolerations:{type:"array",items:{default:{},allOf:[{type:"object",properties:{effect:{type:"string",enum:["NoExecute","NoSchedule","PreferNoSchedule"]},key:{type:"string"},operator:{type:"string",enum:["Equal","Exists"]},tolerationSeconds:{type:"integer",format:"int64"},value:{type:"string"}},title:"k8s.io.v1.Toleration"}]}},topologySpreadConstraints:{type:"array",items:{default:{},allOf:[{type:"object",required:["maxSkew","topologyKey","whenUnsatisfiable"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},matchLabelKeys:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"atomic"},maxSkew:{type:"integer",format:"int32",default:0},minDomains:{type:"integer",format:"int32"},nodeAffinityPolicy:{type:"string"},nodeTaintsPolicy:{type:"string"},topologyKey:{type:"string",default:""},whenUnsatisfiable:{type:"string",default:"",enum:["DoNotSchedule","ScheduleAnyway"]}},title:"k8s.io.v1.TopologySpreadConstraint"}]},"x-kubernetes-list-map-keys":["topologyKey","whenUnsatisfiable"],"x-kubernetes-list-type":"map","x-kubernetes-patch-merge-key":"topologyKey","x-kubernetes-patch-strategy":"merge"},volumes:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{cloudInitConfigDrive:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitConfigDriveSource"},cloudInitNoCloud:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitNoCloudSource"},configMap:{type:"object",properties:{name:{type:"string"},optional:{type:"boolean"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.ConfigMapVolumeSource"},containerDisk:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},path:{type:"string"}},title:"kubevirt.io.api.core.v1.ContainerDiskSource"},dataVolume:{type:"object",required:["name"],properties:{hotpluggable:{type:"boolean"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DataVolumeSource"},downwardAPI:{type:"object",properties:{fields:{type:"array",items:{default:{},allOf:[{type:"object",required:["path"],properties:{fieldRef:{type:"object",required:["fieldPath"],properties:{apiVersion:{type:"string"},fieldPath:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ObjectFieldSelector"},mode:{type:"integer",format:"int32"},path:{type:"string",default:""},resourceFieldRef:{type:"object",required:["resource"],properties:{containerName:{type:"string"},divisor:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},resource:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ResourceFieldSelector"}},title:"k8s.io.v1.DownwardAPIVolumeFile"}]}},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.DownwardAPIVolumeSource"},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetricsVolumeSource"},emptyDisk:{type:"object",required:["capacity"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},title:"kubevirt.io.api.core.v1.EmptyDiskSource"},ephemeral:{type:"object",properties:{persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},readOnly:{type:"boolean"}},title:"k8s.io.v1.PersistentVolumeClaimVolumeSource"}},title:"kubevirt.io.api.core.v1.EphemeralVolumeSource"},hostDisk:{type:"object",required:["path","type"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},path:{type:"string",default:""},shared:{type:"boolean"},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.HostDisk"},memoryDump:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.MemoryDumpVolumeSource"},name:{type:"string",default:""},persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"},secret:{type:"object",properties:{optional:{type:"boolean"},secretName:{type:"string"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.SecretVolumeSource"},serviceAccount:{type:"object",properties:{serviceAccountName:{type:"string"}},title:"kubevirt.io.api.core.v1.ServiceAccountVolumeSource"},sysprep:{type:"object",properties:{configMap:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secret:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"}},title:"kubevirt.io.api.core.v1.SysprepSource"}},title:"kubevirt.io.api.core.v1.Volume"}]}}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"}]}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec"}},title:"kubevirt.io.api.core.v1.VirtualMachineSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineSourceSpec"},sourceUID:{type:"string"},volumeBackups:{type:"array",items:{default:{},allOf:[{type:"object",required:["csiDriverName","persistentVolumeClaim","volumeName"],properties:{creationTime:{type:"string",default:"",title:"k8s.io.v1.Time"},csiDriverName:{type:"string",default:""},error:{type:"object",properties:{message:{type:"string"},time:{type:"string",default:"",title:"k8s.io.v1.Time"}},title:"harvesterhci.io.v1beta1.Error"},longhornBackupName:{type:"string"},name:{type:"string"},persistentVolumeClaim:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]}},title:"harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"}]},progress:{type:"integer",format:"int32"},readyToUse:{type:"boolean"},volumeName:{type:"string",default:""},volumeSize:{type:"integer",format:"int64"}},title:"harvesterhci.io.v1beta1.VolumeBackup"}]}}},title:"harvesterhci.io.v1beta1.VirtualMachineBackupStatus"}},title:"harvesterhci.io.v1beta1.VirtualMachineBackup"}]}},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,i.kt)("span",{className:"openapi-schema__name"}," object"),(0,i.kt)("span",{className:"openapi-schema__divider"}),(0,i.kt)("span",{className:"openapi-schema__required"},"required"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,i.kt)(y.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "source": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "type": "string"\n      },\n      "status": {\n        "backupTarget": {\n          "bucketName": "string",\n          "bucketRegion": "string",\n          "endpoint": "string"\n        },\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "creationTime": "string",\n        "csiDriverVolumeSnapshotClassNames": {},\n        "error": {\n          "message": "string",\n          "time": "string"\n        },\n        "progress": 0,\n        "readyToUse": true,\n        "secretBackups": [\n          {\n            "data": {},\n            "name": "string"\n          }\n        ],\n        "source": {\n          "metadata": {\n            "name": "string",\n            "namespace": "string"\n          },\n          "spec": {\n            "dataVolumeTemplates": [\n              {\n                "apiVersion": "string",\n                "kind": "string",\n                "metadata": {\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "spec": {\n                  "checkpoints": [\n                    {\n                      "current": "string",\n                      "previous": "string"\n                    }\n                  ],\n                  "contentType": "string",\n                  "finalCheckpoint": true,\n                  "preallocation": true,\n                  "priorityClassName": "string",\n                  "pvc": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  },\n                  "source": {\n                    "blank": {},\n                    "gcs": {\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "http": {\n                      "certConfigMap": "string",\n                      "extraHeaders": [\n                        "string"\n                      ],\n                      "secretExtraHeaders": [\n                        "string"\n                      ],\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "imageio": {\n                      "certConfigMap": "string",\n                      "diskId": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "pvc": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "registry": {\n                      "certConfigMap": "string",\n                      "imageStream": "string",\n                      "pullMethod": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "s3": {\n                      "certConfigMap": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "snapshot": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "upload": {},\n                    "vddk": {\n                      "backingFile": "string",\n                      "initImageURL": "string",\n                      "secretRef": "string",\n                      "thumbprint": "string",\n                      "url": "string",\n                      "uuid": "string"\n                    }\n                  },\n                  "sourceRef": {\n                    "kind": "string",\n                    "name": "string",\n                    "namespace": "string"\n                  },\n                  "storage": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  }\n                },\n                "status": {}\n              }\n            ],\n            "instancetype": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "liveUpdateFeatures": {\n              "affinity": {},\n              "cpu": {\n                "maxSockets": 0\n              },\n              "memory": {\n                "maxGuest": "string"\n              }\n            },\n            "preference": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "runStrategy": "string",\n            "running": true,\n            "template": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessCredentials": [\n                  {\n                    "sshPublicKey": {\n                      "propagationMethod": {\n                        "configDrive": {},\n                        "noCloud": {},\n                        "qemuGuestAgent": {\n                          "users": [\n                            "string"\n                          ]\n                        }\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    },\n                    "userPassword": {\n                      "propagationMethod": {\n                        "qemuGuestAgent": {}\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    }\n                  }\n                ],\n                "affinity": {\n                  "nodeAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "preference": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": {\n                      "nodeSelectorTerms": [\n                        {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  "podAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  },\n                  "podAntiAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  }\n                },\n                "architecture": "string",\n                "dnsConfig": {\n                  "nameservers": [\n                    "string"\n                  ],\n                  "options": [\n                    {\n                      "name": "string",\n                      "value": "string"\n                    }\n                  ],\n                  "searches": [\n                    "string"\n                  ]\n                },\n                "dnsPolicy": "ClusterFirst",\n                "domain": {\n                  "chassis": {\n                    "asset": "string",\n                    "manufacturer": "string",\n                    "serial": "string",\n                    "sku": "string",\n                    "version": "string"\n                  },\n                  "clock": {\n                    "timer": {\n                      "hpet": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "hyperv": {\n                        "present": true\n                      },\n                      "kvm": {\n                        "present": true\n                      },\n                      "pit": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "rtc": {\n                        "present": true,\n                        "tickPolicy": "string",\n                        "track": "string"\n                      }\n                    },\n                    "timezone": "string",\n                    "utc": {\n                      "offsetSeconds": 0\n                    }\n                  },\n                  "cpu": {\n                    "cores": 0,\n                    "dedicatedCpuPlacement": true,\n                    "features": [\n                      {\n                        "name": "string",\n                        "policy": "string"\n                      }\n                    ],\n                    "isolateEmulatorThread": true,\n                    "maxSockets": 0,\n                    "model": "string",\n                    "numa": {\n                      "guestMappingPassthrough": {}\n                    },\n                    "realtime": {\n                      "mask": "string"\n                    },\n                    "sockets": 0,\n                    "threads": 0\n                  },\n                  "devices": {\n                    "autoattachGraphicsDevice": true,\n                    "autoattachInputDevice": true,\n                    "autoattachMemBalloon": true,\n                    "autoattachPodInterface": true,\n                    "autoattachSerialConsole": true,\n                    "autoattachVSOCK": true,\n                    "blockMultiQueue": true,\n                    "clientPassthrough": {},\n                    "disableHotplug": true,\n                    "disks": [\n                      {\n                        "blockSize": {\n                          "custom": {\n                            "logical": 0,\n                            "physical": 0\n                          },\n                          "matchVolume": {\n                            "enabled": true\n                          }\n                        },\n                        "bootOrder": 0,\n                        "cache": "string",\n                        "cdrom": {\n                          "bus": "string",\n                          "readonly": true,\n                          "tray": "string"\n                        },\n                        "dedicatedIOThread": true,\n                        "disk": {\n                          "bus": "string",\n                          "pciAddress": "string",\n                          "readonly": true\n                        },\n                        "errorPolicy": "string",\n                        "io": "string",\n                        "lun": {\n                          "bus": "string",\n                          "readonly": true,\n                          "reservation": true\n                        },\n                        "name": "string",\n                        "serial": "string",\n                        "shareable": true,\n                        "tag": "string"\n                      }\n                    ],\n                    "downwardMetrics": {},\n                    "filesystems": [\n                      {\n                        "name": "string",\n                        "virtiofs": {}\n                      }\n                    ],\n                    "gpus": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string",\n                        "virtualGPUOptions": {\n                          "display": {\n                            "enabled": true,\n                            "ramFB": {\n                              "enabled": true\n                            }\n                          }\n                        }\n                      }\n                    ],\n                    "hostDevices": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "inputs": [\n                      {\n                        "bus": "string",\n                        "name": "string",\n                        "type": "string"\n                      }\n                    ],\n                    "interfaces": [\n                      {\n                        "acpiIndex": 0,\n                        "binding": {\n                          "name": "string"\n                        },\n                        "bootOrder": 0,\n                        "bridge": {},\n                        "dhcpOptions": {\n                          "bootFileName": "string",\n                          "ntpServers": [\n                            "string"\n                          ],\n                          "privateOptions": [\n                            {\n                              "option": 0,\n                              "value": "string"\n                            }\n                          ],\n                          "tftpServerName": "string"\n                        },\n                        "macAddress": "string",\n                        "macvtap": {},\n                        "masquerade": {},\n                        "model": "string",\n                        "name": "string",\n                        "passt": {},\n                        "pciAddress": "string",\n                        "ports": [\n                          {\n                            "name": "string",\n                            "port": 0,\n                            "protocol": "string"\n                          }\n                        ],\n                        "slirp": {},\n                        "sriov": {},\n                        "state": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "logSerialConsole": true,\n                    "networkInterfaceMultiqueue": true,\n                    "rng": {},\n                    "sound": {\n                      "model": "string",\n                      "name": "string"\n                    },\n                    "tpm": {\n                      "persistent": true\n                    },\n                    "useVirtioTransitional": true,\n                    "watchdog": {\n                      "i6300esb": {\n                        "action": "string"\n                      },\n                      "name": "string"\n                    }\n                  },\n                  "features": {\n                    "acpi": {\n                      "enabled": true\n                    },\n                    "apic": {\n                      "enabled": true,\n                      "endOfInterrupt": true\n                    },\n                    "hyperv": {\n                      "evmcs": {\n                        "enabled": true\n                      },\n                      "frequencies": {\n                        "enabled": true\n                      },\n                      "ipi": {\n                        "enabled": true\n                      },\n                      "reenlightenment": {\n                        "enabled": true\n                      },\n                      "relaxed": {\n                        "enabled": true\n                      },\n                      "reset": {\n                        "enabled": true\n                      },\n                      "runtime": {\n                        "enabled": true\n                      },\n                      "spinlocks": {\n                        "enabled": true,\n                        "spinlocks": 0\n                      },\n                      "synic": {\n                        "enabled": true\n                      },\n                      "synictimer": {\n                        "direct": {\n                          "enabled": true\n                        },\n                        "enabled": true\n                      },\n                      "tlbflush": {\n                        "enabled": true\n                      },\n                      "vapic": {\n                        "enabled": true\n                      },\n                      "vendorid": {\n                        "enabled": true,\n                        "vendorid": "string"\n                      },\n                      "vpindex": {\n                        "enabled": true\n                      }\n                    },\n                    "kvm": {\n                      "hidden": true\n                    },\n                    "pvspinlock": {\n                      "enabled": true\n                    },\n                    "smm": {\n                      "enabled": true\n                    }\n                  },\n                  "firmware": {\n                    "bootloader": {\n                      "bios": {\n                        "useSerial": true\n                      },\n                      "efi": {\n                        "persistent": true,\n                        "secureBoot": true\n                      }\n                    },\n                    "kernelBoot": {\n                      "container": {\n                        "image": "string",\n                        "imagePullPolicy": "Always",\n                        "imagePullSecret": "string",\n                        "initrdPath": "string",\n                        "kernelPath": "string"\n                      },\n                      "kernelArgs": "string"\n                    },\n                    "serial": "string",\n                    "uuid": "string"\n                  },\n                  "ioThreadsPolicy": "string",\n                  "launchSecurity": {\n                    "sev": {\n                      "attestation": {},\n                      "dhCert": "string",\n                      "policy": {\n                        "encryptedState": true\n                      },\n                      "session": "string"\n                    }\n                  },\n                  "machine": {\n                    "type": "string"\n                  },\n                  "memory": {\n                    "guest": "string",\n                    "hugepages": {\n                      "pageSize": "string"\n                    },\n                    "maxGuest": "string"\n                  },\n                  "resources": {\n                    "limits": {},\n                    "overcommitGuestOverhead": true,\n                    "requests": {}\n                  }\n                },\n                "evictionStrategy": "string",\n                "hostname": "string",\n                "livenessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "networks": [\n                  {\n                    "multus": {\n                      "default": true,\n                      "networkName": "string"\n                    },\n                    "name": "string",\n                    "pod": {\n                      "vmIPv6NetworkCIDR": "string",\n                      "vmNetworkCIDR": "string"\n                    }\n                  }\n                ],\n                "nodeSelector": {},\n                "priorityClassName": "string",\n                "readinessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "schedulerName": "string",\n                "startStrategy": "string",\n                "subdomain": "string",\n                "terminationGracePeriodSeconds": 0,\n                "tolerations": [\n                  {\n                    "effect": "NoExecute",\n                    "key": "string",\n                    "operator": "Equal",\n                    "tolerationSeconds": 0,\n                    "value": "string"\n                  }\n                ],\n                "topologySpreadConstraints": [\n                  {\n                    "labelSelector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "matchLabelKeys": [\n                      "string"\n                    ],\n                    "maxSkew": 0,\n                    "minDomains": 0,\n                    "nodeAffinityPolicy": "string",\n                    "nodeTaintsPolicy": "string",\n                    "topologyKey": "string",\n                    "whenUnsatisfiable": "DoNotSchedule"\n                  }\n                ],\n                "volumes": [\n                  {\n                    "cloudInitConfigDrive": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "cloudInitNoCloud": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "configMap": {\n                      "name": "string",\n                      "optional": true,\n                      "volumeLabel": "string"\n                    },\n                    "containerDisk": {\n                      "image": "string",\n                      "imagePullPolicy": "Always",\n                      "imagePullSecret": "string",\n                      "path": "string"\n                    },\n                    "dataVolume": {\n                      "hotpluggable": true,\n                      "name": "string"\n                    },\n                    "downwardAPI": {\n                      "fields": [\n                        {\n                          "fieldRef": {\n                            "apiVersion": "string",\n                            "fieldPath": "string"\n                          },\n                          "mode": 0,\n                          "path": "string",\n                          "resourceFieldRef": {\n                            "containerName": "string",\n                            "divisor": {},\n                            "resource": "string"\n                          }\n                        }\n                      ],\n                      "volumeLabel": "string"\n                    },\n                    "downwardMetrics": {},\n                    "emptyDisk": {\n                      "capacity": {}\n                    },\n                    "ephemeral": {\n                      "persistentVolumeClaim": {\n                        "claimName": "string",\n                        "readOnly": true\n                      }\n                    },\n                    "hostDisk": {\n                      "capacity": {},\n                      "path": "string",\n                      "shared": true,\n                      "type": "string"\n                    },\n                    "memoryDump": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "name": "string",\n                    "persistentVolumeClaim": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "secret": {\n                      "optional": true,\n                      "secretName": "string",\n                      "volumeLabel": "string"\n                    },\n                    "serviceAccount": {\n                      "serviceAccountName": "string"\n                    },\n                    "sysprep": {\n                      "configMap": {\n                        "name": "string"\n                      },\n                      "secret": {\n                        "name": "string"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        "sourceUID": "string",\n        "volumeBackups": [\n          {\n            "creationTime": "string",\n            "csiDriverName": "string",\n            "error": {\n              "message": "string",\n              "time": "string"\n            },\n            "longhornBackupName": "string",\n            "name": "string",\n            "persistentVolumeClaim": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessModes": [\n                  "string"\n                ],\n                "dataSource": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string"\n                },\n                "dataSourceRef": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "resources": {\n                  "claims": [\n                    {\n                      "name": "string"\n                    }\n                  ],\n                  "limits": {},\n                  "requests": {}\n                },\n                "selector": {\n                  "matchExpressions": [\n                    {\n                      "key": "string",\n                      "operator": "string",\n                      "values": [\n                        "string"\n                      ]\n                    }\n                  ],\n                  "matchLabels": {}\n                },\n                "storageClassName": "string",\n                "volumeMode": "string",\n                "volumeName": "string"\n              }\n            },\n            "progress": 0,\n            "readyToUse": true,\n            "volumeName": "string",\n            "volumeSize": 0\n          }\n        ]\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,i.kt)(y.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["source"],properties:{source:{default:{},allOf:[{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"}]},type:{type:"string"}},title:"harvesterhci.io.v1beta1.VirtualMachineBackupSpec"}]},status:{type:"object",properties:{backupTarget:{type:"object",properties:{bucketName:{type:"string"},bucketRegion:{type:"string"},endpoint:{type:"string"}},title:"harvesterhci.io.v1beta1.BackupTarget"},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},creationTime:{type:"string",default:"",title:"k8s.io.v1.Time"},csiDriverVolumeSnapshotClassNames:{type:"object",additionalProperties:{type:"string",default:""}},error:{type:"object",properties:{message:{type:"string"},time:{type:"string",default:"",title:"k8s.io.v1.Time"}},title:"harvesterhci.io.v1beta1.Error"},progress:{type:"integer",format:"int32"},readyToUse:{type:"boolean"},secretBackups:{type:"array",items:{default:{},allOf:[{type:"object",properties:{data:{type:"object",additionalProperties:{type:"string",format:"byte"}},name:{type:"string"}},title:"harvesterhci.io.v1beta1.SecretBackup"}]}},source:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["template"],properties:{dataVolumeTemplates:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{checkpoints:{type:"array",items:{default:{},allOf:[{type:"object",required:["current","previous"],properties:{current:{type:"string",default:""},previous:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint"}]}},contentType:{type:"string"},finalCheckpoint:{type:"boolean"},preallocation:{type:"boolean"},priorityClassName:{type:"string"},pvc:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"},source:{type:"object",properties:{blank:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage"},gcs:{type:"object",required:["url"],properties:{secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS"},http:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},extraHeaders:{type:"array",items:{type:"string",default:""}},secretExtraHeaders:{type:"array",items:{type:"string",default:""}},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP"},imageio:{type:"object",required:["diskId","url"],properties:{certConfigMap:{type:"string"},diskId:{type:"string",default:""},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO"},pvc:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC"},registry:{type:"object",properties:{certConfigMap:{type:"string"},imageStream:{type:"string"},pullMethod:{type:"string"},secretRef:{type:"string"},url:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry"},s3:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3"},snapshot:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot"},upload:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload"},vddk:{type:"object",properties:{backingFile:{type:"string"},initImageURL:{type:"string"},secretRef:{type:"string"},thumbprint:{type:"string"},url:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource"},sourceRef:{type:"object",required:["kind","name"],properties:{kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef"},storage:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec"}]},status:{type:"object",title:"kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus"}},title:"kubevirt.io.api.core.v1.DataVolumeTemplateSpec"}]}},instancetype:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.InstancetypeMatcher"},liveUpdateFeatures:{type:"object",properties:{affinity:{type:"object",title:"kubevirt.io.api.core.v1.LiveUpdateAffinity"},cpu:{type:"object",properties:{maxSockets:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.LiveUpdateCPU"},memory:{type:"object",properties:{maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.LiveUpdateMemory"}},title:"kubevirt.io.api.core.v1.LiveUpdateFeatures"},preference:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.PreferenceMatcher"},runStrategy:{type:"string"},running:{type:"boolean"},template:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["domain"],properties:{accessCredentials:{type:"array",items:{default:{},allOf:[{type:"object",properties:{sshPublicKey:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{configDrive:{type:"object",title:"kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"},noCloud:{type:"object",title:"kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation"},qemuGuestAgent:{type:"object",required:["users"],properties:{users:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"set"}},title:"kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential"},userPassword:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{qemuGuestAgent:{type:"object",title:"kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredential"}},title:"kubevirt.io.api.core.v1.AccessCredential"}]},"x-kubernetes-list-type":"atomic"},affinity:{type:"object",properties:{nodeAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["preference","weight"],properties:{preference:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.PreferredSchedulingTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"object",required:["nodeSelectorTerms"],properties:{nodeSelectorTerms:{type:"array",items:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelector"}},title:"k8s.io.v1.NodeAffinity"},podAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAffinity"},podAntiAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAntiAffinity"}},title:"k8s.io.v1.Affinity"},architecture:{type:"string"},dnsConfig:{type:"object",properties:{nameservers:{type:"array",items:{type:"string",default:""}},options:{type:"array",items:{default:{},allOf:[{type:"object",properties:{name:{type:"string"},value:{type:"string"}},title:"k8s.io.v1.PodDNSConfigOption"}]}},searches:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.PodDNSConfig"},dnsPolicy:{type:"string",enum:["ClusterFirst","ClusterFirstWithHostNet","Default","None"]},domain:{default:{},allOf:[{type:"object",required:["devices"],properties:{chassis:{type:"object",properties:{asset:{type:"string"},manufacturer:{type:"string"},serial:{type:"string"},sku:{type:"string"},version:{type:"string"}},title:"kubevirt.io.api.core.v1.Chassis"},clock:{type:"object",properties:{timer:{type:"object",properties:{hpet:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.HPETTimer"},hyperv:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.HypervTimer"},kvm:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.KVMTimer"},pit:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.PITTimer"},rtc:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"},track:{type:"string"}},title:"kubevirt.io.api.core.v1.RTCTimer"}},title:"kubevirt.io.api.core.v1.Timer"},timezone:{type:"string"},utc:{type:"object",properties:{offsetSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.ClockOffsetUTC"}},title:"kubevirt.io.api.core.v1.Clock"},cpu:{type:"object",properties:{cores:{type:"integer",format:"int64"},dedicatedCpuPlacement:{type:"boolean"},features:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""},policy:{type:"string"}},title:"kubevirt.io.api.core.v1.CPUFeature"}]}},isolateEmulatorThread:{type:"boolean"},maxSockets:{type:"integer",format:"int64"},model:{type:"string"},numa:{type:"object",properties:{guestMappingPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough"}},title:"kubevirt.io.api.core.v1.NUMA"},realtime:{type:"object",properties:{mask:{type:"string"}},title:"kubevirt.io.api.core.v1.Realtime"},sockets:{type:"integer",format:"int64"},threads:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.CPU"},devices:{default:{},allOf:[{type:"object",properties:{autoattachGraphicsDevice:{type:"boolean"},autoattachInputDevice:{type:"boolean"},autoattachMemBalloon:{type:"boolean"},autoattachPodInterface:{type:"boolean"},autoattachSerialConsole:{type:"boolean"},autoattachVSOCK:{type:"boolean"},blockMultiQueue:{type:"boolean"},clientPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.ClientPassthroughDevices"},disableHotplug:{type:"boolean"},disks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{blockSize:{type:"object",properties:{custom:{type:"object",required:["logical","physical"],properties:{logical:{type:"integer",format:"int32",default:0},physical:{type:"integer",format:"int32",default:0}},title:"kubevirt.io.api.core.v1.CustomBlockSize"},matchVolume:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.BlockSize"},bootOrder:{type:"integer",format:"int32"},cache:{type:"string"},cdrom:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},tray:{type:"string"}},title:"kubevirt.io.api.core.v1.CDRomTarget"},dedicatedIOThread:{type:"boolean"},disk:{type:"object",properties:{bus:{type:"string"},pciAddress:{type:"string"},readonly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.DiskTarget"},errorPolicy:{type:"string"},io:{type:"string"},lun:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},reservation:{type:"boolean"}},title:"kubevirt.io.api.core.v1.LunTarget"},name:{type:"string",default:""},serial:{type:"string"},shareable:{type:"boolean"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Disk"}]}},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetrics"},filesystems:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","virtiofs"],properties:{name:{type:"string",default:""},virtiofs:{type:"object",title:"kubevirt.io.api.core.v1.FilesystemVirtiofs"}},title:"kubevirt.io.api.core.v1.Filesystem"}]},"x-kubernetes-list-type":"atomic"},gpus:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"},virtualGPUOptions:{type:"object",properties:{display:{type:"object",properties:{enabled:{type:"boolean"},ramFB:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.VGPUDisplayOptions"}},title:"kubevirt.io.api.core.v1.VGPUOptions"}},title:"kubevirt.io.api.core.v1.GPU"}]},"x-kubernetes-list-type":"atomic"},hostDevices:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.HostDevice"}]},"x-kubernetes-list-type":"atomic"},inputs:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","type"],properties:{bus:{type:"string"},name:{type:"string",default:""},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Input"}]}},interfaces:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{acpiIndex:{type:"integer",format:"int32"},binding:{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.PluginBinding"},bootOrder:{type:"integer",format:"int32"},bridge:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceBridge"},dhcpOptions:{type:"object",properties:{bootFileName:{type:"string"},ntpServers:{type:"array",items:{type:"string",default:""}},privateOptions:{type:"array",items:{default:{},allOf:[{type:"object",required:["option","value"],properties:{option:{type:"integer",format:"int32",default:0},value:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DHCPPrivateOptions"}]}},tftpServerName:{type:"string"}},title:"kubevirt.io.api.core.v1.DHCPOptions"},macAddress:{type:"string"},macvtap:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMacvtap"},masquerade:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMasquerade"},model:{type:"string"},name:{type:"string",default:""},passt:{type:"object",title:"kubevirt.io.api.core.v1.InterfacePasst"},pciAddress:{type:"string"},ports:{type:"array",items:{default:{},allOf:[{type:"object",required:["port"],properties:{name:{type:"string"},port:{type:"integer",format:"int32",default:0},protocol:{type:"string"}},title:"kubevirt.io.api.core.v1.Port"}]}},slirp:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSlirp"},sriov:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSRIOV"},state:{type:"string"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Interface"}]}},logSerialConsole:{type:"boolean"},networkInterfaceMultiqueue:{type:"boolean"},rng:{type:"object",title:"kubevirt.io.api.core.v1.Rng"},sound:{type:"object",required:["name"],properties:{model:{type:"string"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.SoundDevice"},tpm:{type:"object",properties:{persistent:{type:"boolean"}},title:"kubevirt.io.api.core.v1.TPMDevice"},useVirtioTransitional:{type:"boolean"},watchdog:{type:"object",required:["name"],properties:{i6300esb:{type:"object",properties:{action:{type:"string"}},title:"kubevirt.io.api.core.v1.I6300ESBWatchdog"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Watchdog"}},title:"kubevirt.io.api.core.v1.Devices"}]},features:{type:"object",properties:{acpi:{default:{},allOf:[{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}]},apic:{type:"object",properties:{enabled:{type:"boolean"},endOfInterrupt:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureAPIC"},hyperv:{type:"object",properties:{evmcs:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},frequencies:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},ipi:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reenlightenment:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},relaxed:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reset:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},runtime:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},spinlocks:{type:"object",properties:{enabled:{type:"boolean"},spinlocks:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.FeatureSpinlocks"},synic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},synictimer:{type:"object",properties:{direct:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SyNICTimer"},tlbflush:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vapic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vendorid:{type:"object",properties:{enabled:{type:"boolean"},vendorid:{type:"string"}},title:"kubevirt.io.api.core.v1.FeatureVendorID"},vpindex:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.FeatureHyperv"},kvm:{type:"object",properties:{hidden:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureKVM"},pvspinlock:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},smm:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.Features"},firmware:{type:"object",properties:{bootloader:{type:"object",properties:{bios:{type:"object",properties:{useSerial:{type:"boolean"}},title:"kubevirt.io.api.core.v1.BIOS"},efi:{type:"object",properties:{persistent:{type:"boolean"},secureBoot:{type:"boolean"}},title:"kubevirt.io.api.core.v1.EFI"}},title:"kubevirt.io.api.core.v1.Bootloader"},kernelBoot:{type:"object",properties:{container:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},initrdPath:{type:"string"},kernelPath:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBootContainer"},kernelArgs:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBoot"},serial:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.api.core.v1.Firmware"},ioThreadsPolicy:{type:"string"},launchSecurity:{type:"object",properties:{sev:{type:"object",properties:{attestation:{type:"object",title:"kubevirt.io.api.core.v1.SEVAttestation"},dhCert:{type:"string"},policy:{type:"object",properties:{encryptedState:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SEVPolicy"},session:{type:"string"}},title:"kubevirt.io.api.core.v1.SEV"}},title:"kubevirt.io.api.core.v1.LaunchSecurity"},machine:{type:"object",properties:{type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Machine"},memory:{type:"object",properties:{guest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"},hugepages:{type:"object",properties:{pageSize:{type:"string"}},title:"kubevirt.io.api.core.v1.Hugepages"},maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.Memory"},resources:{default:{},allOf:[{type:"object",properties:{limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},overcommitGuestOverhead:{type:"boolean"},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"kubevirt.io.api.core.v1.ResourceRequirements"}]}},title:"kubevirt.io.api.core.v1.DomainSpec"}]},evictionStrategy:{type:"string"},hostname:{type:"string"},livenessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},networks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{multus:{type:"object",required:["networkName"],properties:{default:{type:"boolean"},networkName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.MultusNetwork"},name:{type:"string",default:""},pod:{type:"object",properties:{vmIPv6NetworkCIDR:{type:"string"},vmNetworkCIDR:{type:"string"}},title:"kubevirt.io.api.core.v1.PodNetwork"}},title:"kubevirt.io.api.core.v1.Network"}]}},nodeSelector:{type:"object",additionalProperties:{type:"string",default:""}},priorityClassName:{type:"string"},readinessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},schedulerName:{type:"string"},startStrategy:{type:"string"},subdomain:{type:"string"},terminationGracePeriodSeconds:{type:"integer",format:"int64"},tolerations:{type:"array",items:{default:{},allOf:[{type:"object",properties:{effect:{type:"string",enum:["NoExecute","NoSchedule","PreferNoSchedule"]},key:{type:"string"},operator:{type:"string",enum:["Equal","Exists"]},tolerationSeconds:{type:"integer",format:"int64"},value:{type:"string"}},title:"k8s.io.v1.Toleration"}]}},topologySpreadConstraints:{type:"array",items:{default:{},allOf:[{type:"object",required:["maxSkew","topologyKey","whenUnsatisfiable"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},matchLabelKeys:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"atomic"},maxSkew:{type:"integer",format:"int32",default:0},minDomains:{type:"integer",format:"int32"},nodeAffinityPolicy:{type:"string"},nodeTaintsPolicy:{type:"string"},topologyKey:{type:"string",default:""},whenUnsatisfiable:{type:"string",default:"",enum:["DoNotSchedule","ScheduleAnyway"]}},title:"k8s.io.v1.TopologySpreadConstraint"}]},"x-kubernetes-list-map-keys":["topologyKey","whenUnsatisfiable"],"x-kubernetes-list-type":"map","x-kubernetes-patch-merge-key":"topologyKey","x-kubernetes-patch-strategy":"merge"},volumes:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{cloudInitConfigDrive:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitConfigDriveSource"},cloudInitNoCloud:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitNoCloudSource"},configMap:{type:"object",properties:{name:{type:"string"},optional:{type:"boolean"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.ConfigMapVolumeSource"},containerDisk:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},path:{type:"string"}},title:"kubevirt.io.api.core.v1.ContainerDiskSource"},dataVolume:{type:"object",required:["name"],properties:{hotpluggable:{type:"boolean"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DataVolumeSource"},downwardAPI:{type:"object",properties:{fields:{type:"array",items:{default:{},allOf:[{type:"object",required:["path"],properties:{fieldRef:{type:"object",required:["fieldPath"],properties:{apiVersion:{type:"string"},fieldPath:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ObjectFieldSelector"},mode:{type:"integer",format:"int32"},path:{type:"string",default:""},resourceFieldRef:{type:"object",required:["resource"],properties:{containerName:{type:"string"},divisor:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},resource:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ResourceFieldSelector"}},title:"k8s.io.v1.DownwardAPIVolumeFile"}]}},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.DownwardAPIVolumeSource"},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetricsVolumeSource"},emptyDisk:{type:"object",required:["capacity"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},title:"kubevirt.io.api.core.v1.EmptyDiskSource"},ephemeral:{type:"object",properties:{persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},readOnly:{type:"boolean"}},title:"k8s.io.v1.PersistentVolumeClaimVolumeSource"}},title:"kubevirt.io.api.core.v1.EphemeralVolumeSource"},hostDisk:{type:"object",required:["path","type"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},path:{type:"string",default:""},shared:{type:"boolean"},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.HostDisk"},memoryDump:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.MemoryDumpVolumeSource"},name:{type:"string",default:""},persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"},secret:{type:"object",properties:{optional:{type:"boolean"},secretName:{type:"string"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.SecretVolumeSource"},serviceAccount:{type:"object",properties:{serviceAccountName:{type:"string"}},title:"kubevirt.io.api.core.v1.ServiceAccountVolumeSource"},sysprep:{type:"object",properties:{configMap:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secret:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"}},title:"kubevirt.io.api.core.v1.SysprepSource"}},title:"kubevirt.io.api.core.v1.Volume"}]}}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"}]}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec"}},title:"kubevirt.io.api.core.v1.VirtualMachineSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineSourceSpec"},sourceUID:{type:"string"},volumeBackups:{type:"array",items:{default:{},allOf:[{type:"object",required:["csiDriverName","persistentVolumeClaim","volumeName"],properties:{creationTime:{type:"string",default:"",title:"k8s.io.v1.Time"},csiDriverName:{type:"string",default:""},error:{type:"object",properties:{message:{type:"string"},time:{type:"string",default:"",title:"k8s.io.v1.Time"}},title:"harvesterhci.io.v1beta1.Error"},longhornBackupName:{type:"string"},name:{type:"string"},persistentVolumeClaim:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]}},title:"harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"}]},progress:{type:"integer",format:"int32"},readyToUse:{type:"boolean"},volumeName:{type:"string",default:""},volumeSize:{type:"integer",format:"int64"}},title:"harvesterhci.io.v1beta1.VolumeBackup"}]}}},title:"harvesterhci.io.v1beta1.VirtualMachineBackupStatus"}},title:"harvesterhci.io.v1beta1.VirtualMachineBackup"}]}},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,i.kt)("span",{className:"openapi-schema__name"}," object"),(0,i.kt)("span",{className:"openapi-schema__divider"}),(0,i.kt)("span",{className:"openapi-schema__required"},"required"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,i.kt)(y.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "source": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "type": "string"\n      },\n      "status": {\n        "backupTarget": {\n          "bucketName": "string",\n          "bucketRegion": "string",\n          "endpoint": "string"\n        },\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "creationTime": "string",\n        "csiDriverVolumeSnapshotClassNames": {},\n        "error": {\n          "message": "string",\n          "time": "string"\n        },\n        "progress": 0,\n        "readyToUse": true,\n        "secretBackups": [\n          {\n            "data": {},\n            "name": "string"\n          }\n        ],\n        "source": {\n          "metadata": {\n            "name": "string",\n            "namespace": "string"\n          },\n          "spec": {\n            "dataVolumeTemplates": [\n              {\n                "apiVersion": "string",\n                "kind": "string",\n                "metadata": {\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "spec": {\n                  "checkpoints": [\n                    {\n                      "current": "string",\n                      "previous": "string"\n                    }\n                  ],\n                  "contentType": "string",\n                  "finalCheckpoint": true,\n                  "preallocation": true,\n                  "priorityClassName": "string",\n                  "pvc": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  },\n                  "source": {\n                    "blank": {},\n                    "gcs": {\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "http": {\n                      "certConfigMap": "string",\n                      "extraHeaders": [\n                        "string"\n                      ],\n                      "secretExtraHeaders": [\n                        "string"\n                      ],\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "imageio": {\n                      "certConfigMap": "string",\n                      "diskId": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "pvc": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "registry": {\n                      "certConfigMap": "string",\n                      "imageStream": "string",\n                      "pullMethod": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "s3": {\n                      "certConfigMap": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "snapshot": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "upload": {},\n                    "vddk": {\n                      "backingFile": "string",\n                      "initImageURL": "string",\n                      "secretRef": "string",\n                      "thumbprint": "string",\n                      "url": "string",\n                      "uuid": "string"\n                    }\n                  },\n                  "sourceRef": {\n                    "kind": "string",\n                    "name": "string",\n                    "namespace": "string"\n                  },\n                  "storage": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  }\n                },\n                "status": {}\n              }\n            ],\n            "instancetype": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "liveUpdateFeatures": {\n              "affinity": {},\n              "cpu": {\n                "maxSockets": 0\n              },\n              "memory": {\n                "maxGuest": "string"\n              }\n            },\n            "preference": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "runStrategy": "string",\n            "running": true,\n            "template": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessCredentials": [\n                  {\n                    "sshPublicKey": {\n                      "propagationMethod": {\n                        "configDrive": {},\n                        "noCloud": {},\n                        "qemuGuestAgent": {\n                          "users": [\n                            "string"\n                          ]\n                        }\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    },\n                    "userPassword": {\n                      "propagationMethod": {\n                        "qemuGuestAgent": {}\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    }\n                  }\n                ],\n                "affinity": {\n                  "nodeAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "preference": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": {\n                      "nodeSelectorTerms": [\n                        {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  "podAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  },\n                  "podAntiAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  }\n                },\n                "architecture": "string",\n                "dnsConfig": {\n                  "nameservers": [\n                    "string"\n                  ],\n                  "options": [\n                    {\n                      "name": "string",\n                      "value": "string"\n                    }\n                  ],\n                  "searches": [\n                    "string"\n                  ]\n                },\n                "dnsPolicy": "ClusterFirst",\n                "domain": {\n                  "chassis": {\n                    "asset": "string",\n                    "manufacturer": "string",\n                    "serial": "string",\n                    "sku": "string",\n                    "version": "string"\n                  },\n                  "clock": {\n                    "timer": {\n                      "hpet": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "hyperv": {\n                        "present": true\n                      },\n                      "kvm": {\n                        "present": true\n                      },\n                      "pit": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "rtc": {\n                        "present": true,\n                        "tickPolicy": "string",\n                        "track": "string"\n                      }\n                    },\n                    "timezone": "string",\n                    "utc": {\n                      "offsetSeconds": 0\n                    }\n                  },\n                  "cpu": {\n                    "cores": 0,\n                    "dedicatedCpuPlacement": true,\n                    "features": [\n                      {\n                        "name": "string",\n                        "policy": "string"\n                      }\n                    ],\n                    "isolateEmulatorThread": true,\n                    "maxSockets": 0,\n                    "model": "string",\n                    "numa": {\n                      "guestMappingPassthrough": {}\n                    },\n                    "realtime": {\n                      "mask": "string"\n                    },\n                    "sockets": 0,\n                    "threads": 0\n                  },\n                  "devices": {\n                    "autoattachGraphicsDevice": true,\n                    "autoattachInputDevice": true,\n                    "autoattachMemBalloon": true,\n                    "autoattachPodInterface": true,\n                    "autoattachSerialConsole": true,\n                    "autoattachVSOCK": true,\n                    "blockMultiQueue": true,\n                    "clientPassthrough": {},\n                    "disableHotplug": true,\n                    "disks": [\n                      {\n                        "blockSize": {\n                          "custom": {\n                            "logical": 0,\n                            "physical": 0\n                          },\n                          "matchVolume": {\n                            "enabled": true\n                          }\n                        },\n                        "bootOrder": 0,\n                        "cache": "string",\n                        "cdrom": {\n                          "bus": "string",\n                          "readonly": true,\n                          "tray": "string"\n                        },\n                        "dedicatedIOThread": true,\n                        "disk": {\n                          "bus": "string",\n                          "pciAddress": "string",\n                          "readonly": true\n                        },\n                        "errorPolicy": "string",\n                        "io": "string",\n                        "lun": {\n                          "bus": "string",\n                          "readonly": true,\n                          "reservation": true\n                        },\n                        "name": "string",\n                        "serial": "string",\n                        "shareable": true,\n                        "tag": "string"\n                      }\n                    ],\n                    "downwardMetrics": {},\n                    "filesystems": [\n                      {\n                        "name": "string",\n                        "virtiofs": {}\n                      }\n                    ],\n                    "gpus": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string",\n                        "virtualGPUOptions": {\n                          "display": {\n                            "enabled": true,\n                            "ramFB": {\n                              "enabled": true\n                            }\n                          }\n                        }\n                      }\n                    ],\n                    "hostDevices": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "inputs": [\n                      {\n                        "bus": "string",\n                        "name": "string",\n                        "type": "string"\n                      }\n                    ],\n                    "interfaces": [\n                      {\n                        "acpiIndex": 0,\n                        "binding": {\n                          "name": "string"\n                        },\n                        "bootOrder": 0,\n                        "bridge": {},\n                        "dhcpOptions": {\n                          "bootFileName": "string",\n                          "ntpServers": [\n                            "string"\n                          ],\n                          "privateOptions": [\n                            {\n                              "option": 0,\n                              "value": "string"\n                            }\n                          ],\n                          "tftpServerName": "string"\n                        },\n                        "macAddress": "string",\n                        "macvtap": {},\n                        "masquerade": {},\n                        "model": "string",\n                        "name": "string",\n                        "passt": {},\n                        "pciAddress": "string",\n                        "ports": [\n                          {\n                            "name": "string",\n                            "port": 0,\n                            "protocol": "string"\n                          }\n                        ],\n                        "slirp": {},\n                        "sriov": {},\n                        "state": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "logSerialConsole": true,\n                    "networkInterfaceMultiqueue": true,\n                    "rng": {},\n                    "sound": {\n                      "model": "string",\n                      "name": "string"\n                    },\n                    "tpm": {\n                      "persistent": true\n                    },\n                    "useVirtioTransitional": true,\n                    "watchdog": {\n                      "i6300esb": {\n                        "action": "string"\n                      },\n                      "name": "string"\n                    }\n                  },\n                  "features": {\n                    "acpi": {\n                      "enabled": true\n                    },\n                    "apic": {\n                      "enabled": true,\n                      "endOfInterrupt": true\n                    },\n                    "hyperv": {\n                      "evmcs": {\n                        "enabled": true\n                      },\n                      "frequencies": {\n                        "enabled": true\n                      },\n                      "ipi": {\n                        "enabled": true\n                      },\n                      "reenlightenment": {\n                        "enabled": true\n                      },\n                      "relaxed": {\n                        "enabled": true\n                      },\n                      "reset": {\n                        "enabled": true\n                      },\n                      "runtime": {\n                        "enabled": true\n                      },\n                      "spinlocks": {\n                        "enabled": true,\n                        "spinlocks": 0\n                      },\n                      "synic": {\n                        "enabled": true\n                      },\n                      "synictimer": {\n                        "direct": {\n                          "enabled": true\n                        },\n                        "enabled": true\n                      },\n                      "tlbflush": {\n                        "enabled": true\n                      },\n                      "vapic": {\n                        "enabled": true\n                      },\n                      "vendorid": {\n                        "enabled": true,\n                        "vendorid": "string"\n                      },\n                      "vpindex": {\n                        "enabled": true\n                      }\n                    },\n                    "kvm": {\n                      "hidden": true\n                    },\n                    "pvspinlock": {\n                      "enabled": true\n                    },\n                    "smm": {\n                      "enabled": true\n                    }\n                  },\n                  "firmware": {\n                    "bootloader": {\n                      "bios": {\n                        "useSerial": true\n                      },\n                      "efi": {\n                        "persistent": true,\n                        "secureBoot": true\n                      }\n                    },\n                    "kernelBoot": {\n                      "container": {\n                        "image": "string",\n                        "imagePullPolicy": "Always",\n                        "imagePullSecret": "string",\n                        "initrdPath": "string",\n                        "kernelPath": "string"\n                      },\n                      "kernelArgs": "string"\n                    },\n                    "serial": "string",\n                    "uuid": "string"\n                  },\n                  "ioThreadsPolicy": "string",\n                  "launchSecurity": {\n                    "sev": {\n                      "attestation": {},\n                      "dhCert": "string",\n                      "policy": {\n                        "encryptedState": true\n                      },\n                      "session": "string"\n                    }\n                  },\n                  "machine": {\n                    "type": "string"\n                  },\n                  "memory": {\n                    "guest": "string",\n                    "hugepages": {\n                      "pageSize": "string"\n                    },\n                    "maxGuest": "string"\n                  },\n                  "resources": {\n                    "limits": {},\n                    "overcommitGuestOverhead": true,\n                    "requests": {}\n                  }\n                },\n                "evictionStrategy": "string",\n                "hostname": "string",\n                "livenessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "networks": [\n                  {\n                    "multus": {\n                      "default": true,\n                      "networkName": "string"\n                    },\n                    "name": "string",\n                    "pod": {\n                      "vmIPv6NetworkCIDR": "string",\n                      "vmNetworkCIDR": "string"\n                    }\n                  }\n                ],\n                "nodeSelector": {},\n                "priorityClassName": "string",\n                "readinessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "schedulerName": "string",\n                "startStrategy": "string",\n                "subdomain": "string",\n                "terminationGracePeriodSeconds": 0,\n                "tolerations": [\n                  {\n                    "effect": "NoExecute",\n                    "key": "string",\n                    "operator": "Equal",\n                    "tolerationSeconds": 0,\n                    "value": "string"\n                  }\n                ],\n                "topologySpreadConstraints": [\n                  {\n                    "labelSelector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "matchLabelKeys": [\n                      "string"\n                    ],\n                    "maxSkew": 0,\n                    "minDomains": 0,\n                    "nodeAffinityPolicy": "string",\n                    "nodeTaintsPolicy": "string",\n                    "topologyKey": "string",\n                    "whenUnsatisfiable": "DoNotSchedule"\n                  }\n                ],\n                "volumes": [\n                  {\n                    "cloudInitConfigDrive": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "cloudInitNoCloud": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "configMap": {\n                      "name": "string",\n                      "optional": true,\n                      "volumeLabel": "string"\n                    },\n                    "containerDisk": {\n                      "image": "string",\n                      "imagePullPolicy": "Always",\n                      "imagePullSecret": "string",\n                      "path": "string"\n                    },\n                    "dataVolume": {\n                      "hotpluggable": true,\n                      "name": "string"\n                    },\n                    "downwardAPI": {\n                      "fields": [\n                        {\n                          "fieldRef": {\n                            "apiVersion": "string",\n                            "fieldPath": "string"\n                          },\n                          "mode": 0,\n                          "path": "string",\n                          "resourceFieldRef": {\n                            "containerName": "string",\n                            "divisor": {},\n                            "resource": "string"\n                          }\n                        }\n                      ],\n                      "volumeLabel": "string"\n                    },\n                    "downwardMetrics": {},\n                    "emptyDisk": {\n                      "capacity": {}\n                    },\n                    "ephemeral": {\n                      "persistentVolumeClaim": {\n                        "claimName": "string",\n                        "readOnly": true\n                      }\n                    },\n                    "hostDisk": {\n                      "capacity": {},\n                      "path": "string",\n                      "shared": true,\n                      "type": "string"\n                    },\n                    "memoryDump": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "name": "string",\n                    "persistentVolumeClaim": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "secret": {\n                      "optional": true,\n                      "secretName": "string",\n                      "volumeLabel": "string"\n                    },\n                    "serviceAccount": {\n                      "serviceAccountName": "string"\n                    },\n                    "sysprep": {\n                      "configMap": {\n                        "name": "string"\n                      },\n                      "secret": {\n                        "name": "string"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        "sourceUID": "string",\n        "volumeBackups": [\n          {\n            "creationTime": "string",\n            "csiDriverName": "string",\n            "error": {\n              "message": "string",\n              "time": "string"\n            },\n            "longhornBackupName": "string",\n            "name": "string",\n            "persistentVolumeClaim": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessModes": [\n                  "string"\n                ],\n                "dataSource": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string"\n                },\n                "dataSourceRef": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "resources": {\n                  "claims": [\n                    {\n                      "name": "string"\n                    }\n                  ],\n                  "limits": {},\n                  "requests": {}\n                },\n                "selector": {\n                  "matchExpressions": [\n                    {\n                      "key": "string",\n                      "operator": "string",\n                      "values": [\n                        "string"\n                      ]\n                    }\n                  ],\n                  "matchLabels": {}\n                },\n                "storageClassName": "string",\n                "volumeMode": "string",\n                "volumeName": "string"\n              }\n            },\n            "progress": 0,\n            "readyToUse": true,\n            "volumeName": "string",\n            "volumeSize": 0\n          }\n        ]\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,i.kt)(y.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["source"],properties:{source:{default:{},allOf:[{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"}]},type:{type:"string"}},title:"harvesterhci.io.v1beta1.VirtualMachineBackupSpec"}]},status:{type:"object",properties:{backupTarget:{type:"object",properties:{bucketName:{type:"string"},bucketRegion:{type:"string"},endpoint:{type:"string"}},title:"harvesterhci.io.v1beta1.BackupTarget"},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},creationTime:{type:"string",default:"",title:"k8s.io.v1.Time"},csiDriverVolumeSnapshotClassNames:{type:"object",additionalProperties:{type:"string",default:""}},error:{type:"object",properties:{message:{type:"string"},time:{type:"string",default:"",title:"k8s.io.v1.Time"}},title:"harvesterhci.io.v1beta1.Error"},progress:{type:"integer",format:"int32"},readyToUse:{type:"boolean"},secretBackups:{type:"array",items:{default:{},allOf:[{type:"object",properties:{data:{type:"object",additionalProperties:{type:"string",format:"byte"}},name:{type:"string"}},title:"harvesterhci.io.v1beta1.SecretBackup"}]}},source:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["template"],properties:{dataVolumeTemplates:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{checkpoints:{type:"array",items:{default:{},allOf:[{type:"object",required:["current","previous"],properties:{current:{type:"string",default:""},previous:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint"}]}},contentType:{type:"string"},finalCheckpoint:{type:"boolean"},preallocation:{type:"boolean"},priorityClassName:{type:"string"},pvc:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"},source:{type:"object",properties:{blank:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage"},gcs:{type:"object",required:["url"],properties:{secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS"},http:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},extraHeaders:{type:"array",items:{type:"string",default:""}},secretExtraHeaders:{type:"array",items:{type:"string",default:""}},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP"},imageio:{type:"object",required:["diskId","url"],properties:{certConfigMap:{type:"string"},diskId:{type:"string",default:""},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO"},pvc:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC"},registry:{type:"object",properties:{certConfigMap:{type:"string"},imageStream:{type:"string"},pullMethod:{type:"string"},secretRef:{type:"string"},url:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry"},s3:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3"},snapshot:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot"},upload:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload"},vddk:{type:"object",properties:{backingFile:{type:"string"},initImageURL:{type:"string"},secretRef:{type:"string"},thumbprint:{type:"string"},url:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource"},sourceRef:{type:"object",required:["kind","name"],properties:{kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef"},storage:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec"}]},status:{type:"object",title:"kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus"}},title:"kubevirt.io.api.core.v1.DataVolumeTemplateSpec"}]}},instancetype:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.InstancetypeMatcher"},liveUpdateFeatures:{type:"object",properties:{affinity:{type:"object",title:"kubevirt.io.api.core.v1.LiveUpdateAffinity"},cpu:{type:"object",properties:{maxSockets:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.LiveUpdateCPU"},memory:{type:"object",properties:{maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.LiveUpdateMemory"}},title:"kubevirt.io.api.core.v1.LiveUpdateFeatures"},preference:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.PreferenceMatcher"},runStrategy:{type:"string"},running:{type:"boolean"},template:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["domain"],properties:{accessCredentials:{type:"array",items:{default:{},allOf:[{type:"object",properties:{sshPublicKey:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{configDrive:{type:"object",title:"kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"},noCloud:{type:"object",title:"kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation"},qemuGuestAgent:{type:"object",required:["users"],properties:{users:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"set"}},title:"kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential"},userPassword:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{qemuGuestAgent:{type:"object",title:"kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredential"}},title:"kubevirt.io.api.core.v1.AccessCredential"}]},"x-kubernetes-list-type":"atomic"},affinity:{type:"object",properties:{nodeAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["preference","weight"],properties:{preference:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.PreferredSchedulingTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"object",required:["nodeSelectorTerms"],properties:{nodeSelectorTerms:{type:"array",items:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelector"}},title:"k8s.io.v1.NodeAffinity"},podAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAffinity"},podAntiAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAntiAffinity"}},title:"k8s.io.v1.Affinity"},architecture:{type:"string"},dnsConfig:{type:"object",properties:{nameservers:{type:"array",items:{type:"string",default:""}},options:{type:"array",items:{default:{},allOf:[{type:"object",properties:{name:{type:"string"},value:{type:"string"}},title:"k8s.io.v1.PodDNSConfigOption"}]}},searches:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.PodDNSConfig"},dnsPolicy:{type:"string",enum:["ClusterFirst","ClusterFirstWithHostNet","Default","None"]},domain:{default:{},allOf:[{type:"object",required:["devices"],properties:{chassis:{type:"object",properties:{asset:{type:"string"},manufacturer:{type:"string"},serial:{type:"string"},sku:{type:"string"},version:{type:"string"}},title:"kubevirt.io.api.core.v1.Chassis"},clock:{type:"object",properties:{timer:{type:"object",properties:{hpet:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.HPETTimer"},hyperv:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.HypervTimer"},kvm:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.KVMTimer"},pit:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.PITTimer"},rtc:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"},track:{type:"string"}},title:"kubevirt.io.api.core.v1.RTCTimer"}},title:"kubevirt.io.api.core.v1.Timer"},timezone:{type:"string"},utc:{type:"object",properties:{offsetSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.ClockOffsetUTC"}},title:"kubevirt.io.api.core.v1.Clock"},cpu:{type:"object",properties:{cores:{type:"integer",format:"int64"},dedicatedCpuPlacement:{type:"boolean"},features:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""},policy:{type:"string"}},title:"kubevirt.io.api.core.v1.CPUFeature"}]}},isolateEmulatorThread:{type:"boolean"},maxSockets:{type:"integer",format:"int64"},model:{type:"string"},numa:{type:"object",properties:{guestMappingPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough"}},title:"kubevirt.io.api.core.v1.NUMA"},realtime:{type:"object",properties:{mask:{type:"string"}},title:"kubevirt.io.api.core.v1.Realtime"},sockets:{type:"integer",format:"int64"},threads:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.CPU"},devices:{default:{},allOf:[{type:"object",properties:{autoattachGraphicsDevice:{type:"boolean"},autoattachInputDevice:{type:"boolean"},autoattachMemBalloon:{type:"boolean"},autoattachPodInterface:{type:"boolean"},autoattachSerialConsole:{type:"boolean"},autoattachVSOCK:{type:"boolean"},blockMultiQueue:{type:"boolean"},clientPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.ClientPassthroughDevices"},disableHotplug:{type:"boolean"},disks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{blockSize:{type:"object",properties:{custom:{type:"object",required:["logical","physical"],properties:{logical:{type:"integer",format:"int32",default:0},physical:{type:"integer",format:"int32",default:0}},title:"kubevirt.io.api.core.v1.CustomBlockSize"},matchVolume:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.BlockSize"},bootOrder:{type:"integer",format:"int32"},cache:{type:"string"},cdrom:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},tray:{type:"string"}},title:"kubevirt.io.api.core.v1.CDRomTarget"},dedicatedIOThread:{type:"boolean"},disk:{type:"object",properties:{bus:{type:"string"},pciAddress:{type:"string"},readonly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.DiskTarget"},errorPolicy:{type:"string"},io:{type:"string"},lun:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},reservation:{type:"boolean"}},title:"kubevirt.io.api.core.v1.LunTarget"},name:{type:"string",default:""},serial:{type:"string"},shareable:{type:"boolean"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Disk"}]}},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetrics"},filesystems:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","virtiofs"],properties:{name:{type:"string",default:""},virtiofs:{type:"object",title:"kubevirt.io.api.core.v1.FilesystemVirtiofs"}},title:"kubevirt.io.api.core.v1.Filesystem"}]},"x-kubernetes-list-type":"atomic"},gpus:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"},virtualGPUOptions:{type:"object",properties:{display:{type:"object",properties:{enabled:{type:"boolean"},ramFB:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.VGPUDisplayOptions"}},title:"kubevirt.io.api.core.v1.VGPUOptions"}},title:"kubevirt.io.api.core.v1.GPU"}]},"x-kubernetes-list-type":"atomic"},hostDevices:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.HostDevice"}]},"x-kubernetes-list-type":"atomic"},inputs:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","type"],properties:{bus:{type:"string"},name:{type:"string",default:""},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Input"}]}},interfaces:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{acpiIndex:{type:"integer",format:"int32"},binding:{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.PluginBinding"},bootOrder:{type:"integer",format:"int32"},bridge:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceBridge"},dhcpOptions:{type:"object",properties:{bootFileName:{type:"string"},ntpServers:{type:"array",items:{type:"string",default:""}},privateOptions:{type:"array",items:{default:{},allOf:[{type:"object",required:["option","value"],properties:{option:{type:"integer",format:"int32",default:0},value:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DHCPPrivateOptions"}]}},tftpServerName:{type:"string"}},title:"kubevirt.io.api.core.v1.DHCPOptions"},macAddress:{type:"string"},macvtap:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMacvtap"},masquerade:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMasquerade"},model:{type:"string"},name:{type:"string",default:""},passt:{type:"object",title:"kubevirt.io.api.core.v1.InterfacePasst"},pciAddress:{type:"string"},ports:{type:"array",items:{default:{},allOf:[{type:"object",required:["port"],properties:{name:{type:"string"},port:{type:"integer",format:"int32",default:0},protocol:{type:"string"}},title:"kubevirt.io.api.core.v1.Port"}]}},slirp:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSlirp"},sriov:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSRIOV"},state:{type:"string"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Interface"}]}},logSerialConsole:{type:"boolean"},networkInterfaceMultiqueue:{type:"boolean"},rng:{type:"object",title:"kubevirt.io.api.core.v1.Rng"},sound:{type:"object",required:["name"],properties:{model:{type:"string"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.SoundDevice"},tpm:{type:"object",properties:{persistent:{type:"boolean"}},title:"kubevirt.io.api.core.v1.TPMDevice"},useVirtioTransitional:{type:"boolean"},watchdog:{type:"object",required:["name"],properties:{i6300esb:{type:"object",properties:{action:{type:"string"}},title:"kubevirt.io.api.core.v1.I6300ESBWatchdog"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Watchdog"}},title:"kubevirt.io.api.core.v1.Devices"}]},features:{type:"object",properties:{acpi:{default:{},allOf:[{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}]},apic:{type:"object",properties:{enabled:{type:"boolean"},endOfInterrupt:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureAPIC"},hyperv:{type:"object",properties:{evmcs:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},frequencies:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},ipi:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reenlightenment:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},relaxed:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reset:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},runtime:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},spinlocks:{type:"object",properties:{enabled:{type:"boolean"},spinlocks:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.FeatureSpinlocks"},synic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},synictimer:{type:"object",properties:{direct:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SyNICTimer"},tlbflush:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vapic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vendorid:{type:"object",properties:{enabled:{type:"boolean"},vendorid:{type:"string"}},title:"kubevirt.io.api.core.v1.FeatureVendorID"},vpindex:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.FeatureHyperv"},kvm:{type:"object",properties:{hidden:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureKVM"},pvspinlock:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},smm:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.Features"},firmware:{type:"object",properties:{bootloader:{type:"object",properties:{bios:{type:"object",properties:{useSerial:{type:"boolean"}},title:"kubevirt.io.api.core.v1.BIOS"},efi:{type:"object",properties:{persistent:{type:"boolean"},secureBoot:{type:"boolean"}},title:"kubevirt.io.api.core.v1.EFI"}},title:"kubevirt.io.api.core.v1.Bootloader"},kernelBoot:{type:"object",properties:{container:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},initrdPath:{type:"string"},kernelPath:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBootContainer"},kernelArgs:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBoot"},serial:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.api.core.v1.Firmware"},ioThreadsPolicy:{type:"string"},launchSecurity:{type:"object",properties:{sev:{type:"object",properties:{attestation:{type:"object",title:"kubevirt.io.api.core.v1.SEVAttestation"},dhCert:{type:"string"},policy:{type:"object",properties:{encryptedState:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SEVPolicy"},session:{type:"string"}},title:"kubevirt.io.api.core.v1.SEV"}},title:"kubevirt.io.api.core.v1.LaunchSecurity"},machine:{type:"object",properties:{type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Machine"},memory:{type:"object",properties:{guest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"},hugepages:{type:"object",properties:{pageSize:{type:"string"}},title:"kubevirt.io.api.core.v1.Hugepages"},maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.Memory"},resources:{default:{},allOf:[{type:"object",properties:{limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},overcommitGuestOverhead:{type:"boolean"},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"kubevirt.io.api.core.v1.ResourceRequirements"}]}},title:"kubevirt.io.api.core.v1.DomainSpec"}]},evictionStrategy:{type:"string"},hostname:{type:"string"},livenessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},networks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{multus:{type:"object",required:["networkName"],properties:{default:{type:"boolean"},networkName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.MultusNetwork"},name:{type:"string",default:""},pod:{type:"object",properties:{vmIPv6NetworkCIDR:{type:"string"},vmNetworkCIDR:{type:"string"}},title:"kubevirt.io.api.core.v1.PodNetwork"}},title:"kubevirt.io.api.core.v1.Network"}]}},nodeSelector:{type:"object",additionalProperties:{type:"string",default:""}},priorityClassName:{type:"string"},readinessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},schedulerName:{type:"string"},startStrategy:{type:"string"},subdomain:{type:"string"},terminationGracePeriodSeconds:{type:"integer",format:"int64"},tolerations:{type:"array",items:{default:{},allOf:[{type:"object",properties:{effect:{type:"string",enum:["NoExecute","NoSchedule","PreferNoSchedule"]},key:{type:"string"},operator:{type:"string",enum:["Equal","Exists"]},tolerationSeconds:{type:"integer",format:"int64"},value:{type:"string"}},title:"k8s.io.v1.Toleration"}]}},topologySpreadConstraints:{type:"array",items:{default:{},allOf:[{type:"object",required:["maxSkew","topologyKey","whenUnsatisfiable"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},matchLabelKeys:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"atomic"},maxSkew:{type:"integer",format:"int32",default:0},minDomains:{type:"integer",format:"int32"},nodeAffinityPolicy:{type:"string"},nodeTaintsPolicy:{type:"string"},topologyKey:{type:"string",default:""},whenUnsatisfiable:{type:"string",default:"",enum:["DoNotSchedule","ScheduleAnyway"]}},title:"k8s.io.v1.TopologySpreadConstraint"}]},"x-kubernetes-list-map-keys":["topologyKey","whenUnsatisfiable"],"x-kubernetes-list-type":"map","x-kubernetes-patch-merge-key":"topologyKey","x-kubernetes-patch-strategy":"merge"},volumes:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{cloudInitConfigDrive:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitConfigDriveSource"},cloudInitNoCloud:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitNoCloudSource"},configMap:{type:"object",properties:{name:{type:"string"},optional:{type:"boolean"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.ConfigMapVolumeSource"},containerDisk:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},path:{type:"string"}},title:"kubevirt.io.api.core.v1.ContainerDiskSource"},dataVolume:{type:"object",required:["name"],properties:{hotpluggable:{type:"boolean"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DataVolumeSource"},downwardAPI:{type:"object",properties:{fields:{type:"array",items:{default:{},allOf:[{type:"object",required:["path"],properties:{fieldRef:{type:"object",required:["fieldPath"],properties:{apiVersion:{type:"string"},fieldPath:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ObjectFieldSelector"},mode:{type:"integer",format:"int32"},path:{type:"string",default:""},resourceFieldRef:{type:"object",required:["resource"],properties:{containerName:{type:"string"},divisor:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},resource:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ResourceFieldSelector"}},title:"k8s.io.v1.DownwardAPIVolumeFile"}]}},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.DownwardAPIVolumeSource"},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetricsVolumeSource"},emptyDisk:{type:"object",required:["capacity"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},title:"kubevirt.io.api.core.v1.EmptyDiskSource"},ephemeral:{type:"object",properties:{persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},readOnly:{type:"boolean"}},title:"k8s.io.v1.PersistentVolumeClaimVolumeSource"}},title:"kubevirt.io.api.core.v1.EphemeralVolumeSource"},hostDisk:{type:"object",required:["path","type"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},path:{type:"string",default:""},shared:{type:"boolean"},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.HostDisk"},memoryDump:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.MemoryDumpVolumeSource"},name:{type:"string",default:""},persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"},secret:{type:"object",properties:{optional:{type:"boolean"},secretName:{type:"string"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.SecretVolumeSource"},serviceAccount:{type:"object",properties:{serviceAccountName:{type:"string"}},title:"kubevirt.io.api.core.v1.ServiceAccountVolumeSource"},sysprep:{type:"object",properties:{configMap:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secret:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"}},title:"kubevirt.io.api.core.v1.SysprepSource"}},title:"kubevirt.io.api.core.v1.Volume"}]}}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"}]}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec"}},title:"kubevirt.io.api.core.v1.VirtualMachineSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineSourceSpec"},sourceUID:{type:"string"},volumeBackups:{type:"array",items:{default:{},allOf:[{type:"object",required:["csiDriverName","persistentVolumeClaim","volumeName"],properties:{creationTime:{type:"string",default:"",title:"k8s.io.v1.Time"},csiDriverName:{type:"string",default:""},error:{type:"object",properties:{message:{type:"string"},time:{type:"string",default:"",title:"k8s.io.v1.Time"}},title:"harvesterhci.io.v1beta1.Error"},longhornBackupName:{type:"string"},name:{type:"string"},persistentVolumeClaim:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]}},title:"harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"}]},progress:{type:"integer",format:"int32"},readyToUse:{type:"boolean"},volumeName:{type:"string",default:""},volumeSize:{type:"integer",format:"int64"}},title:"harvesterhci.io.v1beta1.VolumeBackup"}]}}},title:"harvesterhci.io.v1beta1.VirtualMachineBackupStatus"}},title:"harvesterhci.io.v1beta1.VirtualMachineBackup"}]}},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,i.kt)("span",{className:"openapi-schema__name"}," object"),(0,i.kt)("span",{className:"openapi-schema__divider"}),(0,i.kt)("span",{className:"openapi-schema__required"},"required"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,i.kt)(y.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "source": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "type": "string"\n      },\n      "status": {\n        "backupTarget": {\n          "bucketName": "string",\n          "bucketRegion": "string",\n          "endpoint": "string"\n        },\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "creationTime": "string",\n        "csiDriverVolumeSnapshotClassNames": {},\n        "error": {\n          "message": "string",\n          "time": "string"\n        },\n        "progress": 0,\n        "readyToUse": true,\n        "secretBackups": [\n          {\n            "data": {},\n            "name": "string"\n          }\n        ],\n        "source": {\n          "metadata": {\n            "name": "string",\n            "namespace": "string"\n          },\n          "spec": {\n            "dataVolumeTemplates": [\n              {\n                "apiVersion": "string",\n                "kind": "string",\n                "metadata": {\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "spec": {\n                  "checkpoints": [\n                    {\n                      "current": "string",\n                      "previous": "string"\n                    }\n                  ],\n                  "contentType": "string",\n                  "finalCheckpoint": true,\n                  "preallocation": true,\n                  "priorityClassName": "string",\n                  "pvc": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  },\n                  "source": {\n                    "blank": {},\n                    "gcs": {\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "http": {\n                      "certConfigMap": "string",\n                      "extraHeaders": [\n                        "string"\n                      ],\n                      "secretExtraHeaders": [\n                        "string"\n                      ],\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "imageio": {\n                      "certConfigMap": "string",\n                      "diskId": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "pvc": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "registry": {\n                      "certConfigMap": "string",\n                      "imageStream": "string",\n                      "pullMethod": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "s3": {\n                      "certConfigMap": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "snapshot": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "upload": {},\n                    "vddk": {\n                      "backingFile": "string",\n                      "initImageURL": "string",\n                      "secretRef": "string",\n                      "thumbprint": "string",\n                      "url": "string",\n                      "uuid": "string"\n                    }\n                  },\n                  "sourceRef": {\n                    "kind": "string",\n                    "name": "string",\n                    "namespace": "string"\n                  },\n                  "storage": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  }\n                },\n                "status": {}\n              }\n            ],\n            "instancetype": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "liveUpdateFeatures": {\n              "affinity": {},\n              "cpu": {\n                "maxSockets": 0\n              },\n              "memory": {\n                "maxGuest": "string"\n              }\n            },\n            "preference": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "runStrategy": "string",\n            "running": true,\n            "template": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessCredentials": [\n                  {\n                    "sshPublicKey": {\n                      "propagationMethod": {\n                        "configDrive": {},\n                        "noCloud": {},\n                        "qemuGuestAgent": {\n                          "users": [\n                            "string"\n                          ]\n                        }\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    },\n                    "userPassword": {\n                      "propagationMethod": {\n                        "qemuGuestAgent": {}\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    }\n                  }\n                ],\n                "affinity": {\n                  "nodeAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "preference": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": {\n                      "nodeSelectorTerms": [\n                        {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  "podAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  },\n                  "podAntiAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  }\n                },\n                "architecture": "string",\n                "dnsConfig": {\n                  "nameservers": [\n                    "string"\n                  ],\n                  "options": [\n                    {\n                      "name": "string",\n                      "value": "string"\n                    }\n                  ],\n                  "searches": [\n                    "string"\n                  ]\n                },\n                "dnsPolicy": "ClusterFirst",\n                "domain": {\n                  "chassis": {\n                    "asset": "string",\n                    "manufacturer": "string",\n                    "serial": "string",\n                    "sku": "string",\n                    "version": "string"\n                  },\n                  "clock": {\n                    "timer": {\n                      "hpet": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "hyperv": {\n                        "present": true\n                      },\n                      "kvm": {\n                        "present": true\n                      },\n                      "pit": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "rtc": {\n                        "present": true,\n                        "tickPolicy": "string",\n                        "track": "string"\n                      }\n                    },\n                    "timezone": "string",\n                    "utc": {\n                      "offsetSeconds": 0\n                    }\n                  },\n                  "cpu": {\n                    "cores": 0,\n                    "dedicatedCpuPlacement": true,\n                    "features": [\n                      {\n                        "name": "string",\n                        "policy": "string"\n                      }\n                    ],\n                    "isolateEmulatorThread": true,\n                    "maxSockets": 0,\n                    "model": "string",\n                    "numa": {\n                      "guestMappingPassthrough": {}\n                    },\n                    "realtime": {\n                      "mask": "string"\n                    },\n                    "sockets": 0,\n                    "threads": 0\n                  },\n                  "devices": {\n                    "autoattachGraphicsDevice": true,\n                    "autoattachInputDevice": true,\n                    "autoattachMemBalloon": true,\n                    "autoattachPodInterface": true,\n                    "autoattachSerialConsole": true,\n                    "autoattachVSOCK": true,\n                    "blockMultiQueue": true,\n                    "clientPassthrough": {},\n                    "disableHotplug": true,\n                    "disks": [\n                      {\n                        "blockSize": {\n                          "custom": {\n                            "logical": 0,\n                            "physical": 0\n                          },\n                          "matchVolume": {\n                            "enabled": true\n                          }\n                        },\n                        "bootOrder": 0,\n                        "cache": "string",\n                        "cdrom": {\n                          "bus": "string",\n                          "readonly": true,\n                          "tray": "string"\n                        },\n                        "dedicatedIOThread": true,\n                        "disk": {\n                          "bus": "string",\n                          "pciAddress": "string",\n                          "readonly": true\n                        },\n                        "errorPolicy": "string",\n                        "io": "string",\n                        "lun": {\n                          "bus": "string",\n                          "readonly": true,\n                          "reservation": true\n                        },\n                        "name": "string",\n                        "serial": "string",\n                        "shareable": true,\n                        "tag": "string"\n                      }\n                    ],\n                    "downwardMetrics": {},\n                    "filesystems": [\n                      {\n                        "name": "string",\n                        "virtiofs": {}\n                      }\n                    ],\n                    "gpus": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string",\n                        "virtualGPUOptions": {\n                          "display": {\n                            "enabled": true,\n                            "ramFB": {\n                              "enabled": true\n                            }\n                          }\n                        }\n                      }\n                    ],\n                    "hostDevices": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "inputs": [\n                      {\n                        "bus": "string",\n                        "name": "string",\n                        "type": "string"\n                      }\n                    ],\n                    "interfaces": [\n                      {\n                        "acpiIndex": 0,\n                        "binding": {\n                          "name": "string"\n                        },\n                        "bootOrder": 0,\n                        "bridge": {},\n                        "dhcpOptions": {\n                          "bootFileName": "string",\n                          "ntpServers": [\n                            "string"\n                          ],\n                          "privateOptions": [\n                            {\n                              "option": 0,\n                              "value": "string"\n                            }\n                          ],\n                          "tftpServerName": "string"\n                        },\n                        "macAddress": "string",\n                        "macvtap": {},\n                        "masquerade": {},\n                        "model": "string",\n                        "name": "string",\n                        "passt": {},\n                        "pciAddress": "string",\n                        "ports": [\n                          {\n                            "name": "string",\n                            "port": 0,\n                            "protocol": "string"\n                          }\n                        ],\n                        "slirp": {},\n                        "sriov": {},\n                        "state": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "logSerialConsole": true,\n                    "networkInterfaceMultiqueue": true,\n                    "rng": {},\n                    "sound": {\n                      "model": "string",\n                      "name": "string"\n                    },\n                    "tpm": {\n                      "persistent": true\n                    },\n                    "useVirtioTransitional": true,\n                    "watchdog": {\n                      "i6300esb": {\n                        "action": "string"\n                      },\n                      "name": "string"\n                    }\n                  },\n                  "features": {\n                    "acpi": {\n                      "enabled": true\n                    },\n                    "apic": {\n                      "enabled": true,\n                      "endOfInterrupt": true\n                    },\n                    "hyperv": {\n                      "evmcs": {\n                        "enabled": true\n                      },\n                      "frequencies": {\n                        "enabled": true\n                      },\n                      "ipi": {\n                        "enabled": true\n                      },\n                      "reenlightenment": {\n                        "enabled": true\n                      },\n                      "relaxed": {\n                        "enabled": true\n                      },\n                      "reset": {\n                        "enabled": true\n                      },\n                      "runtime": {\n                        "enabled": true\n                      },\n                      "spinlocks": {\n                        "enabled": true,\n                        "spinlocks": 0\n                      },\n                      "synic": {\n                        "enabled": true\n                      },\n                      "synictimer": {\n                        "direct": {\n                          "enabled": true\n                        },\n                        "enabled": true\n                      },\n                      "tlbflush": {\n                        "enabled": true\n                      },\n                      "vapic": {\n                        "enabled": true\n                      },\n                      "vendorid": {\n                        "enabled": true,\n                        "vendorid": "string"\n                      },\n                      "vpindex": {\n                        "enabled": true\n                      }\n                    },\n                    "kvm": {\n                      "hidden": true\n                    },\n                    "pvspinlock": {\n                      "enabled": true\n                    },\n                    "smm": {\n                      "enabled": true\n                    }\n                  },\n                  "firmware": {\n                    "bootloader": {\n                      "bios": {\n                        "useSerial": true\n                      },\n                      "efi": {\n                        "persistent": true,\n                        "secureBoot": true\n                      }\n                    },\n                    "kernelBoot": {\n                      "container": {\n                        "image": "string",\n                        "imagePullPolicy": "Always",\n                        "imagePullSecret": "string",\n                        "initrdPath": "string",\n                        "kernelPath": "string"\n                      },\n                      "kernelArgs": "string"\n                    },\n                    "serial": "string",\n                    "uuid": "string"\n                  },\n                  "ioThreadsPolicy": "string",\n                  "launchSecurity": {\n                    "sev": {\n                      "attestation": {},\n                      "dhCert": "string",\n                      "policy": {\n                        "encryptedState": true\n                      },\n                      "session": "string"\n                    }\n                  },\n                  "machine": {\n                    "type": "string"\n                  },\n                  "memory": {\n                    "guest": "string",\n                    "hugepages": {\n                      "pageSize": "string"\n                    },\n                    "maxGuest": "string"\n                  },\n                  "resources": {\n                    "limits": {},\n                    "overcommitGuestOverhead": true,\n                    "requests": {}\n                  }\n                },\n                "evictionStrategy": "string",\n                "hostname": "string",\n                "livenessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "networks": [\n                  {\n                    "multus": {\n                      "default": true,\n                      "networkName": "string"\n                    },\n                    "name": "string",\n                    "pod": {\n                      "vmIPv6NetworkCIDR": "string",\n                      "vmNetworkCIDR": "string"\n                    }\n                  }\n                ],\n                "nodeSelector": {},\n                "priorityClassName": "string",\n                "readinessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "schedulerName": "string",\n                "startStrategy": "string",\n                "subdomain": "string",\n                "terminationGracePeriodSeconds": 0,\n                "tolerations": [\n                  {\n                    "effect": "NoExecute",\n                    "key": "string",\n                    "operator": "Equal",\n                    "tolerationSeconds": 0,\n                    "value": "string"\n                  }\n                ],\n                "topologySpreadConstraints": [\n                  {\n                    "labelSelector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "matchLabelKeys": [\n                      "string"\n                    ],\n                    "maxSkew": 0,\n                    "minDomains": 0,\n                    "nodeAffinityPolicy": "string",\n                    "nodeTaintsPolicy": "string",\n                    "topologyKey": "string",\n                    "whenUnsatisfiable": "DoNotSchedule"\n                  }\n                ],\n                "volumes": [\n                  {\n                    "cloudInitConfigDrive": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "cloudInitNoCloud": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "configMap": {\n                      "name": "string",\n                      "optional": true,\n                      "volumeLabel": "string"\n                    },\n                    "containerDisk": {\n                      "image": "string",\n                      "imagePullPolicy": "Always",\n                      "imagePullSecret": "string",\n                      "path": "string"\n                    },\n                    "dataVolume": {\n                      "hotpluggable": true,\n                      "name": "string"\n                    },\n                    "downwardAPI": {\n                      "fields": [\n                        {\n                          "fieldRef": {\n                            "apiVersion": "string",\n                            "fieldPath": "string"\n                          },\n                          "mode": 0,\n                          "path": "string",\n                          "resourceFieldRef": {\n                            "containerName": "string",\n                            "divisor": {},\n                            "resource": "string"\n                          }\n                        }\n                      ],\n                      "volumeLabel": "string"\n                    },\n                    "downwardMetrics": {},\n                    "emptyDisk": {\n                      "capacity": {}\n                    },\n                    "ephemeral": {\n                      "persistentVolumeClaim": {\n                        "claimName": "string",\n                        "readOnly": true\n                      }\n                    },\n                    "hostDisk": {\n                      "capacity": {},\n                      "path": "string",\n                      "shared": true,\n                      "type": "string"\n                    },\n                    "memoryDump": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "name": "string",\n                    "persistentVolumeClaim": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "secret": {\n                      "optional": true,\n                      "secretName": "string",\n                      "volumeLabel": "string"\n                    },\n                    "serviceAccount": {\n                      "serviceAccountName": "string"\n                    },\n                    "sysprep": {\n                      "configMap": {\n                        "name": "string"\n                      },\n                      "secret": {\n                        "name": "string"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        "sourceUID": "string",\n        "volumeBackups": [\n          {\n            "creationTime": "string",\n            "csiDriverName": "string",\n            "error": {\n              "message": "string",\n              "time": "string"\n            },\n            "longhornBackupName": "string",\n            "name": "string",\n            "persistentVolumeClaim": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessModes": [\n                  "string"\n                ],\n                "dataSource": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string"\n                },\n                "dataSourceRef": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "resources": {\n                  "claims": [\n                    {\n                      "name": "string"\n                    }\n                  ],\n                  "limits": {},\n                  "requests": {}\n                },\n                "selector": {\n                  "matchExpressions": [\n                    {\n                      "key": "string",\n                      "operator": "string",\n                      "values": [\n                        "string"\n                      ]\n                    }\n                  ],\n                  "matchLabels": {}\n                },\n                "storageClassName": "string",\n                "volumeMode": "string",\n                "volumeName": "string"\n              }\n            },\n            "progress": 0,\n            "readyToUse": true,\n            "volumeName": "string",\n            "volumeSize": 0\n          }\n        ]\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(y.default,{label:"401",value:"401",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Unauthorized")),(0,i.kt)("div",null,(0,i.kt)(o.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(y.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"string"))))))),(0,i.kt)(y.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"string"))))))),(0,i.kt)(y.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"string"))))))))))))))}h.isMDXComponent=!0}}]);