"use strict";(self.webpackChunkharvester_docs=self.webpackChunkharvester_docs||[]).push([[7222],{84925:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>v,frontMatter:()=>d,metadata:()=>g,toc:()=>k});a(67294);var s=a(3905),i=a(54734),n=a(90238),r=a.n(n),l=a(36765),m=a(99473),p=a(50690),o=a(88337),c=a(48951),u=a(50551);const d={id:"list-virtual-machine-restore-for-all-namespaces",title:"List Virtual Machine Restores For All Namespaces",description:"Get a list of all VirtualMachineRestore objects.",sidebar_label:"List Virtual Machine Restores For All Namespaces",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"version-v1.3/api/harvester-apis",custom_edit_url:null},y=void 0,g={unversionedId:"api/list-virtual-machine-restore-for-all-namespaces",id:"version-v1.3/api/list-virtual-machine-restore-for-all-namespaces",title:"List Virtual Machine Restores For All Namespaces",description:"Get a list of all VirtualMachineRestore objects.",source:"@site/versioned_docs/version-v1.3/api/list-virtual-machine-restore-for-all-namespaces.api.mdx",sourceDirName:"api",slug:"/api/list-virtual-machine-restore-for-all-namespaces",permalink:"/v1.3/api/list-virtual-machine-restore-for-all-namespaces",draft:!1,editUrl:null,tags:[],version:"v1.3",frontMatter:{id:"list-virtual-machine-restore-for-all-namespaces",title:"List Virtual Machine Restores For All Namespaces",description:"Get a list of all VirtualMachineRestore objects.",sidebar_label:"List Virtual Machine Restores For All Namespaces",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"version-v1.3/api/harvester-apis",custom_edit_url:null},sidebar:"api",previous:{title:"List Virtual Machine Instance Migrations For All Namespaces",permalink:"/v1.3/api/list-virtual-machine-instance-migration-for-all-namespaces"},next:{title:"List Virtual Machine Templates For All Namespaces",permalink:"/v1.3/api/list-virtual-machine-template-for-all-namespaces"}},h={},k=[{value:"Request",id:"request",level:2}],f={toc:k},b="wrapper";function v({components:e,...t}){return(0,s.kt)(b,{...f,...t,components:e,mdxType:"MDXLayout"},(0,s.kt)("h1",{className:"openapi__heading"},"List Virtual Machine Restores For All Namespaces"),(0,s.kt)(r(),{method:"get",path:"/apis/harvesterhci.io/v1beta1/virtualmachinerestores",mdxType:"MethodEndpoint"}),(0,s.kt)("p",null,"Get a list of all VirtualMachineRestore objects."),(0,s.kt)("h2",{id:"request"},"Request"),(0,s.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Query Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"continue",in:"query",description:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"fieldSelector",in:"query",description:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"includeUninitialized",in:"query",description:"If true, partially initialized resources are included in the response.",schema:{type:"boolean"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"labelSelector",in:"query",description:"A selector to restrict the list of returned objects by their labels. Defaults to everything",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"limit",in:"query",description:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"resourceVersion",in:"query",description:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"timeoutSeconds",in:"query",description:"TimeoutSeconds for the list/watch call.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"watch",in:"query",description:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",schema:{type:"boolean"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)("div",null,(0,s.kt)(i.Z,{label:void 0,id:void 0,mdxType:"ApiTabs"},(0,s.kt)(u.default,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"OK")),(0,s.kt)("div",null,(0,s.kt)(l.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(u.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(o.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["target","virtualMachineBackupName","virtualMachineBackupNamespace"],properties:{deletionPolicy:{type:"string"},keepMacAddress:{type:"boolean"},newVM:{type:"boolean"},target:{default:{},allOf:[{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"}]},virtualMachineBackupName:{type:"string",default:""},virtualMachineBackupNamespace:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.VirtualMachineRestoreSpec"}]},status:{type:"object",properties:{complete:{type:"boolean"},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},deletedVolumes:{type:"array",items:{type:"string",default:""}},progress:{type:"integer",format:"int32"},restoreTime:{type:"string",default:"",title:"k8s.io.v1.Time"},restores:{type:"array",items:{default:{},allOf:[{type:"object",properties:{longhornEngineName:{type:"string"},persistentVolumeClaimSpec:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]}},title:"harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"}]},progress:{type:"integer",format:"int32"},volumeBackupName:{type:"string"},volumeName:{type:"string"},volumeSize:{type:"integer",format:"int64"}},title:"harvesterhci.io.v1beta1.VolumeRestore"}]}},targetUID:{type:"string"}},title:"harvesterhci.io.v1beta1.VirtualMachineRestoreStatus"}},title:"harvesterhci.io.v1beta1.VirtualMachineRestore"}]}},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(o.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(u.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(p.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "deletionPolicy": "string",\n        "keepMacAddress": true,\n        "newVM": true,\n        "target": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "virtualMachineBackupName": "string",\n        "virtualMachineBackupNamespace": "string"\n      },\n      "status": {\n        "complete": true,\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "deletedVolumes": [\n          "string"\n        ],\n        "progress": 0,\n        "restoreTime": "string",\n        "restores": [\n          {\n            "longhornEngineName": "string",\n            "persistentVolumeClaimSpec": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessModes": [\n                  "string"\n                ],\n                "dataSource": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string"\n                },\n                "dataSourceRef": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "resources": {\n                  "claims": [\n                    {\n                      "name": "string"\n                    }\n                  ],\n                  "limits": {},\n                  "requests": {}\n                },\n                "selector": {\n                  "matchExpressions": [\n                    {\n                      "key": "string",\n                      "operator": "string",\n                      "values": [\n                        "string"\n                      ]\n                    }\n                  ],\n                  "matchLabels": {}\n                },\n                "storageClassName": "string",\n                "volumeMode": "string",\n                "volumeName": "string"\n              }\n            },\n            "progress": 0,\n            "volumeBackupName": "string",\n            "volumeName": "string",\n            "volumeSize": 0\n          }\n        ],\n        "targetUID": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,s.kt)(u.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(o.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["target","virtualMachineBackupName","virtualMachineBackupNamespace"],properties:{deletionPolicy:{type:"string"},keepMacAddress:{type:"boolean"},newVM:{type:"boolean"},target:{default:{},allOf:[{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"}]},virtualMachineBackupName:{type:"string",default:""},virtualMachineBackupNamespace:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.VirtualMachineRestoreSpec"}]},status:{type:"object",properties:{complete:{type:"boolean"},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},deletedVolumes:{type:"array",items:{type:"string",default:""}},progress:{type:"integer",format:"int32"},restoreTime:{type:"string",default:"",title:"k8s.io.v1.Time"},restores:{type:"array",items:{default:{},allOf:[{type:"object",properties:{longhornEngineName:{type:"string"},persistentVolumeClaimSpec:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]}},title:"harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"}]},progress:{type:"integer",format:"int32"},volumeBackupName:{type:"string"},volumeName:{type:"string"},volumeSize:{type:"integer",format:"int64"}},title:"harvesterhci.io.v1beta1.VolumeRestore"}]}},targetUID:{type:"string"}},title:"harvesterhci.io.v1beta1.VirtualMachineRestoreStatus"}},title:"harvesterhci.io.v1beta1.VirtualMachineRestore"}]}},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(o.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(u.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(p.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "deletionPolicy": "string",\n        "keepMacAddress": true,\n        "newVM": true,\n        "target": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "virtualMachineBackupName": "string",\n        "virtualMachineBackupNamespace": "string"\n      },\n      "status": {\n        "complete": true,\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "deletedVolumes": [\n          "string"\n        ],\n        "progress": 0,\n        "restoreTime": "string",\n        "restores": [\n          {\n            "longhornEngineName": "string",\n            "persistentVolumeClaimSpec": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessModes": [\n                  "string"\n                ],\n                "dataSource": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string"\n                },\n                "dataSourceRef": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "resources": {\n                  "claims": [\n                    {\n                      "name": "string"\n                    }\n                  ],\n                  "limits": {},\n                  "requests": {}\n                },\n                "selector": {\n                  "matchExpressions": [\n                    {\n                      "key": "string",\n                      "operator": "string",\n                      "values": [\n                        "string"\n                      ]\n                    }\n                  ],\n                  "matchLabels": {}\n                },\n                "storageClassName": "string",\n                "volumeMode": "string",\n                "volumeName": "string"\n              }\n            },\n            "progress": 0,\n            "volumeBackupName": "string",\n            "volumeName": "string",\n            "volumeSize": 0\n          }\n        ],\n        "targetUID": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,s.kt)(u.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(o.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["target","virtualMachineBackupName","virtualMachineBackupNamespace"],properties:{deletionPolicy:{type:"string"},keepMacAddress:{type:"boolean"},newVM:{type:"boolean"},target:{default:{},allOf:[{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"}]},virtualMachineBackupName:{type:"string",default:""},virtualMachineBackupNamespace:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.VirtualMachineRestoreSpec"}]},status:{type:"object",properties:{complete:{type:"boolean"},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},deletedVolumes:{type:"array",items:{type:"string",default:""}},progress:{type:"integer",format:"int32"},restoreTime:{type:"string",default:"",title:"k8s.io.v1.Time"},restores:{type:"array",items:{default:{},allOf:[{type:"object",properties:{longhornEngineName:{type:"string"},persistentVolumeClaimSpec:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]}},title:"harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec"}]},progress:{type:"integer",format:"int32"},volumeBackupName:{type:"string"},volumeName:{type:"string"},volumeSize:{type:"integer",format:"int64"}},title:"harvesterhci.io.v1beta1.VolumeRestore"}]}},targetUID:{type:"string"}},title:"harvesterhci.io.v1beta1.VirtualMachineRestoreStatus"}},title:"harvesterhci.io.v1beta1.VirtualMachineRestore"}]}},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(o.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(o.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(u.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(p.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "deletionPolicy": "string",\n        "keepMacAddress": true,\n        "newVM": true,\n        "target": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "virtualMachineBackupName": "string",\n        "virtualMachineBackupNamespace": "string"\n      },\n      "status": {\n        "complete": true,\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "deletedVolumes": [\n          "string"\n        ],\n        "progress": 0,\n        "restoreTime": "string",\n        "restores": [\n          {\n            "longhornEngineName": "string",\n            "persistentVolumeClaimSpec": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessModes": [\n                  "string"\n                ],\n                "dataSource": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string"\n                },\n                "dataSourceRef": {\n                  "apiGroup": "string",\n                  "kind": "string",\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "resources": {\n                  "claims": [\n                    {\n                      "name": "string"\n                    }\n                  ],\n                  "limits": {},\n                  "requests": {}\n                },\n                "selector": {\n                  "matchExpressions": [\n                    {\n                      "key": "string",\n                      "operator": "string",\n                      "values": [\n                        "string"\n                      ]\n                    }\n                  ],\n                  "matchLabels": {}\n                },\n                "storageClassName": "string",\n                "volumeMode": "string",\n                "volumeName": "string"\n              }\n            },\n            "progress": 0,\n            "volumeBackupName": "string",\n            "volumeName": "string",\n            "volumeSize": 0\n          }\n        ],\n        "targetUID": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(u.default,{label:"401",value:"401",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Unauthorized")),(0,s.kt)("div",null,(0,s.kt)(l.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(u.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))),(0,s.kt)(u.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))),(0,s.kt)(u.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))))))))))}v.isMDXComponent=!0}}]);