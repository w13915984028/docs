"use strict";(self.webpackChunkharvester_docs=self.webpackChunkharvester_docs||[]).push([[21468],{42625:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>b,contentTitle:()=>d,default:()=>h,frontMatter:()=>m,metadata:()=>g,toc:()=>v});r(67294);var i=r(3905),n=r(54734),a=r(90238),o=r.n(a),s=r(36765),p=r(99473),l=r(50690),c=r(88337),u=r(48951),y=r(50551);const m={id:"list-virtual-machine-template-version-for-all-namespaces",title:"List Virtual Machine Template Versions For All Namespaces",description:"Get a list of all VirtualMachineTemplateVersion objects.",sidebar_label:"List Virtual Machine Template Versions For All Namespaces",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"version-v1.3/api/harvester-apis",custom_edit_url:null},d=void 0,g={unversionedId:"api/list-virtual-machine-template-version-for-all-namespaces",id:"version-v1.3/api/list-virtual-machine-template-version-for-all-namespaces",title:"List Virtual Machine Template Versions For All Namespaces",description:"Get a list of all VirtualMachineTemplateVersion objects.",source:"@site/versioned_docs/version-v1.3/api/list-virtual-machine-template-version-for-all-namespaces.api.mdx",sourceDirName:"api",slug:"/api/list-virtual-machine-template-version-for-all-namespaces",permalink:"/v1.3/api/list-virtual-machine-template-version-for-all-namespaces",draft:!1,editUrl:null,tags:[],version:"v1.3",frontMatter:{id:"list-virtual-machine-template-version-for-all-namespaces",title:"List Virtual Machine Template Versions For All Namespaces",description:"Get a list of all VirtualMachineTemplateVersion objects.",sidebar_label:"List Virtual Machine Template Versions For All Namespaces",hide_title:!0,hide_table_of_contents:!0,api:"",sidebar_class_name:"get api-method",info_path:"version-v1.3/api/harvester-apis",custom_edit_url:null},sidebar:"api",previous:{title:"List Virtual Machine Templates For All Namespaces",permalink:"/v1.3/api/list-virtual-machine-template-for-all-namespaces"},next:{title:"Patch a Namespaced Cluster Network",permalink:"/v1.3/api/patch-namespaced-cluster-network"}},b={},v=[{value:"Request",id:"request",level:2}],f={toc:v},k="wrapper";function h({components:e,...t}){return(0,i.kt)(k,{...f,...t,components:e,mdxType:"MDXLayout"},(0,i.kt)("h1",{className:"openapi__heading"},"List Virtual Machine Template Versions For All Namespaces"),(0,i.kt)(o(),{method:"get",path:"/apis/harvesterhci.io/v1beta1/virtualmachinetemplateversions",mdxType:"MethodEndpoint"}),(0,i.kt)("p",null,"Get a list of all VirtualMachineTemplateVersion objects."),(0,i.kt)("h2",{id:"request"},"Request"),(0,i.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Query Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"continue",in:"query",description:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"fieldSelector",in:"query",description:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"includeUninitialized",in:"query",description:"If true, partially initialized resources are included in the response.",schema:{type:"boolean"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"labelSelector",in:"query",description:"A selector to restrict the list of returned objects by their labels. Defaults to everything",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"limit",in:"query",description:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"resourceVersion",in:"query",description:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"timeoutSeconds",in:"query",description:"TimeoutSeconds for the list/watch call.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,i.kt)(p.Z,{className:"paramsItem",param:{name:"watch",in:"query",description:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",schema:{type:"boolean"}},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)(n.Z,{label:void 0,id:void 0,mdxType:"ApiTabs"},(0,i.kt)(y.default,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"OK")),(0,i.kt)("div",null,(0,i.kt)(s.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(y.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["templateId"],properties:{description:{type:"string"},imageId:{type:"string"},keyPairIds:{type:"array",items:{type:"string",default:""}},templateId:{type:"string",default:""},vm:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["template"],properties:{dataVolumeTemplates:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{checkpoints:{type:"array",items:{default:{},allOf:[{type:"object",required:["current","previous"],properties:{current:{type:"string",default:""},previous:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint"}]}},contentType:{type:"string"},finalCheckpoint:{type:"boolean"},preallocation:{type:"boolean"},priorityClassName:{type:"string"},pvc:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"},source:{type:"object",properties:{blank:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage"},gcs:{type:"object",required:["url"],properties:{secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS"},http:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},extraHeaders:{type:"array",items:{type:"string",default:""}},secretExtraHeaders:{type:"array",items:{type:"string",default:""}},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP"},imageio:{type:"object",required:["diskId","url"],properties:{certConfigMap:{type:"string"},diskId:{type:"string",default:""},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO"},pvc:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC"},registry:{type:"object",properties:{certConfigMap:{type:"string"},imageStream:{type:"string"},pullMethod:{type:"string"},secretRef:{type:"string"},url:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry"},s3:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3"},snapshot:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot"},upload:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload"},vddk:{type:"object",properties:{backingFile:{type:"string"},initImageURL:{type:"string"},secretRef:{type:"string"},thumbprint:{type:"string"},url:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource"},sourceRef:{type:"object",required:["kind","name"],properties:{kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef"},storage:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec"}]},status:{type:"object",title:"kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus"}},title:"kubevirt.io.api.core.v1.DataVolumeTemplateSpec"}]}},instancetype:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.InstancetypeMatcher"},liveUpdateFeatures:{type:"object",properties:{affinity:{type:"object",title:"kubevirt.io.api.core.v1.LiveUpdateAffinity"},cpu:{type:"object",properties:{maxSockets:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.LiveUpdateCPU"},memory:{type:"object",properties:{maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.LiveUpdateMemory"}},title:"kubevirt.io.api.core.v1.LiveUpdateFeatures"},preference:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.PreferenceMatcher"},runStrategy:{type:"string"},running:{type:"boolean"},template:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["domain"],properties:{accessCredentials:{type:"array",items:{default:{},allOf:[{type:"object",properties:{sshPublicKey:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{configDrive:{type:"object",title:"kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"},noCloud:{type:"object",title:"kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation"},qemuGuestAgent:{type:"object",required:["users"],properties:{users:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"set"}},title:"kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential"},userPassword:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{qemuGuestAgent:{type:"object",title:"kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredential"}},title:"kubevirt.io.api.core.v1.AccessCredential"}]},"x-kubernetes-list-type":"atomic"},affinity:{type:"object",properties:{nodeAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["preference","weight"],properties:{preference:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.PreferredSchedulingTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"object",required:["nodeSelectorTerms"],properties:{nodeSelectorTerms:{type:"array",items:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelector"}},title:"k8s.io.v1.NodeAffinity"},podAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAffinity"},podAntiAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAntiAffinity"}},title:"k8s.io.v1.Affinity"},architecture:{type:"string"},dnsConfig:{type:"object",properties:{nameservers:{type:"array",items:{type:"string",default:""}},options:{type:"array",items:{default:{},allOf:[{type:"object",properties:{name:{type:"string"},value:{type:"string"}},title:"k8s.io.v1.PodDNSConfigOption"}]}},searches:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.PodDNSConfig"},dnsPolicy:{type:"string",enum:["ClusterFirst","ClusterFirstWithHostNet","Default","None"]},domain:{default:{},allOf:[{type:"object",required:["devices"],properties:{chassis:{type:"object",properties:{asset:{type:"string"},manufacturer:{type:"string"},serial:{type:"string"},sku:{type:"string"},version:{type:"string"}},title:"kubevirt.io.api.core.v1.Chassis"},clock:{type:"object",properties:{timer:{type:"object",properties:{hpet:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.HPETTimer"},hyperv:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.HypervTimer"},kvm:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.KVMTimer"},pit:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.PITTimer"},rtc:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"},track:{type:"string"}},title:"kubevirt.io.api.core.v1.RTCTimer"}},title:"kubevirt.io.api.core.v1.Timer"},timezone:{type:"string"},utc:{type:"object",properties:{offsetSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.ClockOffsetUTC"}},title:"kubevirt.io.api.core.v1.Clock"},cpu:{type:"object",properties:{cores:{type:"integer",format:"int64"},dedicatedCpuPlacement:{type:"boolean"},features:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""},policy:{type:"string"}},title:"kubevirt.io.api.core.v1.CPUFeature"}]}},isolateEmulatorThread:{type:"boolean"},maxSockets:{type:"integer",format:"int64"},model:{type:"string"},numa:{type:"object",properties:{guestMappingPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough"}},title:"kubevirt.io.api.core.v1.NUMA"},realtime:{type:"object",properties:{mask:{type:"string"}},title:"kubevirt.io.api.core.v1.Realtime"},sockets:{type:"integer",format:"int64"},threads:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.CPU"},devices:{default:{},allOf:[{type:"object",properties:{autoattachGraphicsDevice:{type:"boolean"},autoattachInputDevice:{type:"boolean"},autoattachMemBalloon:{type:"boolean"},autoattachPodInterface:{type:"boolean"},autoattachSerialConsole:{type:"boolean"},autoattachVSOCK:{type:"boolean"},blockMultiQueue:{type:"boolean"},clientPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.ClientPassthroughDevices"},disableHotplug:{type:"boolean"},disks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{blockSize:{type:"object",properties:{custom:{type:"object",required:["logical","physical"],properties:{logical:{type:"integer",format:"int32",default:0},physical:{type:"integer",format:"int32",default:0}},title:"kubevirt.io.api.core.v1.CustomBlockSize"},matchVolume:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.BlockSize"},bootOrder:{type:"integer",format:"int32"},cache:{type:"string"},cdrom:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},tray:{type:"string"}},title:"kubevirt.io.api.core.v1.CDRomTarget"},dedicatedIOThread:{type:"boolean"},disk:{type:"object",properties:{bus:{type:"string"},pciAddress:{type:"string"},readonly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.DiskTarget"},errorPolicy:{type:"string"},io:{type:"string"},lun:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},reservation:{type:"boolean"}},title:"kubevirt.io.api.core.v1.LunTarget"},name:{type:"string",default:""},serial:{type:"string"},shareable:{type:"boolean"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Disk"}]}},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetrics"},filesystems:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","virtiofs"],properties:{name:{type:"string",default:""},virtiofs:{type:"object",title:"kubevirt.io.api.core.v1.FilesystemVirtiofs"}},title:"kubevirt.io.api.core.v1.Filesystem"}]},"x-kubernetes-list-type":"atomic"},gpus:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"},virtualGPUOptions:{type:"object",properties:{display:{type:"object",properties:{enabled:{type:"boolean"},ramFB:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.VGPUDisplayOptions"}},title:"kubevirt.io.api.core.v1.VGPUOptions"}},title:"kubevirt.io.api.core.v1.GPU"}]},"x-kubernetes-list-type":"atomic"},hostDevices:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.HostDevice"}]},"x-kubernetes-list-type":"atomic"},inputs:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","type"],properties:{bus:{type:"string"},name:{type:"string",default:""},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Input"}]}},interfaces:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{acpiIndex:{type:"integer",format:"int32"},binding:{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.PluginBinding"},bootOrder:{type:"integer",format:"int32"},bridge:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceBridge"},dhcpOptions:{type:"object",properties:{bootFileName:{type:"string"},ntpServers:{type:"array",items:{type:"string",default:""}},privateOptions:{type:"array",items:{default:{},allOf:[{type:"object",required:["option","value"],properties:{option:{type:"integer",format:"int32",default:0},value:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DHCPPrivateOptions"}]}},tftpServerName:{type:"string"}},title:"kubevirt.io.api.core.v1.DHCPOptions"},macAddress:{type:"string"},macvtap:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMacvtap"},masquerade:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMasquerade"},model:{type:"string"},name:{type:"string",default:""},passt:{type:"object",title:"kubevirt.io.api.core.v1.InterfacePasst"},pciAddress:{type:"string"},ports:{type:"array",items:{default:{},allOf:[{type:"object",required:["port"],properties:{name:{type:"string"},port:{type:"integer",format:"int32",default:0},protocol:{type:"string"}},title:"kubevirt.io.api.core.v1.Port"}]}},slirp:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSlirp"},sriov:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSRIOV"},state:{type:"string"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Interface"}]}},logSerialConsole:{type:"boolean"},networkInterfaceMultiqueue:{type:"boolean"},rng:{type:"object",title:"kubevirt.io.api.core.v1.Rng"},sound:{type:"object",required:["name"],properties:{model:{type:"string"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.SoundDevice"},tpm:{type:"object",properties:{persistent:{type:"boolean"}},title:"kubevirt.io.api.core.v1.TPMDevice"},useVirtioTransitional:{type:"boolean"},watchdog:{type:"object",required:["name"],properties:{i6300esb:{type:"object",properties:{action:{type:"string"}},title:"kubevirt.io.api.core.v1.I6300ESBWatchdog"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Watchdog"}},title:"kubevirt.io.api.core.v1.Devices"}]},features:{type:"object",properties:{acpi:{default:{},allOf:[{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}]},apic:{type:"object",properties:{enabled:{type:"boolean"},endOfInterrupt:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureAPIC"},hyperv:{type:"object",properties:{evmcs:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},frequencies:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},ipi:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reenlightenment:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},relaxed:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reset:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},runtime:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},spinlocks:{type:"object",properties:{enabled:{type:"boolean"},spinlocks:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.FeatureSpinlocks"},synic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},synictimer:{type:"object",properties:{direct:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SyNICTimer"},tlbflush:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vapic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vendorid:{type:"object",properties:{enabled:{type:"boolean"},vendorid:{type:"string"}},title:"kubevirt.io.api.core.v1.FeatureVendorID"},vpindex:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.FeatureHyperv"},kvm:{type:"object",properties:{hidden:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureKVM"},pvspinlock:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},smm:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.Features"},firmware:{type:"object",properties:{bootloader:{type:"object",properties:{bios:{type:"object",properties:{useSerial:{type:"boolean"}},title:"kubevirt.io.api.core.v1.BIOS"},efi:{type:"object",properties:{persistent:{type:"boolean"},secureBoot:{type:"boolean"}},title:"kubevirt.io.api.core.v1.EFI"}},title:"kubevirt.io.api.core.v1.Bootloader"},kernelBoot:{type:"object",properties:{container:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},initrdPath:{type:"string"},kernelPath:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBootContainer"},kernelArgs:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBoot"},serial:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.api.core.v1.Firmware"},ioThreadsPolicy:{type:"string"},launchSecurity:{type:"object",properties:{sev:{type:"object",properties:{attestation:{type:"object",title:"kubevirt.io.api.core.v1.SEVAttestation"},dhCert:{type:"string"},policy:{type:"object",properties:{encryptedState:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SEVPolicy"},session:{type:"string"}},title:"kubevirt.io.api.core.v1.SEV"}},title:"kubevirt.io.api.core.v1.LaunchSecurity"},machine:{type:"object",properties:{type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Machine"},memory:{type:"object",properties:{guest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"},hugepages:{type:"object",properties:{pageSize:{type:"string"}},title:"kubevirt.io.api.core.v1.Hugepages"},maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.Memory"},resources:{default:{},allOf:[{type:"object",properties:{limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},overcommitGuestOverhead:{type:"boolean"},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"kubevirt.io.api.core.v1.ResourceRequirements"}]}},title:"kubevirt.io.api.core.v1.DomainSpec"}]},evictionStrategy:{type:"string"},hostname:{type:"string"},livenessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},networks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{multus:{type:"object",required:["networkName"],properties:{default:{type:"boolean"},networkName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.MultusNetwork"},name:{type:"string",default:""},pod:{type:"object",properties:{vmIPv6NetworkCIDR:{type:"string"},vmNetworkCIDR:{type:"string"}},title:"kubevirt.io.api.core.v1.PodNetwork"}},title:"kubevirt.io.api.core.v1.Network"}]}},nodeSelector:{type:"object",additionalProperties:{type:"string",default:""}},priorityClassName:{type:"string"},readinessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},schedulerName:{type:"string"},startStrategy:{type:"string"},subdomain:{type:"string"},terminationGracePeriodSeconds:{type:"integer",format:"int64"},tolerations:{type:"array",items:{default:{},allOf:[{type:"object",properties:{effect:{type:"string",enum:["NoExecute","NoSchedule","PreferNoSchedule"]},key:{type:"string"},operator:{type:"string",enum:["Equal","Exists"]},tolerationSeconds:{type:"integer",format:"int64"},value:{type:"string"}},title:"k8s.io.v1.Toleration"}]}},topologySpreadConstraints:{type:"array",items:{default:{},allOf:[{type:"object",required:["maxSkew","topologyKey","whenUnsatisfiable"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},matchLabelKeys:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"atomic"},maxSkew:{type:"integer",format:"int32",default:0},minDomains:{type:"integer",format:"int32"},nodeAffinityPolicy:{type:"string"},nodeTaintsPolicy:{type:"string"},topologyKey:{type:"string",default:""},whenUnsatisfiable:{type:"string",default:"",enum:["DoNotSchedule","ScheduleAnyway"]}},title:"k8s.io.v1.TopologySpreadConstraint"}]},"x-kubernetes-list-map-keys":["topologyKey","whenUnsatisfiable"],"x-kubernetes-list-type":"map","x-kubernetes-patch-merge-key":"topologyKey","x-kubernetes-patch-strategy":"merge"},volumes:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{cloudInitConfigDrive:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitConfigDriveSource"},cloudInitNoCloud:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitNoCloudSource"},configMap:{type:"object",properties:{name:{type:"string"},optional:{type:"boolean"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.ConfigMapVolumeSource"},containerDisk:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},path:{type:"string"}},title:"kubevirt.io.api.core.v1.ContainerDiskSource"},dataVolume:{type:"object",required:["name"],properties:{hotpluggable:{type:"boolean"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DataVolumeSource"},downwardAPI:{type:"object",properties:{fields:{type:"array",items:{default:{},allOf:[{type:"object",required:["path"],properties:{fieldRef:{type:"object",required:["fieldPath"],properties:{apiVersion:{type:"string"},fieldPath:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ObjectFieldSelector"},mode:{type:"integer",format:"int32"},path:{type:"string",default:""},resourceFieldRef:{type:"object",required:["resource"],properties:{containerName:{type:"string"},divisor:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},resource:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ResourceFieldSelector"}},title:"k8s.io.v1.DownwardAPIVolumeFile"}]}},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.DownwardAPIVolumeSource"},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetricsVolumeSource"},emptyDisk:{type:"object",required:["capacity"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},title:"kubevirt.io.api.core.v1.EmptyDiskSource"},ephemeral:{type:"object",properties:{persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},readOnly:{type:"boolean"}},title:"k8s.io.v1.PersistentVolumeClaimVolumeSource"}},title:"kubevirt.io.api.core.v1.EphemeralVolumeSource"},hostDisk:{type:"object",required:["path","type"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},path:{type:"string",default:""},shared:{type:"boolean"},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.HostDisk"},memoryDump:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.MemoryDumpVolumeSource"},name:{type:"string",default:""},persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"},secret:{type:"object",properties:{optional:{type:"boolean"},secretName:{type:"string"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.SecretVolumeSource"},serviceAccount:{type:"object",properties:{serviceAccountName:{type:"string"}},title:"kubevirt.io.api.core.v1.ServiceAccountVolumeSource"},sysprep:{type:"object",properties:{configMap:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secret:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"}},title:"kubevirt.io.api.core.v1.SysprepSource"}},title:"kubevirt.io.api.core.v1.Volume"}]}}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"}]}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec"}},title:"kubevirt.io.api.core.v1.VirtualMachineSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineSourceSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec"}]},status:{default:{},allOf:[{type:"object",properties:{conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},version:{type:"integer",format:"int32"}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"}]}},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,i.kt)("span",{className:"openapi-schema__name"}," object"),(0,i.kt)("span",{className:"openapi-schema__divider"}),(0,i.kt)("span",{className:"openapi-schema__required"},"required"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,i.kt)(y.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "description": "string",\n        "imageId": "string",\n        "keyPairIds": [\n          "string"\n        ],\n        "templateId": "string",\n        "vm": {\n          "metadata": {\n            "name": "string",\n            "namespace": "string"\n          },\n          "spec": {\n            "dataVolumeTemplates": [\n              {\n                "apiVersion": "string",\n                "kind": "string",\n                "metadata": {\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "spec": {\n                  "checkpoints": [\n                    {\n                      "current": "string",\n                      "previous": "string"\n                    }\n                  ],\n                  "contentType": "string",\n                  "finalCheckpoint": true,\n                  "preallocation": true,\n                  "priorityClassName": "string",\n                  "pvc": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  },\n                  "source": {\n                    "blank": {},\n                    "gcs": {\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "http": {\n                      "certConfigMap": "string",\n                      "extraHeaders": [\n                        "string"\n                      ],\n                      "secretExtraHeaders": [\n                        "string"\n                      ],\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "imageio": {\n                      "certConfigMap": "string",\n                      "diskId": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "pvc": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "registry": {\n                      "certConfigMap": "string",\n                      "imageStream": "string",\n                      "pullMethod": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "s3": {\n                      "certConfigMap": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "snapshot": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "upload": {},\n                    "vddk": {\n                      "backingFile": "string",\n                      "initImageURL": "string",\n                      "secretRef": "string",\n                      "thumbprint": "string",\n                      "url": "string",\n                      "uuid": "string"\n                    }\n                  },\n                  "sourceRef": {\n                    "kind": "string",\n                    "name": "string",\n                    "namespace": "string"\n                  },\n                  "storage": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  }\n                },\n                "status": {}\n              }\n            ],\n            "instancetype": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "liveUpdateFeatures": {\n              "affinity": {},\n              "cpu": {\n                "maxSockets": 0\n              },\n              "memory": {\n                "maxGuest": "string"\n              }\n            },\n            "preference": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "runStrategy": "string",\n            "running": true,\n            "template": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessCredentials": [\n                  {\n                    "sshPublicKey": {\n                      "propagationMethod": {\n                        "configDrive": {},\n                        "noCloud": {},\n                        "qemuGuestAgent": {\n                          "users": [\n                            "string"\n                          ]\n                        }\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    },\n                    "userPassword": {\n                      "propagationMethod": {\n                        "qemuGuestAgent": {}\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    }\n                  }\n                ],\n                "affinity": {\n                  "nodeAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "preference": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": {\n                      "nodeSelectorTerms": [\n                        {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  "podAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  },\n                  "podAntiAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  }\n                },\n                "architecture": "string",\n                "dnsConfig": {\n                  "nameservers": [\n                    "string"\n                  ],\n                  "options": [\n                    {\n                      "name": "string",\n                      "value": "string"\n                    }\n                  ],\n                  "searches": [\n                    "string"\n                  ]\n                },\n                "dnsPolicy": "ClusterFirst",\n                "domain": {\n                  "chassis": {\n                    "asset": "string",\n                    "manufacturer": "string",\n                    "serial": "string",\n                    "sku": "string",\n                    "version": "string"\n                  },\n                  "clock": {\n                    "timer": {\n                      "hpet": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "hyperv": {\n                        "present": true\n                      },\n                      "kvm": {\n                        "present": true\n                      },\n                      "pit": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "rtc": {\n                        "present": true,\n                        "tickPolicy": "string",\n                        "track": "string"\n                      }\n                    },\n                    "timezone": "string",\n                    "utc": {\n                      "offsetSeconds": 0\n                    }\n                  },\n                  "cpu": {\n                    "cores": 0,\n                    "dedicatedCpuPlacement": true,\n                    "features": [\n                      {\n                        "name": "string",\n                        "policy": "string"\n                      }\n                    ],\n                    "isolateEmulatorThread": true,\n                    "maxSockets": 0,\n                    "model": "string",\n                    "numa": {\n                      "guestMappingPassthrough": {}\n                    },\n                    "realtime": {\n                      "mask": "string"\n                    },\n                    "sockets": 0,\n                    "threads": 0\n                  },\n                  "devices": {\n                    "autoattachGraphicsDevice": true,\n                    "autoattachInputDevice": true,\n                    "autoattachMemBalloon": true,\n                    "autoattachPodInterface": true,\n                    "autoattachSerialConsole": true,\n                    "autoattachVSOCK": true,\n                    "blockMultiQueue": true,\n                    "clientPassthrough": {},\n                    "disableHotplug": true,\n                    "disks": [\n                      {\n                        "blockSize": {\n                          "custom": {\n                            "logical": 0,\n                            "physical": 0\n                          },\n                          "matchVolume": {\n                            "enabled": true\n                          }\n                        },\n                        "bootOrder": 0,\n                        "cache": "string",\n                        "cdrom": {\n                          "bus": "string",\n                          "readonly": true,\n                          "tray": "string"\n                        },\n                        "dedicatedIOThread": true,\n                        "disk": {\n                          "bus": "string",\n                          "pciAddress": "string",\n                          "readonly": true\n                        },\n                        "errorPolicy": "string",\n                        "io": "string",\n                        "lun": {\n                          "bus": "string",\n                          "readonly": true,\n                          "reservation": true\n                        },\n                        "name": "string",\n                        "serial": "string",\n                        "shareable": true,\n                        "tag": "string"\n                      }\n                    ],\n                    "downwardMetrics": {},\n                    "filesystems": [\n                      {\n                        "name": "string",\n                        "virtiofs": {}\n                      }\n                    ],\n                    "gpus": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string",\n                        "virtualGPUOptions": {\n                          "display": {\n                            "enabled": true,\n                            "ramFB": {\n                              "enabled": true\n                            }\n                          }\n                        }\n                      }\n                    ],\n                    "hostDevices": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "inputs": [\n                      {\n                        "bus": "string",\n                        "name": "string",\n                        "type": "string"\n                      }\n                    ],\n                    "interfaces": [\n                      {\n                        "acpiIndex": 0,\n                        "binding": {\n                          "name": "string"\n                        },\n                        "bootOrder": 0,\n                        "bridge": {},\n                        "dhcpOptions": {\n                          "bootFileName": "string",\n                          "ntpServers": [\n                            "string"\n                          ],\n                          "privateOptions": [\n                            {\n                              "option": 0,\n                              "value": "string"\n                            }\n                          ],\n                          "tftpServerName": "string"\n                        },\n                        "macAddress": "string",\n                        "macvtap": {},\n                        "masquerade": {},\n                        "model": "string",\n                        "name": "string",\n                        "passt": {},\n                        "pciAddress": "string",\n                        "ports": [\n                          {\n                            "name": "string",\n                            "port": 0,\n                            "protocol": "string"\n                          }\n                        ],\n                        "slirp": {},\n                        "sriov": {},\n                        "state": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "logSerialConsole": true,\n                    "networkInterfaceMultiqueue": true,\n                    "rng": {},\n                    "sound": {\n                      "model": "string",\n                      "name": "string"\n                    },\n                    "tpm": {\n                      "persistent": true\n                    },\n                    "useVirtioTransitional": true,\n                    "watchdog": {\n                      "i6300esb": {\n                        "action": "string"\n                      },\n                      "name": "string"\n                    }\n                  },\n                  "features": {\n                    "acpi": {\n                      "enabled": true\n                    },\n                    "apic": {\n                      "enabled": true,\n                      "endOfInterrupt": true\n                    },\n                    "hyperv": {\n                      "evmcs": {\n                        "enabled": true\n                      },\n                      "frequencies": {\n                        "enabled": true\n                      },\n                      "ipi": {\n                        "enabled": true\n                      },\n                      "reenlightenment": {\n                        "enabled": true\n                      },\n                      "relaxed": {\n                        "enabled": true\n                      },\n                      "reset": {\n                        "enabled": true\n                      },\n                      "runtime": {\n                        "enabled": true\n                      },\n                      "spinlocks": {\n                        "enabled": true,\n                        "spinlocks": 0\n                      },\n                      "synic": {\n                        "enabled": true\n                      },\n                      "synictimer": {\n                        "direct": {\n                          "enabled": true\n                        },\n                        "enabled": true\n                      },\n                      "tlbflush": {\n                        "enabled": true\n                      },\n                      "vapic": {\n                        "enabled": true\n                      },\n                      "vendorid": {\n                        "enabled": true,\n                        "vendorid": "string"\n                      },\n                      "vpindex": {\n                        "enabled": true\n                      }\n                    },\n                    "kvm": {\n                      "hidden": true\n                    },\n                    "pvspinlock": {\n                      "enabled": true\n                    },\n                    "smm": {\n                      "enabled": true\n                    }\n                  },\n                  "firmware": {\n                    "bootloader": {\n                      "bios": {\n                        "useSerial": true\n                      },\n                      "efi": {\n                        "persistent": true,\n                        "secureBoot": true\n                      }\n                    },\n                    "kernelBoot": {\n                      "container": {\n                        "image": "string",\n                        "imagePullPolicy": "Always",\n                        "imagePullSecret": "string",\n                        "initrdPath": "string",\n                        "kernelPath": "string"\n                      },\n                      "kernelArgs": "string"\n                    },\n                    "serial": "string",\n                    "uuid": "string"\n                  },\n                  "ioThreadsPolicy": "string",\n                  "launchSecurity": {\n                    "sev": {\n                      "attestation": {},\n                      "dhCert": "string",\n                      "policy": {\n                        "encryptedState": true\n                      },\n                      "session": "string"\n                    }\n                  },\n                  "machine": {\n                    "type": "string"\n                  },\n                  "memory": {\n                    "guest": "string",\n                    "hugepages": {\n                      "pageSize": "string"\n                    },\n                    "maxGuest": "string"\n                  },\n                  "resources": {\n                    "limits": {},\n                    "overcommitGuestOverhead": true,\n                    "requests": {}\n                  }\n                },\n                "evictionStrategy": "string",\n                "hostname": "string",\n                "livenessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "networks": [\n                  {\n                    "multus": {\n                      "default": true,\n                      "networkName": "string"\n                    },\n                    "name": "string",\n                    "pod": {\n                      "vmIPv6NetworkCIDR": "string",\n                      "vmNetworkCIDR": "string"\n                    }\n                  }\n                ],\n                "nodeSelector": {},\n                "priorityClassName": "string",\n                "readinessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "schedulerName": "string",\n                "startStrategy": "string",\n                "subdomain": "string",\n                "terminationGracePeriodSeconds": 0,\n                "tolerations": [\n                  {\n                    "effect": "NoExecute",\n                    "key": "string",\n                    "operator": "Equal",\n                    "tolerationSeconds": 0,\n                    "value": "string"\n                  }\n                ],\n                "topologySpreadConstraints": [\n                  {\n                    "labelSelector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "matchLabelKeys": [\n                      "string"\n                    ],\n                    "maxSkew": 0,\n                    "minDomains": 0,\n                    "nodeAffinityPolicy": "string",\n                    "nodeTaintsPolicy": "string",\n                    "topologyKey": "string",\n                    "whenUnsatisfiable": "DoNotSchedule"\n                  }\n                ],\n                "volumes": [\n                  {\n                    "cloudInitConfigDrive": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "cloudInitNoCloud": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "configMap": {\n                      "name": "string",\n                      "optional": true,\n                      "volumeLabel": "string"\n                    },\n                    "containerDisk": {\n                      "image": "string",\n                      "imagePullPolicy": "Always",\n                      "imagePullSecret": "string",\n                      "path": "string"\n                    },\n                    "dataVolume": {\n                      "hotpluggable": true,\n                      "name": "string"\n                    },\n                    "downwardAPI": {\n                      "fields": [\n                        {\n                          "fieldRef": {\n                            "apiVersion": "string",\n                            "fieldPath": "string"\n                          },\n                          "mode": 0,\n                          "path": "string",\n                          "resourceFieldRef": {\n                            "containerName": "string",\n                            "divisor": {},\n                            "resource": "string"\n                          }\n                        }\n                      ],\n                      "volumeLabel": "string"\n                    },\n                    "downwardMetrics": {},\n                    "emptyDisk": {\n                      "capacity": {}\n                    },\n                    "ephemeral": {\n                      "persistentVolumeClaim": {\n                        "claimName": "string",\n                        "readOnly": true\n                      }\n                    },\n                    "hostDisk": {\n                      "capacity": {},\n                      "path": "string",\n                      "shared": true,\n                      "type": "string"\n                    },\n                    "memoryDump": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "name": "string",\n                    "persistentVolumeClaim": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "secret": {\n                      "optional": true,\n                      "secretName": "string",\n                      "volumeLabel": "string"\n                    },\n                    "serviceAccount": {\n                      "serviceAccountName": "string"\n                    },\n                    "sysprep": {\n                      "configMap": {\n                        "name": "string"\n                      },\n                      "secret": {\n                        "name": "string"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "version": 0\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,i.kt)(y.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["templateId"],properties:{description:{type:"string"},imageId:{type:"string"},keyPairIds:{type:"array",items:{type:"string",default:""}},templateId:{type:"string",default:""},vm:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["template"],properties:{dataVolumeTemplates:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{checkpoints:{type:"array",items:{default:{},allOf:[{type:"object",required:["current","previous"],properties:{current:{type:"string",default:""},previous:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint"}]}},contentType:{type:"string"},finalCheckpoint:{type:"boolean"},preallocation:{type:"boolean"},priorityClassName:{type:"string"},pvc:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"},source:{type:"object",properties:{blank:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage"},gcs:{type:"object",required:["url"],properties:{secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS"},http:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},extraHeaders:{type:"array",items:{type:"string",default:""}},secretExtraHeaders:{type:"array",items:{type:"string",default:""}},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP"},imageio:{type:"object",required:["diskId","url"],properties:{certConfigMap:{type:"string"},diskId:{type:"string",default:""},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO"},pvc:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC"},registry:{type:"object",properties:{certConfigMap:{type:"string"},imageStream:{type:"string"},pullMethod:{type:"string"},secretRef:{type:"string"},url:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry"},s3:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3"},snapshot:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot"},upload:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload"},vddk:{type:"object",properties:{backingFile:{type:"string"},initImageURL:{type:"string"},secretRef:{type:"string"},thumbprint:{type:"string"},url:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource"},sourceRef:{type:"object",required:["kind","name"],properties:{kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef"},storage:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec"}]},status:{type:"object",title:"kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus"}},title:"kubevirt.io.api.core.v1.DataVolumeTemplateSpec"}]}},instancetype:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.InstancetypeMatcher"},liveUpdateFeatures:{type:"object",properties:{affinity:{type:"object",title:"kubevirt.io.api.core.v1.LiveUpdateAffinity"},cpu:{type:"object",properties:{maxSockets:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.LiveUpdateCPU"},memory:{type:"object",properties:{maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.LiveUpdateMemory"}},title:"kubevirt.io.api.core.v1.LiveUpdateFeatures"},preference:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.PreferenceMatcher"},runStrategy:{type:"string"},running:{type:"boolean"},template:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["domain"],properties:{accessCredentials:{type:"array",items:{default:{},allOf:[{type:"object",properties:{sshPublicKey:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{configDrive:{type:"object",title:"kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"},noCloud:{type:"object",title:"kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation"},qemuGuestAgent:{type:"object",required:["users"],properties:{users:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"set"}},title:"kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential"},userPassword:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{qemuGuestAgent:{type:"object",title:"kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredential"}},title:"kubevirt.io.api.core.v1.AccessCredential"}]},"x-kubernetes-list-type":"atomic"},affinity:{type:"object",properties:{nodeAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["preference","weight"],properties:{preference:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.PreferredSchedulingTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"object",required:["nodeSelectorTerms"],properties:{nodeSelectorTerms:{type:"array",items:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelector"}},title:"k8s.io.v1.NodeAffinity"},podAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAffinity"},podAntiAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAntiAffinity"}},title:"k8s.io.v1.Affinity"},architecture:{type:"string"},dnsConfig:{type:"object",properties:{nameservers:{type:"array",items:{type:"string",default:""}},options:{type:"array",items:{default:{},allOf:[{type:"object",properties:{name:{type:"string"},value:{type:"string"}},title:"k8s.io.v1.PodDNSConfigOption"}]}},searches:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.PodDNSConfig"},dnsPolicy:{type:"string",enum:["ClusterFirst","ClusterFirstWithHostNet","Default","None"]},domain:{default:{},allOf:[{type:"object",required:["devices"],properties:{chassis:{type:"object",properties:{asset:{type:"string"},manufacturer:{type:"string"},serial:{type:"string"},sku:{type:"string"},version:{type:"string"}},title:"kubevirt.io.api.core.v1.Chassis"},clock:{type:"object",properties:{timer:{type:"object",properties:{hpet:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.HPETTimer"},hyperv:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.HypervTimer"},kvm:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.KVMTimer"},pit:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.PITTimer"},rtc:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"},track:{type:"string"}},title:"kubevirt.io.api.core.v1.RTCTimer"}},title:"kubevirt.io.api.core.v1.Timer"},timezone:{type:"string"},utc:{type:"object",properties:{offsetSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.ClockOffsetUTC"}},title:"kubevirt.io.api.core.v1.Clock"},cpu:{type:"object",properties:{cores:{type:"integer",format:"int64"},dedicatedCpuPlacement:{type:"boolean"},features:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""},policy:{type:"string"}},title:"kubevirt.io.api.core.v1.CPUFeature"}]}},isolateEmulatorThread:{type:"boolean"},maxSockets:{type:"integer",format:"int64"},model:{type:"string"},numa:{type:"object",properties:{guestMappingPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough"}},title:"kubevirt.io.api.core.v1.NUMA"},realtime:{type:"object",properties:{mask:{type:"string"}},title:"kubevirt.io.api.core.v1.Realtime"},sockets:{type:"integer",format:"int64"},threads:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.CPU"},devices:{default:{},allOf:[{type:"object",properties:{autoattachGraphicsDevice:{type:"boolean"},autoattachInputDevice:{type:"boolean"},autoattachMemBalloon:{type:"boolean"},autoattachPodInterface:{type:"boolean"},autoattachSerialConsole:{type:"boolean"},autoattachVSOCK:{type:"boolean"},blockMultiQueue:{type:"boolean"},clientPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.ClientPassthroughDevices"},disableHotplug:{type:"boolean"},disks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{blockSize:{type:"object",properties:{custom:{type:"object",required:["logical","physical"],properties:{logical:{type:"integer",format:"int32",default:0},physical:{type:"integer",format:"int32",default:0}},title:"kubevirt.io.api.core.v1.CustomBlockSize"},matchVolume:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.BlockSize"},bootOrder:{type:"integer",format:"int32"},cache:{type:"string"},cdrom:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},tray:{type:"string"}},title:"kubevirt.io.api.core.v1.CDRomTarget"},dedicatedIOThread:{type:"boolean"},disk:{type:"object",properties:{bus:{type:"string"},pciAddress:{type:"string"},readonly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.DiskTarget"},errorPolicy:{type:"string"},io:{type:"string"},lun:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},reservation:{type:"boolean"}},title:"kubevirt.io.api.core.v1.LunTarget"},name:{type:"string",default:""},serial:{type:"string"},shareable:{type:"boolean"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Disk"}]}},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetrics"},filesystems:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","virtiofs"],properties:{name:{type:"string",default:""},virtiofs:{type:"object",title:"kubevirt.io.api.core.v1.FilesystemVirtiofs"}},title:"kubevirt.io.api.core.v1.Filesystem"}]},"x-kubernetes-list-type":"atomic"},gpus:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"},virtualGPUOptions:{type:"object",properties:{display:{type:"object",properties:{enabled:{type:"boolean"},ramFB:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.VGPUDisplayOptions"}},title:"kubevirt.io.api.core.v1.VGPUOptions"}},title:"kubevirt.io.api.core.v1.GPU"}]},"x-kubernetes-list-type":"atomic"},hostDevices:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.HostDevice"}]},"x-kubernetes-list-type":"atomic"},inputs:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","type"],properties:{bus:{type:"string"},name:{type:"string",default:""},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Input"}]}},interfaces:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{acpiIndex:{type:"integer",format:"int32"},binding:{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.PluginBinding"},bootOrder:{type:"integer",format:"int32"},bridge:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceBridge"},dhcpOptions:{type:"object",properties:{bootFileName:{type:"string"},ntpServers:{type:"array",items:{type:"string",default:""}},privateOptions:{type:"array",items:{default:{},allOf:[{type:"object",required:["option","value"],properties:{option:{type:"integer",format:"int32",default:0},value:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DHCPPrivateOptions"}]}},tftpServerName:{type:"string"}},title:"kubevirt.io.api.core.v1.DHCPOptions"},macAddress:{type:"string"},macvtap:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMacvtap"},masquerade:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMasquerade"},model:{type:"string"},name:{type:"string",default:""},passt:{type:"object",title:"kubevirt.io.api.core.v1.InterfacePasst"},pciAddress:{type:"string"},ports:{type:"array",items:{default:{},allOf:[{type:"object",required:["port"],properties:{name:{type:"string"},port:{type:"integer",format:"int32",default:0},protocol:{type:"string"}},title:"kubevirt.io.api.core.v1.Port"}]}},slirp:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSlirp"},sriov:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSRIOV"},state:{type:"string"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Interface"}]}},logSerialConsole:{type:"boolean"},networkInterfaceMultiqueue:{type:"boolean"},rng:{type:"object",title:"kubevirt.io.api.core.v1.Rng"},sound:{type:"object",required:["name"],properties:{model:{type:"string"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.SoundDevice"},tpm:{type:"object",properties:{persistent:{type:"boolean"}},title:"kubevirt.io.api.core.v1.TPMDevice"},useVirtioTransitional:{type:"boolean"},watchdog:{type:"object",required:["name"],properties:{i6300esb:{type:"object",properties:{action:{type:"string"}},title:"kubevirt.io.api.core.v1.I6300ESBWatchdog"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Watchdog"}},title:"kubevirt.io.api.core.v1.Devices"}]},features:{type:"object",properties:{acpi:{default:{},allOf:[{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}]},apic:{type:"object",properties:{enabled:{type:"boolean"},endOfInterrupt:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureAPIC"},hyperv:{type:"object",properties:{evmcs:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},frequencies:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},ipi:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reenlightenment:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},relaxed:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reset:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},runtime:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},spinlocks:{type:"object",properties:{enabled:{type:"boolean"},spinlocks:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.FeatureSpinlocks"},synic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},synictimer:{type:"object",properties:{direct:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SyNICTimer"},tlbflush:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vapic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vendorid:{type:"object",properties:{enabled:{type:"boolean"},vendorid:{type:"string"}},title:"kubevirt.io.api.core.v1.FeatureVendorID"},vpindex:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.FeatureHyperv"},kvm:{type:"object",properties:{hidden:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureKVM"},pvspinlock:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},smm:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.Features"},firmware:{type:"object",properties:{bootloader:{type:"object",properties:{bios:{type:"object",properties:{useSerial:{type:"boolean"}},title:"kubevirt.io.api.core.v1.BIOS"},efi:{type:"object",properties:{persistent:{type:"boolean"},secureBoot:{type:"boolean"}},title:"kubevirt.io.api.core.v1.EFI"}},title:"kubevirt.io.api.core.v1.Bootloader"},kernelBoot:{type:"object",properties:{container:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},initrdPath:{type:"string"},kernelPath:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBootContainer"},kernelArgs:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBoot"},serial:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.api.core.v1.Firmware"},ioThreadsPolicy:{type:"string"},launchSecurity:{type:"object",properties:{sev:{type:"object",properties:{attestation:{type:"object",title:"kubevirt.io.api.core.v1.SEVAttestation"},dhCert:{type:"string"},policy:{type:"object",properties:{encryptedState:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SEVPolicy"},session:{type:"string"}},title:"kubevirt.io.api.core.v1.SEV"}},title:"kubevirt.io.api.core.v1.LaunchSecurity"},machine:{type:"object",properties:{type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Machine"},memory:{type:"object",properties:{guest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"},hugepages:{type:"object",properties:{pageSize:{type:"string"}},title:"kubevirt.io.api.core.v1.Hugepages"},maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.Memory"},resources:{default:{},allOf:[{type:"object",properties:{limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},overcommitGuestOverhead:{type:"boolean"},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"kubevirt.io.api.core.v1.ResourceRequirements"}]}},title:"kubevirt.io.api.core.v1.DomainSpec"}]},evictionStrategy:{type:"string"},hostname:{type:"string"},livenessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},networks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{multus:{type:"object",required:["networkName"],properties:{default:{type:"boolean"},networkName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.MultusNetwork"},name:{type:"string",default:""},pod:{type:"object",properties:{vmIPv6NetworkCIDR:{type:"string"},vmNetworkCIDR:{type:"string"}},title:"kubevirt.io.api.core.v1.PodNetwork"}},title:"kubevirt.io.api.core.v1.Network"}]}},nodeSelector:{type:"object",additionalProperties:{type:"string",default:""}},priorityClassName:{type:"string"},readinessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},schedulerName:{type:"string"},startStrategy:{type:"string"},subdomain:{type:"string"},terminationGracePeriodSeconds:{type:"integer",format:"int64"},tolerations:{type:"array",items:{default:{},allOf:[{type:"object",properties:{effect:{type:"string",enum:["NoExecute","NoSchedule","PreferNoSchedule"]},key:{type:"string"},operator:{type:"string",enum:["Equal","Exists"]},tolerationSeconds:{type:"integer",format:"int64"},value:{type:"string"}},title:"k8s.io.v1.Toleration"}]}},topologySpreadConstraints:{type:"array",items:{default:{},allOf:[{type:"object",required:["maxSkew","topologyKey","whenUnsatisfiable"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},matchLabelKeys:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"atomic"},maxSkew:{type:"integer",format:"int32",default:0},minDomains:{type:"integer",format:"int32"},nodeAffinityPolicy:{type:"string"},nodeTaintsPolicy:{type:"string"},topologyKey:{type:"string",default:""},whenUnsatisfiable:{type:"string",default:"",enum:["DoNotSchedule","ScheduleAnyway"]}},title:"k8s.io.v1.TopologySpreadConstraint"}]},"x-kubernetes-list-map-keys":["topologyKey","whenUnsatisfiable"],"x-kubernetes-list-type":"map","x-kubernetes-patch-merge-key":"topologyKey","x-kubernetes-patch-strategy":"merge"},volumes:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{cloudInitConfigDrive:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitConfigDriveSource"},cloudInitNoCloud:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitNoCloudSource"},configMap:{type:"object",properties:{name:{type:"string"},optional:{type:"boolean"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.ConfigMapVolumeSource"},containerDisk:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},path:{type:"string"}},title:"kubevirt.io.api.core.v1.ContainerDiskSource"},dataVolume:{type:"object",required:["name"],properties:{hotpluggable:{type:"boolean"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DataVolumeSource"},downwardAPI:{type:"object",properties:{fields:{type:"array",items:{default:{},allOf:[{type:"object",required:["path"],properties:{fieldRef:{type:"object",required:["fieldPath"],properties:{apiVersion:{type:"string"},fieldPath:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ObjectFieldSelector"},mode:{type:"integer",format:"int32"},path:{type:"string",default:""},resourceFieldRef:{type:"object",required:["resource"],properties:{containerName:{type:"string"},divisor:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},resource:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ResourceFieldSelector"}},title:"k8s.io.v1.DownwardAPIVolumeFile"}]}},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.DownwardAPIVolumeSource"},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetricsVolumeSource"},emptyDisk:{type:"object",required:["capacity"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},title:"kubevirt.io.api.core.v1.EmptyDiskSource"},ephemeral:{type:"object",properties:{persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},readOnly:{type:"boolean"}},title:"k8s.io.v1.PersistentVolumeClaimVolumeSource"}},title:"kubevirt.io.api.core.v1.EphemeralVolumeSource"},hostDisk:{type:"object",required:["path","type"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},path:{type:"string",default:""},shared:{type:"boolean"},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.HostDisk"},memoryDump:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.MemoryDumpVolumeSource"},name:{type:"string",default:""},persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"},secret:{type:"object",properties:{optional:{type:"boolean"},secretName:{type:"string"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.SecretVolumeSource"},serviceAccount:{type:"object",properties:{serviceAccountName:{type:"string"}},title:"kubevirt.io.api.core.v1.ServiceAccountVolumeSource"},sysprep:{type:"object",properties:{configMap:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secret:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"}},title:"kubevirt.io.api.core.v1.SysprepSource"}},title:"kubevirt.io.api.core.v1.Volume"}]}}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"}]}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec"}},title:"kubevirt.io.api.core.v1.VirtualMachineSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineSourceSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec"}]},status:{default:{},allOf:[{type:"object",properties:{conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},version:{type:"integer",format:"int32"}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"}]}},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,i.kt)("span",{className:"openapi-schema__name"}," object"),(0,i.kt)("span",{className:"openapi-schema__divider"}),(0,i.kt)("span",{className:"openapi-schema__required"},"required"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,i.kt)(y.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "description": "string",\n        "imageId": "string",\n        "keyPairIds": [\n          "string"\n        ],\n        "templateId": "string",\n        "vm": {\n          "metadata": {\n            "name": "string",\n            "namespace": "string"\n          },\n          "spec": {\n            "dataVolumeTemplates": [\n              {\n                "apiVersion": "string",\n                "kind": "string",\n                "metadata": {\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "spec": {\n                  "checkpoints": [\n                    {\n                      "current": "string",\n                      "previous": "string"\n                    }\n                  ],\n                  "contentType": "string",\n                  "finalCheckpoint": true,\n                  "preallocation": true,\n                  "priorityClassName": "string",\n                  "pvc": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  },\n                  "source": {\n                    "blank": {},\n                    "gcs": {\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "http": {\n                      "certConfigMap": "string",\n                      "extraHeaders": [\n                        "string"\n                      ],\n                      "secretExtraHeaders": [\n                        "string"\n                      ],\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "imageio": {\n                      "certConfigMap": "string",\n                      "diskId": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "pvc": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "registry": {\n                      "certConfigMap": "string",\n                      "imageStream": "string",\n                      "pullMethod": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "s3": {\n                      "certConfigMap": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "snapshot": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "upload": {},\n                    "vddk": {\n                      "backingFile": "string",\n                      "initImageURL": "string",\n                      "secretRef": "string",\n                      "thumbprint": "string",\n                      "url": "string",\n                      "uuid": "string"\n                    }\n                  },\n                  "sourceRef": {\n                    "kind": "string",\n                    "name": "string",\n                    "namespace": "string"\n                  },\n                  "storage": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  }\n                },\n                "status": {}\n              }\n            ],\n            "instancetype": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "liveUpdateFeatures": {\n              "affinity": {},\n              "cpu": {\n                "maxSockets": 0\n              },\n              "memory": {\n                "maxGuest": "string"\n              }\n            },\n            "preference": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "runStrategy": "string",\n            "running": true,\n            "template": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessCredentials": [\n                  {\n                    "sshPublicKey": {\n                      "propagationMethod": {\n                        "configDrive": {},\n                        "noCloud": {},\n                        "qemuGuestAgent": {\n                          "users": [\n                            "string"\n                          ]\n                        }\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    },\n                    "userPassword": {\n                      "propagationMethod": {\n                        "qemuGuestAgent": {}\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    }\n                  }\n                ],\n                "affinity": {\n                  "nodeAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "preference": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": {\n                      "nodeSelectorTerms": [\n                        {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  "podAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  },\n                  "podAntiAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  }\n                },\n                "architecture": "string",\n                "dnsConfig": {\n                  "nameservers": [\n                    "string"\n                  ],\n                  "options": [\n                    {\n                      "name": "string",\n                      "value": "string"\n                    }\n                  ],\n                  "searches": [\n                    "string"\n                  ]\n                },\n                "dnsPolicy": "ClusterFirst",\n                "domain": {\n                  "chassis": {\n                    "asset": "string",\n                    "manufacturer": "string",\n                    "serial": "string",\n                    "sku": "string",\n                    "version": "string"\n                  },\n                  "clock": {\n                    "timer": {\n                      "hpet": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "hyperv": {\n                        "present": true\n                      },\n                      "kvm": {\n                        "present": true\n                      },\n                      "pit": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "rtc": {\n                        "present": true,\n                        "tickPolicy": "string",\n                        "track": "string"\n                      }\n                    },\n                    "timezone": "string",\n                    "utc": {\n                      "offsetSeconds": 0\n                    }\n                  },\n                  "cpu": {\n                    "cores": 0,\n                    "dedicatedCpuPlacement": true,\n                    "features": [\n                      {\n                        "name": "string",\n                        "policy": "string"\n                      }\n                    ],\n                    "isolateEmulatorThread": true,\n                    "maxSockets": 0,\n                    "model": "string",\n                    "numa": {\n                      "guestMappingPassthrough": {}\n                    },\n                    "realtime": {\n                      "mask": "string"\n                    },\n                    "sockets": 0,\n                    "threads": 0\n                  },\n                  "devices": {\n                    "autoattachGraphicsDevice": true,\n                    "autoattachInputDevice": true,\n                    "autoattachMemBalloon": true,\n                    "autoattachPodInterface": true,\n                    "autoattachSerialConsole": true,\n                    "autoattachVSOCK": true,\n                    "blockMultiQueue": true,\n                    "clientPassthrough": {},\n                    "disableHotplug": true,\n                    "disks": [\n                      {\n                        "blockSize": {\n                          "custom": {\n                            "logical": 0,\n                            "physical": 0\n                          },\n                          "matchVolume": {\n                            "enabled": true\n                          }\n                        },\n                        "bootOrder": 0,\n                        "cache": "string",\n                        "cdrom": {\n                          "bus": "string",\n                          "readonly": true,\n                          "tray": "string"\n                        },\n                        "dedicatedIOThread": true,\n                        "disk": {\n                          "bus": "string",\n                          "pciAddress": "string",\n                          "readonly": true\n                        },\n                        "errorPolicy": "string",\n                        "io": "string",\n                        "lun": {\n                          "bus": "string",\n                          "readonly": true,\n                          "reservation": true\n                        },\n                        "name": "string",\n                        "serial": "string",\n                        "shareable": true,\n                        "tag": "string"\n                      }\n                    ],\n                    "downwardMetrics": {},\n                    "filesystems": [\n                      {\n                        "name": "string",\n                        "virtiofs": {}\n                      }\n                    ],\n                    "gpus": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string",\n                        "virtualGPUOptions": {\n                          "display": {\n                            "enabled": true,\n                            "ramFB": {\n                              "enabled": true\n                            }\n                          }\n                        }\n                      }\n                    ],\n                    "hostDevices": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "inputs": [\n                      {\n                        "bus": "string",\n                        "name": "string",\n                        "type": "string"\n                      }\n                    ],\n                    "interfaces": [\n                      {\n                        "acpiIndex": 0,\n                        "binding": {\n                          "name": "string"\n                        },\n                        "bootOrder": 0,\n                        "bridge": {},\n                        "dhcpOptions": {\n                          "bootFileName": "string",\n                          "ntpServers": [\n                            "string"\n                          ],\n                          "privateOptions": [\n                            {\n                              "option": 0,\n                              "value": "string"\n                            }\n                          ],\n                          "tftpServerName": "string"\n                        },\n                        "macAddress": "string",\n                        "macvtap": {},\n                        "masquerade": {},\n                        "model": "string",\n                        "name": "string",\n                        "passt": {},\n                        "pciAddress": "string",\n                        "ports": [\n                          {\n                            "name": "string",\n                            "port": 0,\n                            "protocol": "string"\n                          }\n                        ],\n                        "slirp": {},\n                        "sriov": {},\n                        "state": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "logSerialConsole": true,\n                    "networkInterfaceMultiqueue": true,\n                    "rng": {},\n                    "sound": {\n                      "model": "string",\n                      "name": "string"\n                    },\n                    "tpm": {\n                      "persistent": true\n                    },\n                    "useVirtioTransitional": true,\n                    "watchdog": {\n                      "i6300esb": {\n                        "action": "string"\n                      },\n                      "name": "string"\n                    }\n                  },\n                  "features": {\n                    "acpi": {\n                      "enabled": true\n                    },\n                    "apic": {\n                      "enabled": true,\n                      "endOfInterrupt": true\n                    },\n                    "hyperv": {\n                      "evmcs": {\n                        "enabled": true\n                      },\n                      "frequencies": {\n                        "enabled": true\n                      },\n                      "ipi": {\n                        "enabled": true\n                      },\n                      "reenlightenment": {\n                        "enabled": true\n                      },\n                      "relaxed": {\n                        "enabled": true\n                      },\n                      "reset": {\n                        "enabled": true\n                      },\n                      "runtime": {\n                        "enabled": true\n                      },\n                      "spinlocks": {\n                        "enabled": true,\n                        "spinlocks": 0\n                      },\n                      "synic": {\n                        "enabled": true\n                      },\n                      "synictimer": {\n                        "direct": {\n                          "enabled": true\n                        },\n                        "enabled": true\n                      },\n                      "tlbflush": {\n                        "enabled": true\n                      },\n                      "vapic": {\n                        "enabled": true\n                      },\n                      "vendorid": {\n                        "enabled": true,\n                        "vendorid": "string"\n                      },\n                      "vpindex": {\n                        "enabled": true\n                      }\n                    },\n                    "kvm": {\n                      "hidden": true\n                    },\n                    "pvspinlock": {\n                      "enabled": true\n                    },\n                    "smm": {\n                      "enabled": true\n                    }\n                  },\n                  "firmware": {\n                    "bootloader": {\n                      "bios": {\n                        "useSerial": true\n                      },\n                      "efi": {\n                        "persistent": true,\n                        "secureBoot": true\n                      }\n                    },\n                    "kernelBoot": {\n                      "container": {\n                        "image": "string",\n                        "imagePullPolicy": "Always",\n                        "imagePullSecret": "string",\n                        "initrdPath": "string",\n                        "kernelPath": "string"\n                      },\n                      "kernelArgs": "string"\n                    },\n                    "serial": "string",\n                    "uuid": "string"\n                  },\n                  "ioThreadsPolicy": "string",\n                  "launchSecurity": {\n                    "sev": {\n                      "attestation": {},\n                      "dhCert": "string",\n                      "policy": {\n                        "encryptedState": true\n                      },\n                      "session": "string"\n                    }\n                  },\n                  "machine": {\n                    "type": "string"\n                  },\n                  "memory": {\n                    "guest": "string",\n                    "hugepages": {\n                      "pageSize": "string"\n                    },\n                    "maxGuest": "string"\n                  },\n                  "resources": {\n                    "limits": {},\n                    "overcommitGuestOverhead": true,\n                    "requests": {}\n                  }\n                },\n                "evictionStrategy": "string",\n                "hostname": "string",\n                "livenessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "networks": [\n                  {\n                    "multus": {\n                      "default": true,\n                      "networkName": "string"\n                    },\n                    "name": "string",\n                    "pod": {\n                      "vmIPv6NetworkCIDR": "string",\n                      "vmNetworkCIDR": "string"\n                    }\n                  }\n                ],\n                "nodeSelector": {},\n                "priorityClassName": "string",\n                "readinessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "schedulerName": "string",\n                "startStrategy": "string",\n                "subdomain": "string",\n                "terminationGracePeriodSeconds": 0,\n                "tolerations": [\n                  {\n                    "effect": "NoExecute",\n                    "key": "string",\n                    "operator": "Equal",\n                    "tolerationSeconds": 0,\n                    "value": "string"\n                  }\n                ],\n                "topologySpreadConstraints": [\n                  {\n                    "labelSelector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "matchLabelKeys": [\n                      "string"\n                    ],\n                    "maxSkew": 0,\n                    "minDomains": 0,\n                    "nodeAffinityPolicy": "string",\n                    "nodeTaintsPolicy": "string",\n                    "topologyKey": "string",\n                    "whenUnsatisfiable": "DoNotSchedule"\n                  }\n                ],\n                "volumes": [\n                  {\n                    "cloudInitConfigDrive": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "cloudInitNoCloud": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "configMap": {\n                      "name": "string",\n                      "optional": true,\n                      "volumeLabel": "string"\n                    },\n                    "containerDisk": {\n                      "image": "string",\n                      "imagePullPolicy": "Always",\n                      "imagePullSecret": "string",\n                      "path": "string"\n                    },\n                    "dataVolume": {\n                      "hotpluggable": true,\n                      "name": "string"\n                    },\n                    "downwardAPI": {\n                      "fields": [\n                        {\n                          "fieldRef": {\n                            "apiVersion": "string",\n                            "fieldPath": "string"\n                          },\n                          "mode": 0,\n                          "path": "string",\n                          "resourceFieldRef": {\n                            "containerName": "string",\n                            "divisor": {},\n                            "resource": "string"\n                          }\n                        }\n                      ],\n                      "volumeLabel": "string"\n                    },\n                    "downwardMetrics": {},\n                    "emptyDisk": {\n                      "capacity": {}\n                    },\n                    "ephemeral": {\n                      "persistentVolumeClaim": {\n                        "claimName": "string",\n                        "readOnly": true\n                      }\n                    },\n                    "hostDisk": {\n                      "capacity": {},\n                      "path": "string",\n                      "shared": true,\n                      "type": "string"\n                    },\n                    "memoryDump": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "name": "string",\n                    "persistentVolumeClaim": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "secret": {\n                      "optional": true,\n                      "secretName": "string",\n                      "volumeLabel": "string"\n                    },\n                    "serviceAccount": {\n                      "serviceAccountName": "string"\n                    },\n                    "sysprep": {\n                      "configMap": {\n                        "name": "string"\n                      },\n                      "secret": {\n                        "name": "string"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "version": 0\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,i.kt)(y.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["templateId"],properties:{description:{type:"string"},imageId:{type:"string"},keyPairIds:{type:"array",items:{type:"string",default:""}},templateId:{type:"string",default:""},vm:{default:{},allOf:[{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["template"],properties:{dataVolumeTemplates:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind","spec"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{checkpoints:{type:"array",items:{default:{},allOf:[{type:"object",required:["current","previous"],properties:{current:{type:"string",default:""},previous:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint"}]}},contentType:{type:"string"},finalCheckpoint:{type:"boolean"},preallocation:{type:"boolean"},priorityClassName:{type:"string"},pvc:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"},source:{type:"object",properties:{blank:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage"},gcs:{type:"object",required:["url"],properties:{secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS"},http:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},extraHeaders:{type:"array",items:{type:"string",default:""}},secretExtraHeaders:{type:"array",items:{type:"string",default:""}},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP"},imageio:{type:"object",required:["diskId","url"],properties:{certConfigMap:{type:"string"},diskId:{type:"string",default:""},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO"},pvc:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC"},registry:{type:"object",properties:{certConfigMap:{type:"string"},imageStream:{type:"string"},pullMethod:{type:"string"},secretRef:{type:"string"},url:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry"},s3:{type:"object",required:["url"],properties:{certConfigMap:{type:"string"},secretRef:{type:"string"},url:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3"},snapshot:{type:"object",required:["name","namespace"],properties:{name:{type:"string",default:""},namespace:{type:"string",default:""}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot"},upload:{type:"object",title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload"},vddk:{type:"object",properties:{backingFile:{type:"string"},initImageURL:{type:"string"},secretRef:{type:"string"},thumbprint:{type:"string"},url:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource"},sourceRef:{type:"object",required:["kind","name"],properties:{kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef"},storage:{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec"}},title:"kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec"}]},status:{type:"object",title:"kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus"}},title:"kubevirt.io.api.core.v1.DataVolumeTemplateSpec"}]}},instancetype:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.InstancetypeMatcher"},liveUpdateFeatures:{type:"object",properties:{affinity:{type:"object",title:"kubevirt.io.api.core.v1.LiveUpdateAffinity"},cpu:{type:"object",properties:{maxSockets:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.LiveUpdateCPU"},memory:{type:"object",properties:{maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.LiveUpdateMemory"}},title:"kubevirt.io.api.core.v1.LiveUpdateFeatures"},preference:{type:"object",properties:{inferFromVolume:{type:"string"},inferFromVolumeFailurePolicy:{type:"string"},kind:{type:"string"},name:{type:"string"},revisionName:{type:"string"}},title:"kubevirt.io.api.core.v1.PreferenceMatcher"},runStrategy:{type:"string"},running:{type:"boolean"},template:{type:"object",properties:{metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["domain"],properties:{accessCredentials:{type:"array",items:{default:{},allOf:[{type:"object",properties:{sshPublicKey:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{configDrive:{type:"object",title:"kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"},noCloud:{type:"object",title:"kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation"},qemuGuestAgent:{type:"object",required:["users"],properties:{users:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"set"}},title:"kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential"},userPassword:{type:"object",required:["propagationMethod","source"],properties:{propagationMethod:{default:{},allOf:[{type:"object",properties:{qemuGuestAgent:{type:"object",title:"kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod"}]},source:{default:{},allOf:[{type:"object",properties:{secret:{type:"object",required:["secretName"],properties:{secretName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.AccessCredentialSecretSource"}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource"}]}},title:"kubevirt.io.api.core.v1.UserPasswordAccessCredential"}},title:"kubevirt.io.api.core.v1.AccessCredential"}]},"x-kubernetes-list-type":"atomic"},affinity:{type:"object",properties:{nodeAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["preference","weight"],properties:{preference:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.PreferredSchedulingTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"object",required:["nodeSelectorTerms"],properties:{nodeSelectorTerms:{type:"array",items:{default:{},allOf:[{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}},matchFields:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:""},operator:{type:"string",default:"",enum:["DoesNotExist","Exists","Gt","In","Lt","NotIn"]},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.NodeSelectorRequirement"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelectorTerm"}]}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.NodeSelector"}},title:"k8s.io.v1.NodeAffinity"},podAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAffinity"},podAntiAffinity:{type:"object",properties:{preferredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["podAffinityTerm","weight"],properties:{podAffinityTerm:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]},weight:{type:"integer",format:"int32",default:0}},title:"k8s.io.v1.WeightedPodAffinityTerm"}]}},requiredDuringSchedulingIgnoredDuringExecution:{type:"array",items:{default:{},allOf:[{type:"object",required:["topologyKey"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaceSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},namespaces:{type:"array",items:{type:"string",default:""}},topologyKey:{type:"string",default:""}},title:"k8s.io.v1.PodAffinityTerm"}]}}},title:"k8s.io.v1.PodAntiAffinity"}},title:"k8s.io.v1.Affinity"},architecture:{type:"string"},dnsConfig:{type:"object",properties:{nameservers:{type:"array",items:{type:"string",default:""}},options:{type:"array",items:{default:{},allOf:[{type:"object",properties:{name:{type:"string"},value:{type:"string"}},title:"k8s.io.v1.PodDNSConfigOption"}]}},searches:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.PodDNSConfig"},dnsPolicy:{type:"string",enum:["ClusterFirst","ClusterFirstWithHostNet","Default","None"]},domain:{default:{},allOf:[{type:"object",required:["devices"],properties:{chassis:{type:"object",properties:{asset:{type:"string"},manufacturer:{type:"string"},serial:{type:"string"},sku:{type:"string"},version:{type:"string"}},title:"kubevirt.io.api.core.v1.Chassis"},clock:{type:"object",properties:{timer:{type:"object",properties:{hpet:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.HPETTimer"},hyperv:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.HypervTimer"},kvm:{type:"object",properties:{present:{type:"boolean"}},title:"kubevirt.io.api.core.v1.KVMTimer"},pit:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"}},title:"kubevirt.io.api.core.v1.PITTimer"},rtc:{type:"object",properties:{present:{type:"boolean"},tickPolicy:{type:"string"},track:{type:"string"}},title:"kubevirt.io.api.core.v1.RTCTimer"}},title:"kubevirt.io.api.core.v1.Timer"},timezone:{type:"string"},utc:{type:"object",properties:{offsetSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.ClockOffsetUTC"}},title:"kubevirt.io.api.core.v1.Clock"},cpu:{type:"object",properties:{cores:{type:"integer",format:"int64"},dedicatedCpuPlacement:{type:"boolean"},features:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""},policy:{type:"string"}},title:"kubevirt.io.api.core.v1.CPUFeature"}]}},isolateEmulatorThread:{type:"boolean"},maxSockets:{type:"integer",format:"int64"},model:{type:"string"},numa:{type:"object",properties:{guestMappingPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough"}},title:"kubevirt.io.api.core.v1.NUMA"},realtime:{type:"object",properties:{mask:{type:"string"}},title:"kubevirt.io.api.core.v1.Realtime"},sockets:{type:"integer",format:"int64"},threads:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.CPU"},devices:{default:{},allOf:[{type:"object",properties:{autoattachGraphicsDevice:{type:"boolean"},autoattachInputDevice:{type:"boolean"},autoattachMemBalloon:{type:"boolean"},autoattachPodInterface:{type:"boolean"},autoattachSerialConsole:{type:"boolean"},autoattachVSOCK:{type:"boolean"},blockMultiQueue:{type:"boolean"},clientPassthrough:{type:"object",title:"kubevirt.io.api.core.v1.ClientPassthroughDevices"},disableHotplug:{type:"boolean"},disks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{blockSize:{type:"object",properties:{custom:{type:"object",required:["logical","physical"],properties:{logical:{type:"integer",format:"int32",default:0},physical:{type:"integer",format:"int32",default:0}},title:"kubevirt.io.api.core.v1.CustomBlockSize"},matchVolume:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.BlockSize"},bootOrder:{type:"integer",format:"int32"},cache:{type:"string"},cdrom:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},tray:{type:"string"}},title:"kubevirt.io.api.core.v1.CDRomTarget"},dedicatedIOThread:{type:"boolean"},disk:{type:"object",properties:{bus:{type:"string"},pciAddress:{type:"string"},readonly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.DiskTarget"},errorPolicy:{type:"string"},io:{type:"string"},lun:{type:"object",properties:{bus:{type:"string"},readonly:{type:"boolean"},reservation:{type:"boolean"}},title:"kubevirt.io.api.core.v1.LunTarget"},name:{type:"string",default:""},serial:{type:"string"},shareable:{type:"boolean"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Disk"}]}},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetrics"},filesystems:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","virtiofs"],properties:{name:{type:"string",default:""},virtiofs:{type:"object",title:"kubevirt.io.api.core.v1.FilesystemVirtiofs"}},title:"kubevirt.io.api.core.v1.Filesystem"}]},"x-kubernetes-list-type":"atomic"},gpus:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"},virtualGPUOptions:{type:"object",properties:{display:{type:"object",properties:{enabled:{type:"boolean"},ramFB:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.VGPUDisplayOptions"}},title:"kubevirt.io.api.core.v1.VGPUOptions"}},title:"kubevirt.io.api.core.v1.GPU"}]},"x-kubernetes-list-type":"atomic"},hostDevices:{type:"array",items:{default:{},allOf:[{type:"object",required:["deviceName","name"],properties:{deviceName:{type:"string",default:""},name:{type:"string",default:""},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.HostDevice"}]},"x-kubernetes-list-type":"atomic"},inputs:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","type"],properties:{bus:{type:"string"},name:{type:"string",default:""},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Input"}]}},interfaces:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{acpiIndex:{type:"integer",format:"int32"},binding:{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.PluginBinding"},bootOrder:{type:"integer",format:"int32"},bridge:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceBridge"},dhcpOptions:{type:"object",properties:{bootFileName:{type:"string"},ntpServers:{type:"array",items:{type:"string",default:""}},privateOptions:{type:"array",items:{default:{},allOf:[{type:"object",required:["option","value"],properties:{option:{type:"integer",format:"int32",default:0},value:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DHCPPrivateOptions"}]}},tftpServerName:{type:"string"}},title:"kubevirt.io.api.core.v1.DHCPOptions"},macAddress:{type:"string"},macvtap:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMacvtap"},masquerade:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceMasquerade"},model:{type:"string"},name:{type:"string",default:""},passt:{type:"object",title:"kubevirt.io.api.core.v1.InterfacePasst"},pciAddress:{type:"string"},ports:{type:"array",items:{default:{},allOf:[{type:"object",required:["port"],properties:{name:{type:"string"},port:{type:"integer",format:"int32",default:0},protocol:{type:"string"}},title:"kubevirt.io.api.core.v1.Port"}]}},slirp:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSlirp"},sriov:{type:"object",title:"kubevirt.io.api.core.v1.InterfaceSRIOV"},state:{type:"string"},tag:{type:"string"}},title:"kubevirt.io.api.core.v1.Interface"}]}},logSerialConsole:{type:"boolean"},networkInterfaceMultiqueue:{type:"boolean"},rng:{type:"object",title:"kubevirt.io.api.core.v1.Rng"},sound:{type:"object",required:["name"],properties:{model:{type:"string"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.SoundDevice"},tpm:{type:"object",properties:{persistent:{type:"boolean"}},title:"kubevirt.io.api.core.v1.TPMDevice"},useVirtioTransitional:{type:"boolean"},watchdog:{type:"object",required:["name"],properties:{i6300esb:{type:"object",properties:{action:{type:"string"}},title:"kubevirt.io.api.core.v1.I6300ESBWatchdog"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Watchdog"}},title:"kubevirt.io.api.core.v1.Devices"}]},features:{type:"object",properties:{acpi:{default:{},allOf:[{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}]},apic:{type:"object",properties:{enabled:{type:"boolean"},endOfInterrupt:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureAPIC"},hyperv:{type:"object",properties:{evmcs:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},frequencies:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},ipi:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reenlightenment:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},relaxed:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},reset:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},runtime:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},spinlocks:{type:"object",properties:{enabled:{type:"boolean"},spinlocks:{type:"integer",format:"int64"}},title:"kubevirt.io.api.core.v1.FeatureSpinlocks"},synic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},synictimer:{type:"object",properties:{direct:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SyNICTimer"},tlbflush:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vapic:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},vendorid:{type:"object",properties:{enabled:{type:"boolean"},vendorid:{type:"string"}},title:"kubevirt.io.api.core.v1.FeatureVendorID"},vpindex:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.FeatureHyperv"},kvm:{type:"object",properties:{hidden:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureKVM"},pvspinlock:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"},smm:{type:"object",properties:{enabled:{type:"boolean"}},title:"kubevirt.io.api.core.v1.FeatureState"}},title:"kubevirt.io.api.core.v1.Features"},firmware:{type:"object",properties:{bootloader:{type:"object",properties:{bios:{type:"object",properties:{useSerial:{type:"boolean"}},title:"kubevirt.io.api.core.v1.BIOS"},efi:{type:"object",properties:{persistent:{type:"boolean"},secureBoot:{type:"boolean"}},title:"kubevirt.io.api.core.v1.EFI"}},title:"kubevirt.io.api.core.v1.Bootloader"},kernelBoot:{type:"object",properties:{container:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},initrdPath:{type:"string"},kernelPath:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBootContainer"},kernelArgs:{type:"string"}},title:"kubevirt.io.api.core.v1.KernelBoot"},serial:{type:"string"},uuid:{type:"string"}},title:"kubevirt.io.api.core.v1.Firmware"},ioThreadsPolicy:{type:"string"},launchSecurity:{type:"object",properties:{sev:{type:"object",properties:{attestation:{type:"object",title:"kubevirt.io.api.core.v1.SEVAttestation"},dhCert:{type:"string"},policy:{type:"object",properties:{encryptedState:{type:"boolean"}},title:"kubevirt.io.api.core.v1.SEVPolicy"},session:{type:"string"}},title:"kubevirt.io.api.core.v1.SEV"}},title:"kubevirt.io.api.core.v1.LaunchSecurity"},machine:{type:"object",properties:{type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.Machine"},memory:{type:"object",properties:{guest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"},hugepages:{type:"object",properties:{pageSize:{type:"string"}},title:"kubevirt.io.api.core.v1.Hugepages"},maxGuest:{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}},title:"kubevirt.io.api.core.v1.Memory"},resources:{default:{},allOf:[{type:"object",properties:{limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},overcommitGuestOverhead:{type:"boolean"},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"kubevirt.io.api.core.v1.ResourceRequirements"}]}},title:"kubevirt.io.api.core.v1.DomainSpec"}]},evictionStrategy:{type:"string"},hostname:{type:"string"},livenessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},networks:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{multus:{type:"object",required:["networkName"],properties:{default:{type:"boolean"},networkName:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.MultusNetwork"},name:{type:"string",default:""},pod:{type:"object",properties:{vmIPv6NetworkCIDR:{type:"string"},vmNetworkCIDR:{type:"string"}},title:"kubevirt.io.api.core.v1.PodNetwork"}},title:"kubevirt.io.api.core.v1.Network"}]}},nodeSelector:{type:"object",additionalProperties:{type:"string",default:""}},priorityClassName:{type:"string"},readinessProbe:{type:"object",properties:{exec:{type:"object",properties:{command:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.ExecAction"},failureThreshold:{type:"integer",format:"int32"},guestAgentPing:{type:"object",title:"kubevirt.io.api.core.v1.GuestAgentPing"},httpGet:{type:"object",required:["port"],properties:{host:{type:"string"},httpHeaders:{type:"array",items:{default:{},allOf:[{type:"object",required:["name","value"],properties:{name:{type:"string",default:""},value:{type:"string",default:""}},title:"k8s.io.v1.HTTPHeader"}]}},path:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]},scheme:{type:"string",enum:["HTTP","HTTPS"]}},title:"k8s.io.v1.HTTPGetAction"},initialDelaySeconds:{type:"integer",format:"int32"},periodSeconds:{type:"integer",format:"int32"},successThreshold:{type:"integer",format:"int32"},tcpSocket:{type:"object",required:["port"],properties:{host:{type:"string"},port:{default:{},allOf:[{type:"string",format:"int-or-string",title:"k8s.io.apimachinery.pkg.util.intstr.IntOrString"}]}},title:"k8s.io.v1.TCPSocketAction"},timeoutSeconds:{type:"integer",format:"int32"}},title:"kubevirt.io.api.core.v1.Probe"},schedulerName:{type:"string"},startStrategy:{type:"string"},subdomain:{type:"string"},terminationGracePeriodSeconds:{type:"integer",format:"int64"},tolerations:{type:"array",items:{default:{},allOf:[{type:"object",properties:{effect:{type:"string",enum:["NoExecute","NoSchedule","PreferNoSchedule"]},key:{type:"string"},operator:{type:"string",enum:["Equal","Exists"]},tolerationSeconds:{type:"integer",format:"int64"},value:{type:"string"}},title:"k8s.io.v1.Toleration"}]}},topologySpreadConstraints:{type:"array",items:{default:{},allOf:[{type:"object",required:["maxSkew","topologyKey","whenUnsatisfiable"],properties:{labelSelector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},matchLabelKeys:{type:"array",items:{type:"string",default:""},"x-kubernetes-list-type":"atomic"},maxSkew:{type:"integer",format:"int32",default:0},minDomains:{type:"integer",format:"int32"},nodeAffinityPolicy:{type:"string"},nodeTaintsPolicy:{type:"string"},topologyKey:{type:"string",default:""},whenUnsatisfiable:{type:"string",default:"",enum:["DoNotSchedule","ScheduleAnyway"]}},title:"k8s.io.v1.TopologySpreadConstraint"}]},"x-kubernetes-list-map-keys":["topologyKey","whenUnsatisfiable"],"x-kubernetes-list-type":"map","x-kubernetes-patch-merge-key":"topologyKey","x-kubernetes-patch-strategy":"merge"},volumes:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{cloudInitConfigDrive:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitConfigDriveSource"},cloudInitNoCloud:{type:"object",properties:{networkData:{type:"string"},networkDataBase64:{type:"string"},networkDataSecretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secretRef:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},userData:{type:"string"},userDataBase64:{type:"string"}},title:"kubevirt.io.api.core.v1.CloudInitNoCloudSource"},configMap:{type:"object",properties:{name:{type:"string"},optional:{type:"boolean"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.ConfigMapVolumeSource"},containerDisk:{type:"object",required:["image"],properties:{image:{type:"string",default:""},imagePullPolicy:{type:"string",enum:["Always","IfNotPresent","Never"]},imagePullSecret:{type:"string"},path:{type:"string"}},title:"kubevirt.io.api.core.v1.ContainerDiskSource"},dataVolume:{type:"object",required:["name"],properties:{hotpluggable:{type:"boolean"},name:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.DataVolumeSource"},downwardAPI:{type:"object",properties:{fields:{type:"array",items:{default:{},allOf:[{type:"object",required:["path"],properties:{fieldRef:{type:"object",required:["fieldPath"],properties:{apiVersion:{type:"string"},fieldPath:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ObjectFieldSelector"},mode:{type:"integer",format:"int32"},path:{type:"string",default:""},resourceFieldRef:{type:"object",required:["resource"],properties:{containerName:{type:"string"},divisor:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},resource:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.ResourceFieldSelector"}},title:"k8s.io.v1.DownwardAPIVolumeFile"}]}},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.DownwardAPIVolumeSource"},downwardMetrics:{type:"object",title:"kubevirt.io.api.core.v1.DownwardMetricsVolumeSource"},emptyDisk:{type:"object",required:["capacity"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},title:"kubevirt.io.api.core.v1.EmptyDiskSource"},ephemeral:{type:"object",properties:{persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},readOnly:{type:"boolean"}},title:"k8s.io.v1.PersistentVolumeClaimVolumeSource"}},title:"kubevirt.io.api.core.v1.EphemeralVolumeSource"},hostDisk:{type:"object",required:["path","type"],properties:{capacity:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]},path:{type:"string",default:""},shared:{type:"boolean"},type:{type:"string",default:""}},title:"kubevirt.io.api.core.v1.HostDisk"},memoryDump:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.MemoryDumpVolumeSource"},name:{type:"string",default:""},persistentVolumeClaim:{type:"object",required:["claimName"],properties:{claimName:{type:"string",default:""},hotpluggable:{type:"boolean"},readOnly:{type:"boolean"}},title:"kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource"},secret:{type:"object",properties:{optional:{type:"boolean"},secretName:{type:"string"},volumeLabel:{type:"string"}},title:"kubevirt.io.api.core.v1.SecretVolumeSource"},serviceAccount:{type:"object",properties:{serviceAccountName:{type:"string"}},title:"kubevirt.io.api.core.v1.ServiceAccountVolumeSource"},sysprep:{type:"object",properties:{configMap:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"},secret:{type:"object",properties:{name:{type:"string"}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LocalObjectReference"}},title:"kubevirt.io.api.core.v1.SysprepSource"}},title:"kubevirt.io.api.core.v1.Volume"}]}}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceSpec"}]}},title:"kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec"}},title:"kubevirt.io.api.core.v1.VirtualMachineSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineSourceSpec"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec"}]},status:{default:{},allOf:[{type:"object",properties:{conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"harvesterhci.io.v1beta1.Condition"}]}},version:{type:"integer",format:"int32"}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus"}]}},title:"harvesterhci.io.v1beta1.VirtualMachineTemplateVersion"}]}},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,i.kt)("span",{className:"openapi-schema__name"}," object"),(0,i.kt)("span",{className:"openapi-schema__divider"}),(0,i.kt)("span",{className:"openapi-schema__required"},"required"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,i.kt)(y.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "description": "string",\n        "imageId": "string",\n        "keyPairIds": [\n          "string"\n        ],\n        "templateId": "string",\n        "vm": {\n          "metadata": {\n            "name": "string",\n            "namespace": "string"\n          },\n          "spec": {\n            "dataVolumeTemplates": [\n              {\n                "apiVersion": "string",\n                "kind": "string",\n                "metadata": {\n                  "name": "string",\n                  "namespace": "string"\n                },\n                "spec": {\n                  "checkpoints": [\n                    {\n                      "current": "string",\n                      "previous": "string"\n                    }\n                  ],\n                  "contentType": "string",\n                  "finalCheckpoint": true,\n                  "preallocation": true,\n                  "priorityClassName": "string",\n                  "pvc": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  },\n                  "source": {\n                    "blank": {},\n                    "gcs": {\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "http": {\n                      "certConfigMap": "string",\n                      "extraHeaders": [\n                        "string"\n                      ],\n                      "secretExtraHeaders": [\n                        "string"\n                      ],\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "imageio": {\n                      "certConfigMap": "string",\n                      "diskId": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "pvc": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "registry": {\n                      "certConfigMap": "string",\n                      "imageStream": "string",\n                      "pullMethod": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "s3": {\n                      "certConfigMap": "string",\n                      "secretRef": "string",\n                      "url": "string"\n                    },\n                    "snapshot": {\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "upload": {},\n                    "vddk": {\n                      "backingFile": "string",\n                      "initImageURL": "string",\n                      "secretRef": "string",\n                      "thumbprint": "string",\n                      "url": "string",\n                      "uuid": "string"\n                    }\n                  },\n                  "sourceRef": {\n                    "kind": "string",\n                    "name": "string",\n                    "namespace": "string"\n                  },\n                  "storage": {\n                    "accessModes": [\n                      "string"\n                    ],\n                    "dataSource": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string"\n                    },\n                    "dataSourceRef": {\n                      "apiGroup": "string",\n                      "kind": "string",\n                      "name": "string",\n                      "namespace": "string"\n                    },\n                    "resources": {\n                      "claims": [\n                        {\n                          "name": "string"\n                        }\n                      ],\n                      "limits": {},\n                      "requests": {}\n                    },\n                    "selector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "storageClassName": "string",\n                    "volumeMode": "string",\n                    "volumeName": "string"\n                  }\n                },\n                "status": {}\n              }\n            ],\n            "instancetype": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "liveUpdateFeatures": {\n              "affinity": {},\n              "cpu": {\n                "maxSockets": 0\n              },\n              "memory": {\n                "maxGuest": "string"\n              }\n            },\n            "preference": {\n              "inferFromVolume": "string",\n              "inferFromVolumeFailurePolicy": "string",\n              "kind": "string",\n              "name": "string",\n              "revisionName": "string"\n            },\n            "runStrategy": "string",\n            "running": true,\n            "template": {\n              "metadata": {\n                "name": "string",\n                "namespace": "string"\n              },\n              "spec": {\n                "accessCredentials": [\n                  {\n                    "sshPublicKey": {\n                      "propagationMethod": {\n                        "configDrive": {},\n                        "noCloud": {},\n                        "qemuGuestAgent": {\n                          "users": [\n                            "string"\n                          ]\n                        }\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    },\n                    "userPassword": {\n                      "propagationMethod": {\n                        "qemuGuestAgent": {}\n                      },\n                      "source": {\n                        "secret": {\n                          "secretName": "string"\n                        }\n                      }\n                    }\n                  }\n                ],\n                "affinity": {\n                  "nodeAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "preference": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": {\n                      "nodeSelectorTerms": [\n                        {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchFields": [\n                            {\n                              "key": "string",\n                              "operator": "DoesNotExist",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  "podAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  },\n                  "podAntiAffinity": {\n                    "preferredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "podAffinityTerm": {\n                          "labelSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaceSelector": {\n                            "matchExpressions": [\n                              {\n                                "key": "string",\n                                "operator": "string",\n                                "values": [\n                                  "string"\n                                ]\n                              }\n                            ],\n                            "matchLabels": {}\n                          },\n                          "namespaces": [\n                            "string"\n                          ],\n                          "topologyKey": "string"\n                        },\n                        "weight": 0\n                      }\n                    ],\n                    "requiredDuringSchedulingIgnoredDuringExecution": [\n                      {\n                        "labelSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaceSelector": {\n                          "matchExpressions": [\n                            {\n                              "key": "string",\n                              "operator": "string",\n                              "values": [\n                                "string"\n                              ]\n                            }\n                          ],\n                          "matchLabels": {}\n                        },\n                        "namespaces": [\n                          "string"\n                        ],\n                        "topologyKey": "string"\n                      }\n                    ]\n                  }\n                },\n                "architecture": "string",\n                "dnsConfig": {\n                  "nameservers": [\n                    "string"\n                  ],\n                  "options": [\n                    {\n                      "name": "string",\n                      "value": "string"\n                    }\n                  ],\n                  "searches": [\n                    "string"\n                  ]\n                },\n                "dnsPolicy": "ClusterFirst",\n                "domain": {\n                  "chassis": {\n                    "asset": "string",\n                    "manufacturer": "string",\n                    "serial": "string",\n                    "sku": "string",\n                    "version": "string"\n                  },\n                  "clock": {\n                    "timer": {\n                      "hpet": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "hyperv": {\n                        "present": true\n                      },\n                      "kvm": {\n                        "present": true\n                      },\n                      "pit": {\n                        "present": true,\n                        "tickPolicy": "string"\n                      },\n                      "rtc": {\n                        "present": true,\n                        "tickPolicy": "string",\n                        "track": "string"\n                      }\n                    },\n                    "timezone": "string",\n                    "utc": {\n                      "offsetSeconds": 0\n                    }\n                  },\n                  "cpu": {\n                    "cores": 0,\n                    "dedicatedCpuPlacement": true,\n                    "features": [\n                      {\n                        "name": "string",\n                        "policy": "string"\n                      }\n                    ],\n                    "isolateEmulatorThread": true,\n                    "maxSockets": 0,\n                    "model": "string",\n                    "numa": {\n                      "guestMappingPassthrough": {}\n                    },\n                    "realtime": {\n                      "mask": "string"\n                    },\n                    "sockets": 0,\n                    "threads": 0\n                  },\n                  "devices": {\n                    "autoattachGraphicsDevice": true,\n                    "autoattachInputDevice": true,\n                    "autoattachMemBalloon": true,\n                    "autoattachPodInterface": true,\n                    "autoattachSerialConsole": true,\n                    "autoattachVSOCK": true,\n                    "blockMultiQueue": true,\n                    "clientPassthrough": {},\n                    "disableHotplug": true,\n                    "disks": [\n                      {\n                        "blockSize": {\n                          "custom": {\n                            "logical": 0,\n                            "physical": 0\n                          },\n                          "matchVolume": {\n                            "enabled": true\n                          }\n                        },\n                        "bootOrder": 0,\n                        "cache": "string",\n                        "cdrom": {\n                          "bus": "string",\n                          "readonly": true,\n                          "tray": "string"\n                        },\n                        "dedicatedIOThread": true,\n                        "disk": {\n                          "bus": "string",\n                          "pciAddress": "string",\n                          "readonly": true\n                        },\n                        "errorPolicy": "string",\n                        "io": "string",\n                        "lun": {\n                          "bus": "string",\n                          "readonly": true,\n                          "reservation": true\n                        },\n                        "name": "string",\n                        "serial": "string",\n                        "shareable": true,\n                        "tag": "string"\n                      }\n                    ],\n                    "downwardMetrics": {},\n                    "filesystems": [\n                      {\n                        "name": "string",\n                        "virtiofs": {}\n                      }\n                    ],\n                    "gpus": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string",\n                        "virtualGPUOptions": {\n                          "display": {\n                            "enabled": true,\n                            "ramFB": {\n                              "enabled": true\n                            }\n                          }\n                        }\n                      }\n                    ],\n                    "hostDevices": [\n                      {\n                        "deviceName": "string",\n                        "name": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "inputs": [\n                      {\n                        "bus": "string",\n                        "name": "string",\n                        "type": "string"\n                      }\n                    ],\n                    "interfaces": [\n                      {\n                        "acpiIndex": 0,\n                        "binding": {\n                          "name": "string"\n                        },\n                        "bootOrder": 0,\n                        "bridge": {},\n                        "dhcpOptions": {\n                          "bootFileName": "string",\n                          "ntpServers": [\n                            "string"\n                          ],\n                          "privateOptions": [\n                            {\n                              "option": 0,\n                              "value": "string"\n                            }\n                          ],\n                          "tftpServerName": "string"\n                        },\n                        "macAddress": "string",\n                        "macvtap": {},\n                        "masquerade": {},\n                        "model": "string",\n                        "name": "string",\n                        "passt": {},\n                        "pciAddress": "string",\n                        "ports": [\n                          {\n                            "name": "string",\n                            "port": 0,\n                            "protocol": "string"\n                          }\n                        ],\n                        "slirp": {},\n                        "sriov": {},\n                        "state": "string",\n                        "tag": "string"\n                      }\n                    ],\n                    "logSerialConsole": true,\n                    "networkInterfaceMultiqueue": true,\n                    "rng": {},\n                    "sound": {\n                      "model": "string",\n                      "name": "string"\n                    },\n                    "tpm": {\n                      "persistent": true\n                    },\n                    "useVirtioTransitional": true,\n                    "watchdog": {\n                      "i6300esb": {\n                        "action": "string"\n                      },\n                      "name": "string"\n                    }\n                  },\n                  "features": {\n                    "acpi": {\n                      "enabled": true\n                    },\n                    "apic": {\n                      "enabled": true,\n                      "endOfInterrupt": true\n                    },\n                    "hyperv": {\n                      "evmcs": {\n                        "enabled": true\n                      },\n                      "frequencies": {\n                        "enabled": true\n                      },\n                      "ipi": {\n                        "enabled": true\n                      },\n                      "reenlightenment": {\n                        "enabled": true\n                      },\n                      "relaxed": {\n                        "enabled": true\n                      },\n                      "reset": {\n                        "enabled": true\n                      },\n                      "runtime": {\n                        "enabled": true\n                      },\n                      "spinlocks": {\n                        "enabled": true,\n                        "spinlocks": 0\n                      },\n                      "synic": {\n                        "enabled": true\n                      },\n                      "synictimer": {\n                        "direct": {\n                          "enabled": true\n                        },\n                        "enabled": true\n                      },\n                      "tlbflush": {\n                        "enabled": true\n                      },\n                      "vapic": {\n                        "enabled": true\n                      },\n                      "vendorid": {\n                        "enabled": true,\n                        "vendorid": "string"\n                      },\n                      "vpindex": {\n                        "enabled": true\n                      }\n                    },\n                    "kvm": {\n                      "hidden": true\n                    },\n                    "pvspinlock": {\n                      "enabled": true\n                    },\n                    "smm": {\n                      "enabled": true\n                    }\n                  },\n                  "firmware": {\n                    "bootloader": {\n                      "bios": {\n                        "useSerial": true\n                      },\n                      "efi": {\n                        "persistent": true,\n                        "secureBoot": true\n                      }\n                    },\n                    "kernelBoot": {\n                      "container": {\n                        "image": "string",\n                        "imagePullPolicy": "Always",\n                        "imagePullSecret": "string",\n                        "initrdPath": "string",\n                        "kernelPath": "string"\n                      },\n                      "kernelArgs": "string"\n                    },\n                    "serial": "string",\n                    "uuid": "string"\n                  },\n                  "ioThreadsPolicy": "string",\n                  "launchSecurity": {\n                    "sev": {\n                      "attestation": {},\n                      "dhCert": "string",\n                      "policy": {\n                        "encryptedState": true\n                      },\n                      "session": "string"\n                    }\n                  },\n                  "machine": {\n                    "type": "string"\n                  },\n                  "memory": {\n                    "guest": "string",\n                    "hugepages": {\n                      "pageSize": "string"\n                    },\n                    "maxGuest": "string"\n                  },\n                  "resources": {\n                    "limits": {},\n                    "overcommitGuestOverhead": true,\n                    "requests": {}\n                  }\n                },\n                "evictionStrategy": "string",\n                "hostname": "string",\n                "livenessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "networks": [\n                  {\n                    "multus": {\n                      "default": true,\n                      "networkName": "string"\n                    },\n                    "name": "string",\n                    "pod": {\n                      "vmIPv6NetworkCIDR": "string",\n                      "vmNetworkCIDR": "string"\n                    }\n                  }\n                ],\n                "nodeSelector": {},\n                "priorityClassName": "string",\n                "readinessProbe": {\n                  "exec": {\n                    "command": [\n                      "string"\n                    ]\n                  },\n                  "failureThreshold": 0,\n                  "guestAgentPing": {},\n                  "httpGet": {\n                    "host": "string",\n                    "httpHeaders": [\n                      {\n                        "name": "string",\n                        "value": "string"\n                      }\n                    ],\n                    "path": "string",\n                    "port": {},\n                    "scheme": "HTTP"\n                  },\n                  "initialDelaySeconds": 0,\n                  "periodSeconds": 0,\n                  "successThreshold": 0,\n                  "tcpSocket": {\n                    "host": "string",\n                    "port": {}\n                  },\n                  "timeoutSeconds": 0\n                },\n                "schedulerName": "string",\n                "startStrategy": "string",\n                "subdomain": "string",\n                "terminationGracePeriodSeconds": 0,\n                "tolerations": [\n                  {\n                    "effect": "NoExecute",\n                    "key": "string",\n                    "operator": "Equal",\n                    "tolerationSeconds": 0,\n                    "value": "string"\n                  }\n                ],\n                "topologySpreadConstraints": [\n                  {\n                    "labelSelector": {\n                      "matchExpressions": [\n                        {\n                          "key": "string",\n                          "operator": "string",\n                          "values": [\n                            "string"\n                          ]\n                        }\n                      ],\n                      "matchLabels": {}\n                    },\n                    "matchLabelKeys": [\n                      "string"\n                    ],\n                    "maxSkew": 0,\n                    "minDomains": 0,\n                    "nodeAffinityPolicy": "string",\n                    "nodeTaintsPolicy": "string",\n                    "topologyKey": "string",\n                    "whenUnsatisfiable": "DoNotSchedule"\n                  }\n                ],\n                "volumes": [\n                  {\n                    "cloudInitConfigDrive": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "cloudInitNoCloud": {\n                      "networkData": "string",\n                      "networkDataBase64": "string",\n                      "networkDataSecretRef": {\n                        "name": "string"\n                      },\n                      "secretRef": {\n                        "name": "string"\n                      },\n                      "userData": "string",\n                      "userDataBase64": "string"\n                    },\n                    "configMap": {\n                      "name": "string",\n                      "optional": true,\n                      "volumeLabel": "string"\n                    },\n                    "containerDisk": {\n                      "image": "string",\n                      "imagePullPolicy": "Always",\n                      "imagePullSecret": "string",\n                      "path": "string"\n                    },\n                    "dataVolume": {\n                      "hotpluggable": true,\n                      "name": "string"\n                    },\n                    "downwardAPI": {\n                      "fields": [\n                        {\n                          "fieldRef": {\n                            "apiVersion": "string",\n                            "fieldPath": "string"\n                          },\n                          "mode": 0,\n                          "path": "string",\n                          "resourceFieldRef": {\n                            "containerName": "string",\n                            "divisor": {},\n                            "resource": "string"\n                          }\n                        }\n                      ],\n                      "volumeLabel": "string"\n                    },\n                    "downwardMetrics": {},\n                    "emptyDisk": {\n                      "capacity": {}\n                    },\n                    "ephemeral": {\n                      "persistentVolumeClaim": {\n                        "claimName": "string",\n                        "readOnly": true\n                      }\n                    },\n                    "hostDisk": {\n                      "capacity": {},\n                      "path": "string",\n                      "shared": true,\n                      "type": "string"\n                    },\n                    "memoryDump": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "name": "string",\n                    "persistentVolumeClaim": {\n                      "claimName": "string",\n                      "hotpluggable": true,\n                      "readOnly": true\n                    },\n                    "secret": {\n                      "optional": true,\n                      "secretName": "string",\n                      "volumeLabel": "string"\n                    },\n                    "serviceAccount": {\n                      "serviceAccountName": "string"\n                    },\n                    "sysprep": {\n                      "configMap": {\n                        "name": "string"\n                      },\n                      "secret": {\n                        "name": "string"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "version": 0\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(y.default,{label:"401",value:"401",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Unauthorized")),(0,i.kt)("div",null,(0,i.kt)(s.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(y.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"string"))))))),(0,i.kt)(y.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"string"))))))),(0,i.kt)(y.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(y.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"string"))))))))))))))}h.isMDXComponent=!0}}]);